{"version":3,"sources":["sweetalert-dev.js","formValidation.js","bootstrap.js"],"names":[],"mappingspwxfile":"libs.js","sourcesContent":[";(function(window, document, undefined) {\n  \"use strict\";\n  \n  (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n// SweetAlert\n// 2014-2015 (c) - Tristan Edwards\n// github.com/t4t5/sweetalert\n\n/*\n * jQuery-like functions for manipulating the DOM\n */\n\nvar _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation = require('./modules/handle-dom');\n\n/*\n * Handy utilities\n */\n\nvar _extend$hexToRgb$isIE8$logStr$colorLuminance = require('./modules/utils');\n\n/*\n *  Handle sweetAlert's DOM elements\n */\n\nvar _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition = require('./modules/handle-swal-dom');\n\n// Handle button events and keyboard events\n\nvar _handleButton$handleConfirm$handleCancel = require('./modules/handle-click');\n\nvar _handleKeyDown = require('./modules/handle-key');\n\nvar _handleKeyDown2 = _interopRequireWildcard(_handleKeyDown);\n\n// Default values\n\nvar _defaultParams = require('./modules/default-params');\n\nvar _defaultParams2 = _interopRequireWildcard(_defaultParams);\n\nvar _setParameters = require('./modules/set-params');\n\nvar _setParameters2 = _interopRequireWildcard(_setParameters);\n\n/*\n * Remember state in cases where opening and handling a modal will fiddle with it.\n * (We also use window.previousActiveElement as a global variable)\n */\nvar previousWindowKeyDown;\nvar lastFocusedButton;\n\n/*\n * Global sweetAlert function\n * (this is what the user calls)\n */\nvar sweetAlert, swal;\n\nexports['default'] = sweetAlert = swal = function () {\n  var customizations = arguments[0];\n\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass(document.body, 'stop-scrolling');\n  _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.resetInput();\n\n  /*\n   * Use argument if defined or default value from params object otherwise.\n   * Supports the case where a default value is boolean true and should be\n   * overridden by a corresponding explicit argument which is boolean false.\n   */\n  function argumentOrDefault(key) {\n    var args = customizations;\n    return args[key] === undefined ? _defaultParams2['default'][key] : args[key];\n  }\n\n  if (customizations === undefined) {\n    _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('SweetAlert expects at least 1 attribute!');\n    return false;\n  }\n\n  var params = _extend$hexToRgb$isIE8$logStr$colorLuminance.extend({}, _defaultParams2['default']);\n\n  switch (typeof customizations) {\n\n    // Ex: swal(\"Hello\", \"Just testing\", \"info\");\n    case 'string':\n      params.title = customizations;\n      params.text = arguments[1] || '';\n      params.type = arguments[2] || '';\n      break;\n\n    // Ex: swal({ title:\"Hello\", text: \"Just testing\", type: \"info\" });\n    case 'object':\n      if (customizations.title === undefined) {\n        _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('Missing \"title\" argument!');\n        return false;\n      }\n\n      params.title = customizations.title;\n\n      for (var customName in _defaultParams2['default']) {\n        params[customName] = argumentOrDefault(customName);\n      }\n\n      // Show \"Confirm\" instead of \"OK\" if cancel button is visible\n      params.confirmButtonText = params.showCancelButton ? 'Confirm' : _defaultParams2['default'].confirmButtonText;\n      params.confirmButtonText = argumentOrDefault('confirmButtonText');\n\n      // Callback function when clicking on \"OK\"/\"Cancel\"\n      params.doneFunction = arguments[1] || null;\n\n      break;\n\n    default:\n      _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('Unexpected type of argument! Expected \"string\" or \"object\", got ' + typeof customizations);\n      return false;\n\n  }\n\n  _setParameters2['default'](params);\n  _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.fixVerticalPosition();\n  _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.openModal(arguments[1]);\n\n  // Modal interactions\n  var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n  /*\n   * Make sure all modal buttons respond to all events\n   */\n  var $buttons = modal.querySelectorAll('button');\n  var buttonEvents = ['onclick', 'onmouseover', 'onmouseout', 'onmousedown', 'onmouseup', 'onfocus'];\n  var onButtonEvent = function onButtonEvent(e) {\n    return _handleButton$handleConfirm$handleCancel.handleButton(e, params, modal);\n  };\n\n  for (var btnIndex = 0; btnIndex < $buttons.length; btnIndex++) {\n    for (var evtIndex = 0; evtIndex < buttonEvents.length; evtIndex++) {\n      var btnEvt = buttonEvents[evtIndex];\n      $buttons[btnIndex][btnEvt] = onButtonEvent;\n    }\n  }\n\n  // Clicking outside the modal dismisses it (if allowed by user)\n  _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getOverlay().onclick = onButtonEvent;\n\n  previousWindowKeyDown = window.onkeydown;\n\n  var onKeyEvent = function onKeyEvent(e) {\n    return _handleKeyDown2['default'](e, params, modal);\n  };\n  window.onkeydown = onKeyEvent;\n\n  window.onfocus = function () {\n    // When the user has focused away and focused back from the whole window.\n    setTimeout(function () {\n      // Put in a timeout to jump out of the event sequence.\n      // Calling focus() in the event sequence confuses things.\n      if (lastFocusedButton !== undefined) {\n        lastFocusedButton.focus();\n        lastFocusedButton = undefined;\n      }\n    }, 0);\n  };\n\n  // Show alert with enabled buttons always\n  swal.enableButtons();\n};\n\n/*\n * Set default params for each popup\n * @param {Object} userParams\n */\nsweetAlert.setDefaults = swal.setDefaults = function (userParams) {\n  if (!userParams) {\n    throw new Error('userParams is required');\n  }\n  if (typeof userParams !== 'object') {\n    throw new Error('userParams has to be a object');\n  }\n\n  _extend$hexToRgb$isIE8$logStr$colorLuminance.extend(_defaultParams2['default'], userParams);\n};\n\n/*\n * Animation when closing modal\n */\nsweetAlert.close = swal.close = function () {\n  var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.fadeOut(_sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getOverlay(), 5);\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.fadeOut(modal, 5);\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, 'showSweetAlert');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass(modal, 'hideSweetAlert');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, 'visible');\n\n  /*\n   * Reset icon animations\n   */\n  var $successIcon = modal.querySelector('.sa-icon.sa-success');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon, 'animate');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon.querySelector('.sa-tip'), 'animateSuccessTip');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon.querySelector('.sa-long'), 'animateSuccessLong');\n\n  var $errorIcon = modal.querySelector('.sa-icon.sa-error');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon, 'animateErrorIcon');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon.querySelector('.sa-x-mark'), 'animateXMark');\n\n  var $warningIcon = modal.querySelector('.sa-icon.sa-warning');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon, 'pulseWarning');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon.querySelector('.sa-body'), 'pulseWarningIns');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon.querySelector('.sa-dot'), 'pulseWarningIns');\n\n  // Reset custom class (delay so that UI changes aren't visible)\n  setTimeout(function () {\n    var customClass = modal.getAttribute('data-custom-class');\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, customClass);\n  }, 300);\n\n  // Make page scrollable again\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(document.body, 'stop-scrolling');\n\n  // Reset the page to its previous state\n  window.onkeydown = previousWindowKeyDown;\n  if (window.previousActiveElement) {\n    window.previousActiveElement.focus();\n  }\n  lastFocusedButton = undefined;\n  clearTimeout(modal.timeout);\n\n  return true;\n};\n\n/*\n * Validation of the input field is done by user\n * If something is wrong => call showInputError with errorMessage\n */\nsweetAlert.showInputError = swal.showInputError = function (errorMessage) {\n  var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n  var $errorIcon = modal.querySelector('.sa-input-error');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass($errorIcon, 'show');\n\n  var $errorContainer = modal.querySelector('.sa-error-container');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass($errorContainer, 'show');\n\n  $errorContainer.querySelector('p').innerHTML = errorMessage;\n\n  setTimeout(function () {\n    sweetAlert.enableButtons();\n  }, 1);\n\n  modal.querySelector('input').focus();\n};\n\n/*\n * Reset input error DOM elements\n */\nsweetAlert.resetInputError = swal.resetInputError = function (event) {\n  // If press enter => ignore\n  if (event && event.keyCode === 13) {\n    return false;\n  }\n\n  var $modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n  var $errorIcon = $modal.querySelector('.sa-input-error');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon, 'show');\n\n  var $errorContainer = $modal.querySelector('.sa-error-container');\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorContainer, 'show');\n};\n\n/*\n * Disable confirm and cancel buttons\n */\nsweetAlert.disableButtons = swal.disableButtons = function (event) {\n  var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n  var $confirmButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  $confirmButton.disabled = true;\n  $cancelButton.disabled = true;\n};\n\n/*\n * Enable confirm and cancel buttons\n */\nsweetAlert.enableButtons = swal.enableButtons = function (event) {\n  var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n  var $confirmButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  $confirmButton.disabled = false;\n  $cancelButton.disabled = false;\n};\n\nif (typeof window !== 'undefined') {\n  // The 'handle-click' module requires\n  // that 'sweetAlert' was set as global.\n  window.sweetAlert = window.swal = sweetAlert;\n} else {\n  _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('SweetAlert is a frontend module!');\n}\nmodule.exports = exports['default'];\n\n},{\"./modules/default-params\":2,\"./modules/handle-click\":3,\"./modules/handle-dom\":4,\"./modules/handle-key\":5,\"./modules/handle-swal-dom\":6,\"./modules/set-params\":8,\"./modules/utils\":9}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar defaultParams = {\n  title: '',\n  text: '',\n  type: null,\n  allowOutsideClick: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnConfirm: true,\n  closeOnCancel: true,\n  confirmButtonText: 'OK',\n  confirmButtonColor: '#8CD4F5',\n  cancelButtonText: 'Cancel',\n  imageUrl: null,\n  imageSize: null,\n  timer: null,\n  customClass: '',\n  html: false,\n  animation: true,\n  allowEscapeKey: true,\n  inputType: 'text',\n  inputPlaceholder: '',\n  inputValue: '',\n  showLoaderOnConfirm: false\n};\n\nexports['default'] = defaultParams;\nmodule.exports = exports['default'];\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _colorLuminance = require('./utils');\n\nvar _getModal = require('./handle-swal-dom');\n\nvar _hasClass$isDescendant = require('./handle-dom');\n\n/*\n * User clicked on \"Confirm\"/\"OK\" or \"Cancel\"\n */\nvar handleButton = function handleButton(event, params, modal) {\n  var e = event || window.event;\n  var target = e.target || e.srcElement;\n\n  var targetedConfirm = target.className.indexOf('confirm') !== -1;\n  var targetedOverlay = target.className.indexOf('sweet-overlay') !== -1;\n  var modalIsVisible = _hasClass$isDescendant.hasClass(modal, 'visible');\n  var doneFunctionExists = params.doneFunction && modal.getAttribute('data-has-done-function') === 'true';\n\n  // Since the user can change the background-color of the confirm button programmatically,\n  // we must calculate what the color should be on hover/active\n  var normalColor, hoverColor, activeColor;\n  if (targetedConfirm && params.confirmButtonColor) {\n    normalColor = params.confirmButtonColor;\n    hoverColor = _colorLuminance.colorLuminance(normalColor, -0.04);\n    activeColor = _colorLuminance.colorLuminance(normalColor, -0.14);\n  }\n\n  function shouldSetConfirmButtonColor(color) {\n    if (targetedConfirm && params.confirmButtonColor) {\n      target.style.backgroundColor = color;\n    }\n  }\n\n  switch (e.type) {\n    case 'mouseover':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n\n    case 'mouseout':\n      shouldSetConfirmButtonColor(normalColor);\n      break;\n\n    case 'mousedown':\n      shouldSetConfirmButtonColor(activeColor);\n      break;\n\n    case 'mouseup':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n\n    case 'focus':\n      var $confirmButton = modal.querySelector('button.confirm');\n      var $cancelButton = modal.querySelector('button.cancel');\n\n      if (targetedConfirm) {\n        $cancelButton.style.boxShadow = 'none';\n      } else {\n        $confirmButton.style.boxShadow = 'none';\n      }\n      break;\n\n    case 'click':\n      var clickedOnModal = modal === target;\n      var clickedOnModalChild = _hasClass$isDescendant.isDescendant(modal, target);\n\n      // Ignore click outside if allowOutsideClick is false\n      if (!clickedOnModal && !clickedOnModalChild && modalIsVisible && !params.allowOutsideClick) {\n        break;\n      }\n\n      if (targetedConfirm && doneFunctionExists && modalIsVisible) {\n        handleConfirm(modal, params);\n      } else if (doneFunctionExists && modalIsVisible || targetedOverlay) {\n        handleCancel(modal, params);\n      } else if (_hasClass$isDescendant.isDescendant(modal, target) && target.tagName === 'BUTTON') {\n        sweetAlert.close();\n      }\n      break;\n  }\n};\n\n/*\n *  User clicked on \"Confirm\"/\"OK\"\n */\nvar handleConfirm = function handleConfirm(modal, params) {\n  var callbackValue = true;\n\n  if (_hasClass$isDescendant.hasClass(modal, 'show-input')) {\n    callbackValue = modal.querySelector('input').value;\n\n    if (!callbackValue) {\n      callbackValue = '';\n    }\n  }\n\n  params.doneFunction(callbackValue);\n\n  if (params.closeOnConfirm) {\n    sweetAlert.close();\n  }\n  // Disable cancel and confirm button if the parameter is true\n  if (params.showLoaderOnConfirm) {\n    sweetAlert.disableButtons();\n  }\n};\n\n/*\n *  User clicked on \"Cancel\"\n */\nvar handleCancel = function handleCancel(modal, params) {\n  // Check if callback function expects a parameter (to track cancel actions)\n  var functionAsStr = String(params.doneFunction).replace(/\\s/g, '');\n  var functionHandlesCancel = functionAsStr.substring(0, 9) === 'function(' && functionAsStr.substring(9, 10) !== ')';\n\n  if (functionHandlesCancel) {\n    params.doneFunction(false);\n  }\n\n  if (params.closeOnCancel) {\n    sweetAlert.close();\n  }\n};\n\nexports['default'] = {\n  handleButton: handleButton,\n  handleConfirm: handleConfirm,\n  handleCancel: handleCancel\n};\nmodule.exports = exports['default'];\n\n},{\"./handle-dom\":4,\"./handle-swal-dom\":6,\"./utils\":9}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar hasClass = function hasClass(elem, className) {\n  return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');\n};\n\nvar addClass = function addClass(elem, className) {\n  if (!hasClass(elem, className)) {\n    elem.className += ' ' + className;\n  }\n};\n\nvar removeClass = function removeClass(elem, className) {\n  var newClass = ' ' + elem.className.replace(/[\\t\\r\\n]/g, ' ') + ' ';\n  if (hasClass(elem, className)) {\n    while (newClass.indexOf(' ' + className + ' ') >= 0) {\n      newClass = newClass.replace(' ' + className + ' ', ' ');\n    }\n    elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n  }\n};\n\nvar escapeHtml = function escapeHtml(str) {\n  var div = document.createElement('div');\n  div.appendChild(document.createTextNode(str));\n  return div.innerHTML;\n};\n\nvar _show = function _show(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'block';\n};\n\nvar show = function show(elems) {\n  if (elems && !elems.length) {\n    return _show(elems);\n  }\n  for (var i = 0; i < elems.length; ++i) {\n    _show(elems[i]);\n  }\n};\n\nvar _hide = function _hide(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\n\nvar hide = function hide(elems) {\n  if (elems && !elems.length) {\n    return _hide(elems);\n  }\n  for (var i = 0; i < elems.length; ++i) {\n    _hide(elems[i]);\n  }\n};\n\nvar isDescendant = function isDescendant(parent, child) {\n  var node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nvar getTopMargin = function getTopMargin(elem) {\n  elem.style.left = '-9999px';\n  elem.style.display = 'block';\n\n  var height = elem.clientHeight,\n      padding;\n  if (typeof getComputedStyle !== 'undefined') {\n    // IE 8\n    padding = parseInt(getComputedStyle(elem).getPropertyValue('padding-top'), 10);\n  } else {\n    padding = parseInt(elem.currentStyle.padding);\n  }\n\n  elem.style.left = '';\n  elem.style.display = 'none';\n  return '-' + parseInt((height + padding) / 2) + 'px';\n};\n\nvar fadeIn = function fadeIn(elem, interval) {\n  if (+elem.style.opacity < 1) {\n    interval = interval || 16;\n    elem.style.opacity = 0;\n    elem.style.display = 'block';\n    var last = +new Date();\n    var tick = (function (_tick) {\n      function tick() {\n        return _tick.apply(this, arguments);\n      }\n\n      tick.toString = function () {\n        return _tick.toString();\n      };\n\n      return tick;\n    })(function () {\n      elem.style.opacity = +elem.style.opacity + (new Date() - last) / 100;\n      last = +new Date();\n\n      if (+elem.style.opacity < 1) {\n        setTimeout(tick, interval);\n      }\n    });\n    tick();\n  }\n  elem.style.display = 'block'; //fallback IE8\n};\n\nvar fadeOut = function fadeOut(elem, interval) {\n  interval = interval || 16;\n  elem.style.opacity = 1;\n  var last = +new Date();\n  var tick = (function (_tick2) {\n    function tick() {\n      return _tick2.apply(this, arguments);\n    }\n\n    tick.toString = function () {\n      return _tick2.toString();\n    };\n\n    return tick;\n  })(function () {\n    elem.style.opacity = +elem.style.opacity - (new Date() - last) / 100;\n    last = +new Date();\n\n    if (+elem.style.opacity > 0) {\n      setTimeout(tick, interval);\n    } else {\n      elem.style.display = 'none';\n    }\n  });\n  tick();\n};\n\nvar fireClick = function fireClick(node) {\n  // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\n  // Then fixed for today's Chrome browser.\n  if (typeof MouseEvent === 'function') {\n    // Up-to-date approach\n    var mevt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n    node.dispatchEvent(mevt);\n  } else if (document.createEvent) {\n    // Fallback\n    var evt = document.createEvent('MouseEvents');\n    evt.initEvent('click', false, false);\n    node.dispatchEvent(evt);\n  } else if (document.createEventObject) {\n    node.fireEvent('onclick');\n  } else if (typeof node.onclick === 'function') {\n    node.onclick();\n  }\n};\n\nvar stopEventPropagation = function stopEventPropagation(e) {\n  // In particular, make sure the space bar doesn't scroll the main window.\n  if (typeof e.stopPropagation === 'function') {\n    e.stopPropagation();\n    e.preventDefault();\n  } else if (window.event && window.event.hasOwnProperty('cancelBubble')) {\n    window.event.cancelBubble = true;\n  }\n};\n\nexports.hasClass = hasClass;\nexports.addClass = addClass;\nexports.removeClass = removeClass;\nexports.escapeHtml = escapeHtml;\nexports._show = _show;\nexports.show = show;\nexports._hide = _hide;\nexports.hide = hide;\nexports.isDescendant = isDescendant;\nexports.getTopMargin = getTopMargin;\nexports.fadeIn = fadeIn;\nexports.fadeOut = fadeOut;\nexports.fireClick = fireClick;\nexports.stopEventPropagation = stopEventPropagation;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _stopEventPropagation$fireClick = require('./handle-dom');\n\nvar _setFocusStyle = require('./handle-swal-dom');\n\nvar handleKeyDown = function handleKeyDown(event, params, modal) {\n  var e = event || window.event;\n  var keyCode = e.keyCode || e.which;\n\n  var $okButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  var $modalButtons = modal.querySelectorAll('button[tabindex]');\n\n  if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n    // Don't do work on keys we don't care about.\n    return;\n  }\n\n  var $targetElement = e.target || e.srcElement;\n\n  var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n  for (var i = 0; i < $modalButtons.length; i++) {\n    if ($targetElement === $modalButtons[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  if (keyCode === 9) {\n    // TAB\n    if (btnIndex === -1) {\n      // No button focused. Jump to the confirm button.\n      $targetElement = $okButton;\n    } else {\n      // Cycle to the next button\n      if (btnIndex === $modalButtons.length - 1) {\n        $targetElement = $modalButtons[0];\n      } else {\n        $targetElement = $modalButtons[btnIndex + 1];\n      }\n    }\n\n    _stopEventPropagation$fireClick.stopEventPropagation(e);\n    $targetElement.focus();\n\n    if (params.confirmButtonColor) {\n      _setFocusStyle.setFocusStyle($targetElement, params.confirmButtonColor);\n    }\n  } else {\n    if (keyCode === 13) {\n      if ($targetElement.tagName === 'INPUT') {\n        $targetElement = $okButton;\n        $okButton.focus();\n      }\n\n      if (btnIndex === -1) {\n        // ENTER/SPACE clicked outside of a button.\n        $targetElement = $okButton;\n      } else {\n        // Do nothing - let the browser handle it.\n        $targetElement = undefined;\n      }\n    } else if (keyCode === 27 && params.allowEscapeKey === true) {\n      $targetElement = $cancelButton;\n      _stopEventPropagation$fireClick.fireClick($targetElement, e);\n    } else {\n      // Fallback - let the browser handle it.\n      $targetElement = undefined;\n    }\n  }\n};\n\nexports['default'] = handleKeyDown;\nmodule.exports = exports['default'];\n\n},{\"./handle-dom\":4,\"./handle-swal-dom\":6}],6:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _hexToRgb = require('./utils');\n\nvar _removeClass$getTopMargin$fadeIn$show$addClass = require('./handle-dom');\n\nvar _defaultParams = require('./default-params');\n\nvar _defaultParams2 = _interopRequireWildcard(_defaultParams);\n\n/*\n * Add modal + overlay to DOM\n */\n\nvar _injectedHTML = require('./injected-html');\n\nvar _injectedHTML2 = _interopRequireWildcard(_injectedHTML);\n\nvar modalClass = '.sweet-alert';\nvar overlayClass = '.sweet-overlay';\n\nvar sweetAlertInitialize = function sweetAlertInitialize() {\n  var sweetWrap = document.createElement('div');\n  sweetWrap.innerHTML = _injectedHTML2['default'];\n\n  // Append elements to body\n  while (sweetWrap.firstChild) {\n    document.body.appendChild(sweetWrap.firstChild);\n  }\n};\n\n/*\n * Get DOM element of modal\n */\nvar getModal = (function (_getModal) {\n  function getModal() {\n    return _getModal.apply(this, arguments);\n  }\n\n  getModal.toString = function () {\n    return _getModal.toString();\n  };\n\n  return getModal;\n})(function () {\n  var $modal = document.querySelector(modalClass);\n\n  if (!$modal) {\n    sweetAlertInitialize();\n    $modal = getModal();\n  }\n\n  return $modal;\n});\n\n/*\n * Get DOM element of input (in modal)\n */\nvar getInput = function getInput() {\n  var $modal = getModal();\n  if ($modal) {\n    return $modal.querySelector('input');\n  }\n};\n\n/*\n * Get DOM element of overlay\n */\nvar getOverlay = function getOverlay() {\n  return document.querySelector(overlayClass);\n};\n\n/*\n * Add box-shadow style to button (depending on its chosen bg-color)\n */\nvar setFocusStyle = function setFocusStyle($button, bgColor) {\n  var rgbColor = _hexToRgb.hexToRgb(bgColor);\n  $button.style.boxShadow = '0 0 2px rgba(' + rgbColor + ', 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)';\n};\n\n/*\n * Animation when opening modal\n */\nvar openModal = function openModal(callback) {\n  var $modal = getModal();\n  _removeClass$getTopMargin$fadeIn$show$addClass.fadeIn(getOverlay(), 10);\n  _removeClass$getTopMargin$fadeIn$show$addClass.show($modal);\n  _removeClass$getTopMargin$fadeIn$show$addClass.addClass($modal, 'showSweetAlert');\n  _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($modal, 'hideSweetAlert');\n\n  window.previousActiveElement = document.activeElement;\n  var $okButton = $modal.querySelector('button.confirm');\n  $okButton.focus();\n\n  setTimeout(function () {\n    _removeClass$getTopMargin$fadeIn$show$addClass.addClass($modal, 'visible');\n  }, 500);\n\n  var timer = $modal.getAttribute('data-timer');\n\n  if (timer !== 'null' && timer !== '') {\n    var timerCallback = callback;\n    $modal.timeout = setTimeout(function () {\n      var doneFunctionExists = (timerCallback || null) && $modal.getAttribute('data-has-done-function') === 'true';\n      if (doneFunctionExists) {\n        timerCallback(null);\n      } else {\n        sweetAlert.close();\n      }\n    }, timer);\n  }\n};\n\n/*\n * Reset the styling of the input\n * (for example if errors have been shown)\n */\nvar resetInput = function resetInput() {\n  var $modal = getModal();\n  var $input = getInput();\n\n  _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($modal, 'show-input');\n  $input.value = _defaultParams2['default'].inputValue;\n  $input.setAttribute('type', _defaultParams2['default'].inputType);\n  $input.setAttribute('placeholder', _defaultParams2['default'].inputPlaceholder);\n\n  resetInputError();\n};\n\nvar resetInputError = function resetInputError(event) {\n  // If press enter => ignore\n  if (event && event.keyCode === 13) {\n    return false;\n  }\n\n  var $modal = getModal();\n\n  var $errorIcon = $modal.querySelector('.sa-input-error');\n  _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($errorIcon, 'show');\n\n  var $errorContainer = $modal.querySelector('.sa-error-container');\n  _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($errorContainer, 'show');\n};\n\n/*\n * Set \"margin-top\"-property on modal based on its computed height\n */\nvar fixVerticalPosition = function fixVerticalPosition() {\n  var $modal = getModal();\n  $modal.style.marginTop = _removeClass$getTopMargin$fadeIn$show$addClass.getTopMargin(getModal());\n};\n\nexports.sweetAlertInitialize = sweetAlertInitialize;\nexports.getModal = getModal;\nexports.getOverlay = getOverlay;\nexports.getInput = getInput;\nexports.setFocusStyle = setFocusStyle;\nexports.openModal = openModal;\nexports.resetInput = resetInput;\nexports.resetInputError = resetInputError;\nexports.fixVerticalPosition = fixVerticalPosition;\n\n},{\"./default-params\":2,\"./handle-dom\":4,\"./injected-html\":7,\"./utils\":9}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar injectedHTML =\n\n// Dark overlay\n\"<div class=\\\"sweet-overlay\\\" tabIndex=\\\"-1\\\"></div>\" +\n\n// Modal\n\"<div class=\\\"sweet-alert\\\">\" +\n\n// Error icon\n\"<div class=\\\"sa-icon sa-error\\\">\\n      <span class=\\\"sa-x-mark\\\">\\n        <span class=\\\"sa-line sa-left\\\"></span>\\n        <span class=\\\"sa-line sa-right\\\"></span>\\n      </span>\\n    </div>\" +\n\n// Warning icon\n\"<div class=\\\"sa-icon sa-warning\\\">\\n      <span class=\\\"sa-body\\\"></span>\\n      <span class=\\\"sa-dot\\\"></span>\\n    </div>\" +\n\n// Info icon\n\"<div class=\\\"sa-icon sa-info\\\"></div>\" +\n\n// Success icon\n\"<div class=\\\"sa-icon sa-success\\\">\\n      <span class=\\\"sa-line sa-tip\\\"></span>\\n      <span class=\\\"sa-line sa-long\\\"></span>\\n\\n      <div class=\\\"sa-placeholder\\\"></div>\\n      <div class=\\\"sa-fix\\\"></div>\\n    </div>\" + \"<div class=\\\"sa-icon sa-custom\\\"></div>\" +\n\n// Title, text and input\n\"<h2>Title</h2>\\n    <p>Text</p>\\n    <fieldset>\\n      <input type=\\\"text\\\" tabIndex=\\\"3\\\" />\\n      <div class=\\\"sa-input-error\\\"></div>\\n    </fieldset>\" +\n\n// Input errors\n\"<div class=\\\"sa-error-container\\\">\\n      <div class=\\\"icon\\\">!</div>\\n      <p>Not valid!</p>\\n    </div>\" +\n\n// Cancel and confirm buttons\n\"<div class=\\\"sa-button-container\\\">\\n      <button class=\\\"cancel\\\" tabIndex=\\\"2\\\">Cancel</button>\\n      <div class=\\\"sa-confirm-button-container\\\">\\n        <button class=\\\"confirm\\\" tabIndex=\\\"1\\\">OK</button>\" +\n\n// Loading animation\n\"<div class=\\\"la-ball-fall\\\">\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n        </div>\\n      </div>\\n    </div>\" +\n\n// End of modal\n\"</div>\";\n\nexports[\"default\"] = injectedHTML;\nmodule.exports = exports[\"default\"];\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _isIE8 = require('./utils');\n\nvar _getModal$getInput$setFocusStyle = require('./handle-swal-dom');\n\nvar _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide = require('./handle-dom');\n\nvar alertTypes = ['error', 'warning', 'info', 'success', 'input', 'prompt'];\n\n/*\n * Set type, text and actions on modal\n */\nvar setParameters = function setParameters(params) {\n  var modal = _getModal$getInput$setFocusStyle.getModal();\n\n  var $title = modal.querySelector('h2');\n  var $text = modal.querySelector('p');\n  var $cancelBtn = modal.querySelector('button.cancel');\n  var $confirmBtn = modal.querySelector('button.confirm');\n\n  /*\n   * Title\n   */\n  $title.innerHTML = params.html ? params.title : _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.title).split('\\n').join('<br>');\n\n  /*\n   * Text\n   */\n  $text.innerHTML = params.html ? params.text : _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.text || '').split('\\n').join('<br>');\n  if (params.text) _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($text);\n\n  /*\n   * Custom class\n   */\n  if (params.customClass) {\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass(modal, params.customClass);\n    modal.setAttribute('data-custom-class', params.customClass);\n  } else {\n    // Find previously set classes and remove them\n    var customClass = modal.getAttribute('data-custom-class');\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.removeClass(modal, customClass);\n    modal.setAttribute('data-custom-class', '');\n  }\n\n  /*\n   * Icon\n   */\n  _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide(modal.querySelectorAll('.sa-icon'));\n\n  if (params.type && !_isIE8.isIE8()) {\n    var _ret = (function () {\n\n      var validType = false;\n\n      for (var i = 0; i < alertTypes.length; i++) {\n        if (params.type === alertTypes[i]) {\n          validType = true;\n          break;\n        }\n      }\n\n      if (!validType) {\n        logStr('Unknown alert type: ' + params.type);\n        return {\n          v: false\n        };\n      }\n\n      var typesWithIcons = ['success', 'error', 'warning', 'info'];\n      var $icon = undefined;\n\n      if (typesWithIcons.indexOf(params.type) !== -1) {\n        $icon = modal.querySelector('.sa-icon.' + 'sa-' + params.type);\n        _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($icon);\n      }\n\n      var $input = _getModal$getInput$setFocusStyle.getInput();\n\n      // Animate icon\n      switch (params.type) {\n\n        case 'success':\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'animate');\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-tip'), 'animateSuccessTip');\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-long'), 'animateSuccessLong');\n          break;\n\n        case 'error':\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'animateErrorIcon');\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-x-mark'), 'animateXMark');\n          break;\n\n        case 'warning':\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'pulseWarning');\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-body'), 'pulseWarningIns');\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-dot'), 'pulseWarningIns');\n          break;\n\n        case 'input':\n        case 'prompt':\n          $input.setAttribute('type', params.inputType);\n          $input.value = params.inputValue;\n          $input.setAttribute('placeholder', params.inputPlaceholder);\n          _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass(modal, 'show-input');\n          setTimeout(function () {\n            $input.focus();\n            $input.addEventListener('keyup', swal.resetInputError);\n          }, 400);\n          break;\n      }\n    })();\n\n    if (typeof _ret === 'object') {\n      return _ret.v;\n    }\n  }\n\n  /*\n   * Custom image\n   */\n  if (params.imageUrl) {\n    var $customIcon = modal.querySelector('.sa-icon.sa-custom');\n\n    $customIcon.style.backgroundImage = 'url(' + params.imageUrl + ')';\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($customIcon);\n\n    var _imgWidth = 80;\n    var _imgHeight = 80;\n\n    if (params.imageSize) {\n      var dimensions = params.imageSize.toString().split('x');\n      var imgWidth = dimensions[0];\n      var imgHeight = dimensions[1];\n\n      if (!imgWidth || !imgHeight) {\n        logStr('Parameter imageSize expects value with format WIDTHxHEIGHT, got ' + params.imageSize);\n      } else {\n        _imgWidth = imgWidth;\n        _imgHeight = imgHeight;\n      }\n    }\n\n    $customIcon.setAttribute('style', $customIcon.getAttribute('style') + 'width:' + _imgWidth + 'px; height:' + _imgHeight + 'px');\n  }\n\n  /*\n   * Show cancel button?\n   */\n  modal.setAttribute('data-has-cancel-button', params.showCancelButton);\n  if (params.showCancelButton) {\n    $cancelBtn.style.display = 'inline-block';\n  } else {\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide($cancelBtn);\n  }\n\n  /*\n   * Show confirm button?\n   */\n  modal.setAttribute('data-has-confirm-button', params.showConfirmButton);\n  if (params.showConfirmButton) {\n    $confirmBtn.style.display = 'inline-block';\n  } else {\n    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide($confirmBtn);\n  }\n\n  /*\n   * Custom text on cancel/confirm buttons\n   */\n  if (params.cancelButtonText) {\n    $cancelBtn.innerHTML = _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.cancelButtonText);\n  }\n  if (params.confirmButtonText) {\n    $confirmBtn.innerHTML = _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.confirmButtonText);\n  }\n\n  /*\n   * Custom color on confirm button\n   */\n  if (params.confirmButtonColor) {\n    // Set confirm button to selected background color\n    $confirmBtn.style.backgroundColor = params.confirmButtonColor;\n\n    // Set the confirm button color to the loading ring\n    $confirmBtn.style.borderLeftColor = params.confirmLoadingButtonColor;\n    $confirmBtn.style.borderRightColor = params.confirmLoadingButtonColor;\n\n    // Set box-shadow to default focused button\n    _getModal$getInput$setFocusStyle.setFocusStyle($confirmBtn, params.confirmButtonColor);\n  }\n\n  /*\n   * Allow outside click\n   */\n  modal.setAttribute('data-allow-outside-click', params.allowOutsideClick);\n\n  /*\n   * Callback function\n   */\n  var hasDoneFunction = params.doneFunction ? true : false;\n  modal.setAttribute('data-has-done-function', hasDoneFunction);\n\n  /*\n   * Animation\n   */\n  if (!params.animation) {\n    modal.setAttribute('data-animation', 'none');\n  } else if (typeof params.animation === 'string') {\n    modal.setAttribute('data-animation', params.animation); // Custom animation\n  } else {\n    modal.setAttribute('data-animation', 'pop');\n  }\n\n  /*\n   * Timer\n   */\n  modal.setAttribute('data-timer', params.timer);\n};\n\nexports['default'] = setParameters;\nmodule.exports = exports['default'];\n\n},{\"./handle-dom\":4,\"./handle-swal-dom\":6,\"./utils\":9}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/*\n * Allow user to pass their own params\n */\nvar extend = function extend(a, b) {\n  for (var key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/*\n * Convert HEX codes to RGB values (#000000 -> rgb(0,0,0))\n */\nvar hexToRgb = function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? parseInt(result[1], 16) + ', ' + parseInt(result[2], 16) + ', ' + parseInt(result[3], 16) : null;\n};\n\n/*\n * Check if the user is using Internet Explorer 8 (for fallbacks)\n */\nvar isIE8 = function isIE8() {\n  return window.attachEvent && !window.addEventListener;\n};\n\n/*\n * IE compatible logging for developers\n */\nvar logStr = function logStr(string) {\n  if (window.console) {\n    // IE...\n    window.console.log('SweetAlert: ' + string);\n  }\n};\n\n/*\n * Set hover, active and focus-states for buttons \n * (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\n */\nvar colorLuminance = function colorLuminance(hex, lum) {\n  // Validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, '');\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // Convert to decimal and change luminosity\n  var rgb = '#';\n  var c;\n  var i;\n\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += ('00' + c).substr(c.length);\n  }\n\n  return rgb;\n};\n\nexports.extend = extend;\nexports.hexToRgb = hexToRgb;\nexports.isIE8 = isIE8;\nexports.logStr = logStr;\nexports.colorLuminance = colorLuminance;\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvVHJpc3Rhbi9kZXYvU3dlZXRBbGVydC9kZXYvc3dlZXRhbGVydC5lczYuanMiLCIvVXNlcnMvVHJpc3Rhbi9kZXYvU3dlZXRBbGVydC9kZXYvbW9kdWxlcy9kZWZhdWx0LXBhcmFtcy5qcyIsIi9Vc2Vycy9UcmlzdGFuL2Rldi9Td2VldEFsZXJ0L2Rldi9tb2R1bGVzL2hhbmRsZS1jbGljay5qcyIsIi9Vc2Vycy9UcmlzdGFuL2Rldi9Td2VldEFsZXJ0L2Rldi9tb2R1bGVzL2hhbmRsZS1kb20uanMiLCIvVXNlcnMvVHJpc3Rhbi9kZXYvU3dlZXRBbGVydC9kZXYvbW9kdWxlcy9oYW5kbGUta2V5LmpzIiwiL1VzZXJzL1RyaXN0YW4vZGV2L1N3ZWV0QWxlcnQvZGV2L21vZHVsZXMvaGFuZGxlLXN3YWwtZG9tLmpzIiwiL1VzZXJzL1RyaXN0YW4vZGV2L1N3ZWV0QWxlcnQvZGV2L21vZHVsZXMvaW5qZWN0ZWQtaHRtbC5qcyIsIi9Vc2Vycy9UcmlzdGFuL2Rldi9Td2VldEFsZXJ0L2Rldi9tb2R1bGVzL3NldC1wYXJhbXMuanMiLCIvVXNlcnMvVHJpc3Rhbi9kZXYvU3dlZXRBbGVydC9kZXYvbW9kdWxlcy91dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztzSkNnQk8sc0JBQXNCOzs7Ozs7MkRBV3RCLGlCQUFpQjs7Ozs7O3dIQWNqQiwyQkFBMkI7Ozs7dURBSXdCLHdCQUF3Qjs7NkJBQ3hELHNCQUFzQjs7Ozs7OzZCQUl0QiwwQkFBMEI7Ozs7NkJBQzFCLHNCQUFzQjs7Ozs7Ozs7QUFNaEQsSUFBSSxxQkFBcUIsQ0FBQztBQUMxQixJQUFJLGlCQUFpQixDQUFDOzs7Ozs7QUFPdEIsSUFBSSxVQUFVLEVBQUUsSUFBSSxDQUFDOztxQkFFTixVQUFVLEdBQUcsSUFBSSxHQUFHLFlBQVc7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RyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3JFLE9BQUcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUEsQ0FBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0dBQ3BDOztBQUVELFNBQU8sR0FBRyxDQUFDO0NBQ1osQ0FBQzs7UUFJQSxNQUFNLEdBQU4sTUFBTTtRQUNOLFFBQVEsR0FBUixRQUFRO1FBQ1IsS0FBSyxHQUFMLEtBQUs7UUFDTCxNQUFNLEdBQU4sTUFBTTtRQUNOLGNBQWMsR0FBZCxjQUFjIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIFN3ZWV0QWxlcnRcbi8vIDIwMTQtMjAxNSAoYykgLSBUcmlzdGFuIEVkd2FyZHNcbi8vIGdpdGh1Yi5jb20vdDR0NS9zd2VldGFsZXJ0XG5cbi8qXG4gKiBqUXVlcnktbGlrZSBmdW5jdGlvbnMgZm9yIG1hbmlwdWxhdGluZyB0aGUgRE9NXG4gKi9cbmltcG9ydCB7XG4gIGhhc0NsYXNzLCBhZGRDbGFzcywgcmVtb3ZlQ2xhc3MsXG4gIGVzY2FwZUh0bWwsXG4gIF9zaG93LCBzaG93LCBfaGlkZSwgaGlkZSxcbiAgaXNEZXNjZW5kYW50LFxuICBnZXRUb3BNYXJnaW4sXG4gIGZhZGVJbiwgZmFkZU91dCxcbiAgZmlyZUNsaWNrLFxuICBzdG9wRXZlbnRQcm9wYWdhdGlvblxufSBmcm9tICcuL21vZHVsZXMvaGFuZGxlLWRvbSc7XG5cbi8qXG4gKiBIYW5keSB1dGlsaXRpZXNcbiAqL1xuaW1wb3J0IHtcbiAgZXh0ZW5kLFxuICBoZXhUb1JnYixcbiAgaXNJRTgsXG4gIGxvZ1N0cixcbiAgY29sb3JMdW1pbmFuY2Vcbn0gZnJvbSAnLi9tb2R1bGVzL3V0aWxzJztcblxuLypcbiAqICBIYW5kbGUgc3dlZXRBbGVydCdzIERPTSBlbGVtZW50c1xuICovXG5pbXBvcnQge1xuICBzd2VldEFsZXJ0SW5pdGlhbGl6ZSxcbiAgZ2V0TW9kYWwsXG4gIGdldE92ZXJsYXksXG4gIGdldElucHV0LFxuICBzZXRGb2N1c1N0eWxlLFxuICBvcGVuTW9kYWwsXG4gIHJlc2V0SW5wdXQsXG4gIGZpeFZlcnRpY2FsUG9zaXRpb25cbn0gZnJvbSAnLi9tb2R1bGVzL2hhbmRsZS1zd2FsLWRvbSc7XG5cblxuLy8gSGFuZGxlIGJ1dHRvbiBldmVudHMgYW5kIGtleWJvYXJkIGV2ZW50c1xuaW1wb3J0IHsgaGFuZGxlQnV0dG9uLCBoYW5kbGVDb25maXJtLCBoYW5kbGVDYW5jZWwgfSBmcm9tICcuL21vZHVsZXMvaGFuZGxlLWNsaWNrJztcbmltcG9ydCBoYW5kbGVLZXlEb3duIGZyb20gJy4vbW9kdWxlcy9oYW5kbGUta2V5JztcblxuXG4vLyBEZWZhdWx0IHZhbHVlc1xuaW1wb3J0IGRlZmF1bHRQYXJhbXMgZnJvbSAnLi9tb2R1bGVzL2RlZmF1bHQtcGFyYW1zJztcbmltcG9ydCBzZXRQYXJhbWV0ZXJzIGZyb20gJy4vbW9kdWxlcy9zZXQtcGFyYW1zJztcblxuLypcbiAqIFJlbWVtYmVyIHN0YXRlIGluIGNhc2VzIHdoZXJlIG9wZW5pbmcgYW5kIGhhbmRsaW5nIGEgbW9kYWwgd2lsbCBmaWRkbGUgd2l0aCBpdC5cbiAqIChXZSBhbHNvIHVzZSB3aW5kb3cucHJldmlvdXNBY3RpdmVFbGVtZW50IGFzIGEgZ2xvYmFsIHZhcmlhYmxlKVxuICovXG52YXIgcHJldmlvdXNXaW5kb3dLZXlEb3duO1xudmFyIGxhc3RGb2N1c2VkQnV0dG9uO1xuXG5cbi8qXG4gKiBHbG9iYWwgc3dlZXRBbGVydCBmdW5jdGlvblxuICogKHRoaXMgaXMgd2hhdCB0aGUgdXNlciBjYWxscylcbiAqL1xudmFyIHN3ZWV0QWxlcnQsIHN3YWw7XG5cbmV4cG9ydCBkZWZhdWx0IHN3ZWV0QWxlcnQgPSBzd2FsID0gZnVuY3Rpb24oKSB7XG4gIHZhciBjdXN0b21pemF0aW9ucyA9IGFyZ3VtZW50c1swXTtcblxuICBhZGRDbGFzcyhkb2N1bWVudC5ib2R5LCAnc3RvcC1zY3JvbGxpbmcnKTtcbiAgcmVzZXRJbnB1dCgpO1xuXG4gIC8qXG4gICAqIFVzZSBhcmd1bWVudCBpZiBkZWZpbmVkIG9yIGRlZmF1bHQgdmFsdWUgZnJvbSBwYXJhbXMgb2JqZWN0IG90aGVyd2lzZS5cbiAgICogU3VwcG9ydHMgdGhlIGNhc2Ugd2hlcmUgYSBkZWZhdWx0IHZhbHVlIGlzIGJvb2xlYW4gdHJ1ZSBhbmQgc2hvdWxkIGJlXG4gICAqIG92ZXJyaWRkZW4gYnkgYSBjb3JyZXNwb25kaW5nIGV4cGxpY2l0IGFyZ3VtZW50IHdoaWNoIGlzIGJvb2xlYW4gZmFsc2UuXG4gICAqL1xuICBmdW5jdGlvbiBhcmd1bWVudE9yRGVmYXVsdChrZXkpIHtcbiAgICB2YXIgYXJncyA9IGN1c3RvbWl6YXRpb25zO1xuICAgIHJldHVybiAoYXJnc1trZXldID09PSB1bmRlZmluZWQpID8gIGRlZmF1bHRQYXJhbXNba2V5XSA6IGFyZ3Nba2V5XTtcbiAgfVxuXG4gIGlmIChjdXN0b21pemF0aW9ucyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbG9nU3RyKCdTd2VldEFsZXJ0IGV4cGVjdHMgYXQgbGVhc3QgMSBhdHRyaWJ1dGUhJyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIHBhcmFtcyA9IGV4dGVuZCh7fSwgZGVmYXVsdFBhcmFtcyk7XG5cbiAgc3dpdGNoICh0eXBlb2YgY3VzdG9taXphdGlvbnMpIHtcblxuICAgIC8vIEV4OiBzd2FsKFwiSGVsbG9cIiwgXCJKdXN0IHRlc3RpbmdcIiwgXCJpbmZvXCIpO1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICBwYXJhbXMudGl0bGUgPSBjdXN0b21pemF0aW9ucztcbiAgICAgIHBhcmFtcy50ZXh0ICA9IGFyZ3VtZW50c1sxXSB8fCAnJztcbiAgICAgIHBhcmFtcy50eXBlICA9IGFyZ3VtZW50c1syXSB8fCAnJztcbiAgICAgIGJyZWFrO1xuXG4gICAgLy8gRXg6IHN3YWwoeyB0aXRsZTpcIkhlbGxvXCIsIHRleHQ6IFwiSnVzdCB0ZXN0aW5nXCIsIHR5cGU6IFwiaW5mb1wiIH0pO1xuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICBpZiAoY3VzdG9taXphdGlvbnMudGl0bGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsb2dTdHIoJ01pc3NpbmcgXCJ0aXRsZVwiIGFyZ3VtZW50IScpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHBhcmFtcy50aXRsZSA9IGN1c3RvbWl6YXRpb25zLnRpdGxlO1xuXG4gICAgICBmb3IgKGxldCBjdXN0b21OYW1lIGluIGRlZmF1bHRQYXJhbXMpIHtcbiAgICAgICAgcGFyYW1zW2N1c3RvbU5hbWVdID0gYXJndW1lbnRPckRlZmF1bHQoY3VzdG9tTmFtZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNob3cgXCJDb25maXJtXCIgaW5zdGVhZCBvZiBcIk9LXCIgaWYgY2FuY2VsIGJ1dHRvbiBpcyB2aXNpYmxlXG4gICAgICBwYXJhbXMuY29uZmlybUJ1dHRvblRleHQgPSBwYXJhbXMuc2hvd0NhbmNlbEJ1dHRvbiA/ICdDb25maXJtJyA6IGRlZmF1bHRQYXJhbXMuY29uZmlybUJ1dHRvblRleHQ7XG4gICAgICBwYXJhbXMuY29uZmlybUJ1dHRvblRleHQgPSBhcmd1bWVudE9yRGVmYXVsdCgnY29uZmlybUJ1dHRvblRleHQnKTtcblxuICAgICAgLy8gQ2FsbGJhY2sgZnVuY3Rpb24gd2hlbiBjbGlja2luZyBvbiBcIk9LXCIvXCJDYW5jZWxcIlxuICAgICAgcGFyYW1zLmRvbmVGdW5jdGlvbiA9IGFyZ3VtZW50c1sxXSB8fCBudWxsO1xuXG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBsb2dTdHIoJ1VuZXhwZWN0ZWQgdHlwZSBvZiBhcmd1bWVudCEgRXhwZWN0ZWQgXCJzdHJpbmdcIiBvciBcIm9iamVjdFwiLCBnb3QgJyArIHR5cGVvZiBjdXN0b21pemF0aW9ucyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG5cbiAgfVxuXG4gIHNldFBhcmFtZXRlcnMocGFyYW1zKTtcbiAgZml4VmVydGljYWxQb3NpdGlvbigpO1xuICBvcGVuTW9kYWwoYXJndW1lbnRzWzFdKTtcblxuICAvLyBNb2RhbCBpbnRlcmFjdGlvbnNcbiAgdmFyIG1vZGFsID0gZ2V0TW9kYWwoKTtcblxuXG4gIC8qXG4gICAqIE1ha2Ugc3VyZSBhbGwgbW9kYWwgYnV0dG9ucyByZXNwb25kIHRvIGFsbCBldmVudHNcbiAgICovXG4gIHZhciAkYnV0dG9ucyA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbicpO1xuICB2YXIgYnV0dG9uRXZlbnRzID0gWydvbmNsaWNrJywgJ29ubW91c2VvdmVyJywgJ29ubW91c2VvdXQnLCAnb25tb3VzZWRvd24nLCAnb25tb3VzZXVwJywgJ29uZm9jdXMnXTtcbiAgdmFyIG9uQnV0dG9uRXZlbnQgPSAoZSkgPT4gaGFuZGxlQnV0dG9uKGUsIHBhcmFtcywgbW9kYWwpO1xuXG4gIGZvciAobGV0IGJ0bkluZGV4ID0gMDsgYnRuSW5kZXggPCAkYnV0dG9ucy5sZW5ndGg7IGJ0bkluZGV4KyspIHtcbiAgICBmb3IgKGxldCBldnRJbmRleCA9IDA7IGV2dEluZGV4IDwgYnV0dG9uRXZlbnRzLmxlbmd0aDsgZXZ0SW5kZXgrKykge1xuICAgICAgbGV0IGJ0bkV2dCA9IGJ1dHRvbkV2ZW50c1tldnRJbmRleF07XG4gICAgICAkYnV0dG9uc1tidG5JbmRleF1bYnRuRXZ0XSA9IG9uQnV0dG9uRXZlbnQ7XG4gICAgfVxuICB9XG5cbiAgLy8gQ2xpY2tpbmcgb3V0c2lkZSB0aGUgbW9kYWwgZGlzbWlzc2VzIGl0IChpZiBhbGxvd2VkIGJ5IHVzZXIpXG4gIGdldE92ZXJsYXkoKS5vbmNsaWNrID0gb25CdXR0b25FdmVudDtcblxuICBwcmV2aW91c1dpbmRvd0tleURvd24gPSB3aW5kb3cub25rZXlkb3duO1xuXG4gIHZhciBvbktleUV2ZW50ID0gKGUpID0+IGhhbmRsZUtleURvd24oZSwgcGFyYW1zLCBtb2RhbCk7XG4gIHdpbmRvdy5vbmtleWRvd24gPSBvbktleUV2ZW50O1xuXG4gIHdpbmRvdy5vbmZvY3VzID0gZnVuY3Rpb24gKCkge1xuICAgIC8vIFdoZW4gdGhlIHVzZXIgaGFzIGZvY3VzZWQgYXdheSBhbmQgZm9jdXNlZCBiYWNrIGZyb20gdGhlIHdob2xlIHdpbmRvdy5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFB1dCBpbiBhIHRpbWVvdXQgdG8ganVtcCBvdXQgb2YgdGhlIGV2ZW50IHNlcXVlbmNlLlxuICAgICAgLy8gQ2FsbGluZyBmb2N1cygpIGluIHRoZSBldmVudCBzZXF1ZW5jZSBjb25mdXNlcyB0aGluZ3MuXG4gICAgICBpZiAobGFzdEZvY3VzZWRCdXR0b24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsYXN0Rm9jdXNlZEJ1dHRvbi5mb2N1cygpO1xuICAgICAgICBsYXN0Rm9jdXNlZEJ1dHRvbiA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9LCAwKTtcbiAgfTtcbiAgXG4gIC8vIFNob3cgYWxlcnQgd2l0aCBlbmFibGVkIGJ1dHRvbnMgYWx3YXlzXG4gIHN3YWwuZW5hYmxlQnV0dG9ucygpO1xufTtcblxuXG5cbi8qXG4gKiBTZXQgZGVmYXVsdCBwYXJhbXMgZm9yIGVhY2ggcG9wdXBcbiAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyUGFyYW1zXG4gKi9cbnN3ZWV0QWxlcnQuc2V0RGVmYXVsdHMgPSBzd2FsLnNldERlZmF1bHRzID0gZnVuY3Rpb24odXNlclBhcmFtcykge1xuICBpZiAoIXVzZXJQYXJhbXMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJQYXJhbXMgaXMgcmVxdWlyZWQnKTtcbiAgfVxuICBpZiAodHlwZW9mIHVzZXJQYXJhbXMgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VyUGFyYW1zIGhhcyB0byBiZSBhIG9iamVjdCcpO1xuICB9XG5cbiAgZXh0ZW5kKGRlZmF1bHRQYXJhbXMsIHVzZXJQYXJhbXMpO1xufTtcblxuXG4vKlxuICogQW5pbWF0aW9uIHdoZW4gY2xvc2luZyBtb2RhbFxuICovXG5zd2VldEFsZXJ0LmNsb3NlID0gc3dhbC5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgbW9kYWwgPSBnZXRNb2RhbCgpO1xuXG4gIGZhZGVPdXQoZ2V0T3ZlcmxheSgpLCA1KTtcbiAgZmFkZU91dChtb2RhbCwgNSk7XG4gIHJlbW92ZUNsYXNzKG1vZGFsLCAnc2hvd1N3ZWV0QWxlcnQnKTtcbiAgYWRkQ2xhc3MobW9kYWwsICdoaWRlU3dlZXRBbGVydCcpO1xuICByZW1vdmVDbGFzcyhtb2RhbCwgJ3Zpc2libGUnKTtcblxuICAvKlxuICAgKiBSZXNldCBpY29uIGFuaW1hdGlvbnNcbiAgICovXG4gIHZhciAkc3VjY2Vzc0ljb24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtaWNvbi5zYS1zdWNjZXNzJyk7XG4gIHJlbW92ZUNsYXNzKCRzdWNjZXNzSWNvbiwgJ2FuaW1hdGUnKTtcbiAgcmVtb3ZlQ2xhc3MoJHN1Y2Nlc3NJY29uLnF1ZXJ5U2VsZWN0b3IoJy5zYS10aXAnKSwgJ2FuaW1hdGVTdWNjZXNzVGlwJyk7XG4gIHJlbW92ZUNsYXNzKCRzdWNjZXNzSWNvbi5xdWVyeVNlbGVjdG9yKCcuc2EtbG9uZycpLCAnYW5pbWF0ZVN1Y2Nlc3NMb25nJyk7XG5cbiAgdmFyICRlcnJvckljb24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtaWNvbi5zYS1lcnJvcicpO1xuICByZW1vdmVDbGFzcygkZXJyb3JJY29uLCAnYW5pbWF0ZUVycm9ySWNvbicpO1xuICByZW1vdmVDbGFzcygkZXJyb3JJY29uLnF1ZXJ5U2VsZWN0b3IoJy5zYS14LW1hcmsnKSwgJ2FuaW1hdGVYTWFyaycpO1xuXG4gIHZhciAkd2FybmluZ0ljb24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtaWNvbi5zYS13YXJuaW5nJyk7XG4gIHJlbW92ZUNsYXNzKCR3YXJuaW5nSWNvbiwgJ3B1bHNlV2FybmluZycpO1xuICByZW1vdmVDbGFzcygkd2FybmluZ0ljb24ucXVlcnlTZWxlY3RvcignLnNhLWJvZHknKSwgJ3B1bHNlV2FybmluZ0lucycpO1xuICByZW1vdmVDbGFzcygkd2FybmluZ0ljb24ucXVlcnlTZWxlY3RvcignLnNhLWRvdCcpLCAncHVsc2VXYXJuaW5nSW5zJyk7XG5cbiAgLy8gUmVzZXQgY3VzdG9tIGNsYXNzIChkZWxheSBzbyB0aGF0IFVJIGNoYW5nZXMgYXJlbid0IHZpc2libGUpXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgdmFyIGN1c3RvbUNsYXNzID0gbW9kYWwuZ2V0QXR0cmlidXRlKCdkYXRhLWN1c3RvbS1jbGFzcycpO1xuICAgIHJlbW92ZUNsYXNzKG1vZGFsLCBjdXN0b21DbGFzcyk7XG4gIH0sIDMwMCk7XG5cbiAgLy8gTWFrZSBwYWdlIHNjcm9sbGFibGUgYWdhaW5cbiAgcmVtb3ZlQ2xhc3MoZG9jdW1lbnQuYm9keSwgJ3N0b3Atc2Nyb2xsaW5nJyk7XG5cbiAgLy8gUmVzZXQgdGhlIHBhZ2UgdG8gaXRzIHByZXZpb3VzIHN0YXRlXG4gIHdpbmRvdy5vbmtleWRvd24gPSBwcmV2aW91c1dpbmRvd0tleURvd247XG4gIGlmICh3aW5kb3cucHJldmlvdXNBY3RpdmVFbGVtZW50KSB7XG4gICAgd2luZG93LnByZXZpb3VzQWN0aXZlRWxlbWVudC5mb2N1cygpO1xuICB9XG4gIGxhc3RGb2N1c2VkQnV0dG9uID0gdW5kZWZpbmVkO1xuICBjbGVhclRpbWVvdXQobW9kYWwudGltZW91dCk7XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5cbi8qXG4gKiBWYWxpZGF0aW9uIG9mIHRoZSBpbnB1dCBmaWVsZCBpcyBkb25lIGJ5IHVzZXJcbiAqIElmIHNvbWV0aGluZyBpcyB3cm9uZyA9PiBjYWxsIHNob3dJbnB1dEVycm9yIHdpdGggZXJyb3JNZXNzYWdlXG4gKi9cbnN3ZWV0QWxlcnQuc2hvd0lucHV0RXJyb3IgPSBzd2FsLnNob3dJbnB1dEVycm9yID0gZnVuY3Rpb24oZXJyb3JNZXNzYWdlKSB7XG4gIHZhciBtb2RhbCA9IGdldE1vZGFsKCk7XG5cbiAgdmFyICRlcnJvckljb24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtaW5wdXQtZXJyb3InKTtcbiAgYWRkQ2xhc3MoJGVycm9ySWNvbiwgJ3Nob3cnKTtcblxuICB2YXIgJGVycm9yQ29udGFpbmVyID0gbW9kYWwucXVlcnlTZWxlY3RvcignLnNhLWVycm9yLWNvbnRhaW5lcicpO1xuICBhZGRDbGFzcygkZXJyb3JDb250YWluZXIsICdzaG93Jyk7XG5cbiAgJGVycm9yQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3AnKS5pbm5lckhUTUwgPSBlcnJvck1lc3NhZ2U7XG5cbiAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBzd2VldEFsZXJ0LmVuYWJsZUJ1dHRvbnMoKTtcbiAgfSwgMSk7XG5cbiAgbW9kYWwucXVlcnlTZWxlY3RvcignaW5wdXQnKS5mb2N1cygpO1xufTtcblxuXG4vKlxuICogUmVzZXQgaW5wdXQgZXJyb3IgRE9NIGVsZW1lbnRzXG4gKi9cbnN3ZWV0QWxlcnQucmVzZXRJbnB1dEVycm9yID0gc3dhbC5yZXNldElucHV0RXJyb3IgPSBmdW5jdGlvbihldmVudCkge1xuICAvLyBJZiBwcmVzcyBlbnRlciA9PiBpZ25vcmVcbiAgaWYgKGV2ZW50ICYmIGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyICRtb2RhbCA9IGdldE1vZGFsKCk7XG5cbiAgdmFyICRlcnJvckljb24gPSAkbW9kYWwucXVlcnlTZWxlY3RvcignLnNhLWlucHV0LWVycm9yJyk7XG4gIHJlbW92ZUNsYXNzKCRlcnJvckljb24sICdzaG93Jyk7XG5cbiAgdmFyICRlcnJvckNvbnRhaW5lciA9ICRtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtZXJyb3ItY29udGFpbmVyJyk7XG4gIHJlbW92ZUNsYXNzKCRlcnJvckNvbnRhaW5lciwgJ3Nob3cnKTtcbn07XG5cbi8qXG4gKiBEaXNhYmxlIGNvbmZpcm0gYW5kIGNhbmNlbCBidXR0b25zXG4gKi9cbnN3ZWV0QWxlcnQuZGlzYWJsZUJ1dHRvbnMgPSBzd2FsLmRpc2FibGVCdXR0b25zID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgdmFyIG1vZGFsID0gZ2V0TW9kYWwoKTtcbiAgdmFyICRjb25maXJtQnV0dG9uID0gbW9kYWwucXVlcnlTZWxlY3RvcignYnV0dG9uLmNvbmZpcm0nKTtcbiAgdmFyICRjYW5jZWxCdXR0b24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCdidXR0b24uY2FuY2VsJyk7XG4gICRjb25maXJtQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgJGNhbmNlbEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG59O1xuXG4vKlxuICogRW5hYmxlIGNvbmZpcm0gYW5kIGNhbmNlbCBidXR0b25zXG4gKi9cbnN3ZWV0QWxlcnQuZW5hYmxlQnV0dG9ucyA9IHN3YWwuZW5hYmxlQnV0dG9ucyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIHZhciBtb2RhbCA9IGdldE1vZGFsKCk7XG4gIHZhciAkY29uZmlybUJ1dHRvbiA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5jb25maXJtJyk7XG4gIHZhciAkY2FuY2VsQnV0dG9uID0gbW9kYWwucXVlcnlTZWxlY3RvcignYnV0dG9uLmNhbmNlbCcpO1xuICAkY29uZmlybUJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAkY2FuY2VsQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG59O1xuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgLy8gVGhlICdoYW5kbGUtY2xpY2snIG1vZHVsZSByZXF1aXJlc1xuICAvLyB0aGF0ICdzd2VldEFsZXJ0JyB3YXMgc2V0IGFzIGdsb2JhbC5cbiAgd2luZG93LnN3ZWV0QWxlcnQgPSB3aW5kb3cuc3dhbCA9IHN3ZWV0QWxlcnQ7XG59IGVsc2Uge1xuICBsb2dTdHIoJ1N3ZWV0QWxlcnQgaXMgYSBmcm9udGVuZCBtb2R1bGUhJyk7XG59XG4iLCJ2YXIgZGVmYXVsdFBhcmFtcyA9IHtcbiAgdGl0bGU6ICcnLFxuICB0ZXh0OiAnJyxcbiAgdHlwZTogbnVsbCxcbiAgYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLFxuICBzaG93Q29uZmlybUJ1dHRvbjogdHJ1ZSxcbiAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsXG4gIGNsb3NlT25Db25maXJtOiB0cnVlLFxuICBjbG9zZU9uQ2FuY2VsOiB0cnVlLFxuICBjb25maXJtQnV0dG9uVGV4dDogJ09LJyxcbiAgY29uZmlybUJ1dHRvbkNvbG9yOiAnIzhDRDRGNScsXG4gIGNhbmNlbEJ1dHRvblRleHQ6ICdDYW5jZWwnLFxuICBpbWFnZVVybDogbnVsbCxcbiAgaW1hZ2VTaXplOiBudWxsLFxuICB0aW1lcjogbnVsbCxcbiAgY3VzdG9tQ2xhc3M6ICcnLFxuICBodG1sOiBmYWxzZSxcbiAgYW5pbWF0aW9uOiB0cnVlLFxuICBhbGxvd0VzY2FwZUtleTogdHJ1ZSxcbiAgaW5wdXRUeXBlOiAndGV4dCcsXG4gIGlucHV0UGxhY2Vob2xkZXI6ICcnLFxuICBpbnB1dFZhbHVlOiAnJyxcbiAgc2hvd0xvYWRlck9uQ29uZmlybTogZmFsc2Vcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmF1bHRQYXJhbXM7XG4iLCJpbXBvcnQgeyBjb2xvckx1bWluYW5jZSB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHsgZ2V0TW9kYWwgfSBmcm9tICcuL2hhbmRsZS1zd2FsLWRvbSc7XG5pbXBvcnQgeyBoYXNDbGFzcywgaXNEZXNjZW5kYW50IH0gZnJvbSAnLi9oYW5kbGUtZG9tJztcblxuXG4vKlxuICogVXNlciBjbGlja2VkIG9uIFwiQ29uZmlybVwiL1wiT0tcIiBvciBcIkNhbmNlbFwiXG4gKi9cbnZhciBoYW5kbGVCdXR0b24gPSBmdW5jdGlvbihldmVudCwgcGFyYW1zLCBtb2RhbCkge1xuICB2YXIgZSA9IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcbiAgdmFyIHRhcmdldCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudDtcblxuICB2YXIgdGFyZ2V0ZWRDb25maXJtID0gdGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdjb25maXJtJykgIT09IC0xO1xuICB2YXIgdGFyZ2V0ZWRPdmVybGF5ID0gdGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdzd2VldC1vdmVybGF5JykgIT09IC0xO1xuICB2YXIgbW9kYWxJc1Zpc2libGUgID0gaGFzQ2xhc3MobW9kYWwsICd2aXNpYmxlJyk7XG4gIHZhciBkb25lRnVuY3Rpb25FeGlzdHMgPSAocGFyYW1zLmRvbmVGdW5jdGlvbiAmJiBtb2RhbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaGFzLWRvbmUtZnVuY3Rpb24nKSA9PT0gJ3RydWUnKTtcblxuICAvLyBTaW5jZSB0aGUgdXNlciBjYW4gY2hhbmdlIHRoZSBiYWNrZ3JvdW5kLWNvbG9yIG9mIHRoZSBjb25maXJtIGJ1dHRvbiBwcm9ncmFtbWF0aWNhbGx5LFxuICAvLyB3ZSBtdXN0IGNhbGN1bGF0ZSB3aGF0IHRoZSBjb2xvciBzaG91bGQgYmUgb24gaG92ZXIvYWN0aXZlXG4gIHZhciBub3JtYWxDb2xvciwgaG92ZXJDb2xvciwgYWN0aXZlQ29sb3I7XG4gIGlmICh0YXJnZXRlZENvbmZpcm0gJiYgcGFyYW1zLmNvbmZpcm1CdXR0b25Db2xvcikge1xuICAgIG5vcm1hbENvbG9yICA9IHBhcmFtcy5jb25maXJtQnV0dG9uQ29sb3I7XG4gICAgaG92ZXJDb2xvciAgID0gY29sb3JMdW1pbmFuY2Uobm9ybWFsQ29sb3IsIC0wLjA0KTtcbiAgICBhY3RpdmVDb2xvciAgPSBjb2xvckx1bWluYW5jZShub3JtYWxDb2xvciwgLTAuMTQpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkU2V0Q29uZmlybUJ1dHRvbkNvbG9yKGNvbG9yKSB7XG4gICAgaWYgKHRhcmdldGVkQ29uZmlybSAmJiBwYXJhbXMuY29uZmlybUJ1dHRvbkNvbG9yKSB7XG4gICAgICB0YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29sb3I7XG4gICAgfVxuICB9XG5cbiAgc3dpdGNoIChlLnR5cGUpIHtcbiAgICBjYXNlICdtb3VzZW92ZXInOlxuICAgICAgc2hvdWxkU2V0Q29uZmlybUJ1dHRvbkNvbG9yKGhvdmVyQ29sb3IpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdtb3VzZW91dCc6XG4gICAgICBzaG91bGRTZXRDb25maXJtQnV0dG9uQ29sb3Iobm9ybWFsQ29sb3IpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdtb3VzZWRvd24nOlxuICAgICAgc2hvdWxkU2V0Q29uZmlybUJ1dHRvbkNvbG9yKGFjdGl2ZUNvbG9yKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnbW91c2V1cCc6XG4gICAgICBzaG91bGRTZXRDb25maXJtQnV0dG9uQ29sb3IoaG92ZXJDb2xvcik7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2ZvY3VzJzpcbiAgICAgIGxldCAkY29uZmlybUJ1dHRvbiA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5jb25maXJtJyk7XG4gICAgICBsZXQgJGNhbmNlbEJ1dHRvbiAgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCdidXR0b24uY2FuY2VsJyk7XG5cbiAgICAgIGlmICh0YXJnZXRlZENvbmZpcm0pIHtcbiAgICAgICAgJGNhbmNlbEJ1dHRvbi5zdHlsZS5ib3hTaGFkb3cgPSAnbm9uZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkY29uZmlybUJ1dHRvbi5zdHlsZS5ib3hTaGFkb3cgPSAnbm9uZSc7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2NsaWNrJzpcbiAgICAgIGxldCBjbGlja2VkT25Nb2RhbCA9IChtb2RhbCA9PT0gdGFyZ2V0KTtcbiAgICAgIGxldCBjbGlja2VkT25Nb2RhbENoaWxkID0gaXNEZXNjZW5kYW50KG1vZGFsLCB0YXJnZXQpO1xuXG4gICAgICAvLyBJZ25vcmUgY2xpY2sgb3V0c2lkZSBpZiBhbGxvd091dHNpZGVDbGljayBpcyBmYWxzZVxuICAgICAgaWYgKCFjbGlja2VkT25Nb2RhbCAmJiAhY2xpY2tlZE9uTW9kYWxDaGlsZCAmJiBtb2RhbElzVmlzaWJsZSAmJiAhcGFyYW1zLmFsbG93T3V0c2lkZUNsaWNrKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAodGFyZ2V0ZWRDb25maXJtICYmIGRvbmVGdW5jdGlvbkV4aXN0cyAmJiBtb2RhbElzVmlzaWJsZSkge1xuICAgICAgICBoYW5kbGVDb25maXJtKG1vZGFsLCBwYXJhbXMpO1xuICAgICAgfSBlbHNlIGlmIChkb25lRnVuY3Rpb25FeGlzdHMgJiYgbW9kYWxJc1Zpc2libGUgfHwgdGFyZ2V0ZWRPdmVybGF5KSB7XG4gICAgICAgIGhhbmRsZUNhbmNlbChtb2RhbCwgcGFyYW1zKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNEZXNjZW5kYW50KG1vZGFsLCB0YXJnZXQpICYmIHRhcmdldC50YWdOYW1lID09PSAnQlVUVE9OJykge1xuICAgICAgICBzd2VldEFsZXJ0LmNsb3NlKCk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfVxufTtcblxuLypcbiAqICBVc2VyIGNsaWNrZWQgb24gXCJDb25maXJtXCIvXCJPS1wiXG4gKi9cbnZhciBoYW5kbGVDb25maXJtID0gZnVuY3Rpb24obW9kYWwsIHBhcmFtcykge1xuICB2YXIgY2FsbGJhY2tWYWx1ZSA9IHRydWU7XG5cbiAgaWYgKGhhc0NsYXNzKG1vZGFsLCAnc2hvdy1pbnB1dCcpKSB7XG4gICAgY2FsbGJhY2tWYWx1ZSA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0JykudmFsdWU7XG5cbiAgICBpZiAoIWNhbGxiYWNrVmFsdWUpIHtcbiAgICAgIGNhbGxiYWNrVmFsdWUgPSAnJztcbiAgICB9XG4gIH1cblxuICBwYXJhbXMuZG9uZUZ1bmN0aW9uKGNhbGxiYWNrVmFsdWUpO1xuXG4gIGlmIChwYXJhbXMuY2xvc2VPbkNvbmZpcm0pIHtcbiAgICBzd2VldEFsZXJ0LmNsb3NlKCk7XG4gIH1cbiAgLy8gRGlzYWJsZSBjYW5jZWwgYW5kIGNvbmZpcm0gYnV0dG9uIGlmIHRoZSBwYXJhbWV0ZXIgaXMgdHJ1ZVxuICBpZiAocGFyYW1zLnNob3dMb2FkZXJPbkNvbmZpcm0pIHtcbiAgICBzd2VldEFsZXJ0LmRpc2FibGVCdXR0b25zKCk7XG4gIH1cbn07XG5cbi8qXG4gKiAgVXNlciBjbGlja2VkIG9uIFwiQ2FuY2VsXCJcbiAqL1xudmFyIGhhbmRsZUNhbmNlbCA9IGZ1bmN0aW9uKG1vZGFsLCBwYXJhbXMpIHtcbiAgLy8gQ2hlY2sgaWYgY2FsbGJhY2sgZnVuY3Rpb24gZXhwZWN0cyBhIHBhcmFtZXRlciAodG8gdHJhY2sgY2FuY2VsIGFjdGlvbnMpXG4gIHZhciBmdW5jdGlvbkFzU3RyID0gU3RyaW5nKHBhcmFtcy5kb25lRnVuY3Rpb24pLnJlcGxhY2UoL1xccy9nLCAnJyk7XG4gIHZhciBmdW5jdGlvbkhhbmRsZXNDYW5jZWwgPSBmdW5jdGlvbkFzU3RyLnN1YnN0cmluZygwLCA5KSA9PT0gJ2Z1bmN0aW9uKCcgJiYgZnVuY3Rpb25Bc1N0ci5zdWJzdHJpbmcoOSwgMTApICE9PSAnKSc7XG5cbiAgaWYgKGZ1bmN0aW9uSGFuZGxlc0NhbmNlbCkge1xuICAgIHBhcmFtcy5kb25lRnVuY3Rpb24oZmFsc2UpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jbG9zZU9uQ2FuY2VsKSB7XG4gICAgc3dlZXRBbGVydC5jbG9zZSgpO1xuICB9XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgaGFuZGxlQnV0dG9uLFxuICBoYW5kbGVDb25maXJtLFxuICBoYW5kbGVDYW5jZWxcbn07XG4iLCJ2YXIgaGFzQ2xhc3MgPSBmdW5jdGlvbihlbGVtLCBjbGFzc05hbWUpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJyAnICsgY2xhc3NOYW1lICsgJyAnKS50ZXN0KCcgJyArIGVsZW0uY2xhc3NOYW1lICsgJyAnKTtcbn07XG5cbnZhciBhZGRDbGFzcyA9IGZ1bmN0aW9uKGVsZW0sIGNsYXNzTmFtZSkge1xuICBpZiAoIWhhc0NsYXNzKGVsZW0sIGNsYXNzTmFtZSkpIHtcbiAgICBlbGVtLmNsYXNzTmFtZSArPSAnICcgKyBjbGFzc05hbWU7XG4gIH1cbn07XG5cbnZhciByZW1vdmVDbGFzcyA9IGZ1bmN0aW9uKGVsZW0sIGNsYXNzTmFtZSkge1xuICB2YXIgbmV3Q2xhc3MgPSAnICcgKyBlbGVtLmNsYXNzTmFtZS5yZXBsYWNlKC9bXFx0XFxyXFxuXS9nLCAnICcpICsgJyAnO1xuICBpZiAoaGFzQ2xhc3MoZWxlbSwgY2xhc3NOYW1lKSkge1xuICAgIHdoaWxlIChuZXdDbGFzcy5pbmRleE9mKCcgJyArIGNsYXNzTmFtZSArICcgJykgPj0gMCkge1xuICAgICAgbmV3Q2xhc3MgPSBuZXdDbGFzcy5yZXBsYWNlKCcgJyArIGNsYXNzTmFtZSArICcgJywgJyAnKTtcbiAgICB9XG4gICAgZWxlbS5jbGFzc05hbWUgPSBuZXdDbGFzcy5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG4gIH1cbn07XG5cbnZhciBlc2NhcGVIdG1sID0gZnVuY3Rpb24oc3RyKSB7XG4gIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0cikpO1xuICByZXR1cm4gZGl2LmlubmVySFRNTDtcbn07XG5cbnZhciBfc2hvdyA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgZWxlbS5zdHlsZS5vcGFjaXR5ID0gJyc7XG4gIGVsZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG59O1xuXG52YXIgc2hvdyA9IGZ1bmN0aW9uKGVsZW1zKSB7XG4gIGlmIChlbGVtcyAmJiAhZWxlbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIF9zaG93KGVsZW1zKTtcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1zLmxlbmd0aDsgKytpKSB7XG4gICAgX3Nob3coZWxlbXNbaV0pO1xuICB9XG59O1xuXG52YXIgX2hpZGUgPSBmdW5jdGlvbihlbGVtKSB7XG4gIGVsZW0uc3R5bGUub3BhY2l0eSA9ICcnO1xuICBlbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59O1xuXG52YXIgaGlkZSA9IGZ1bmN0aW9uKGVsZW1zKSB7XG4gIGlmIChlbGVtcyAmJiAhZWxlbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIF9oaWRlKGVsZW1zKTtcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1zLmxlbmd0aDsgKytpKSB7XG4gICAgX2hpZGUoZWxlbXNbaV0pO1xuICB9XG59O1xuXG52YXIgaXNEZXNjZW5kYW50ID0gZnVuY3Rpb24ocGFyZW50LCBjaGlsZCkge1xuICB2YXIgbm9kZSA9IGNoaWxkLnBhcmVudE5vZGU7XG4gIHdoaWxlIChub2RlICE9PSBudWxsKSB7XG4gICAgaWYgKG5vZGUgPT09IHBhcmVudCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxudmFyIGdldFRvcE1hcmdpbiA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgZWxlbS5zdHlsZS5sZWZ0ID0gJy05OTk5cHgnO1xuICBlbGVtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gIHZhciBoZWlnaHQgPSBlbGVtLmNsaWVudEhlaWdodCxcbiAgICAgIHBhZGRpbmc7XG4gIGlmICh0eXBlb2YgZ2V0Q29tcHV0ZWRTdHlsZSAhPT0gXCJ1bmRlZmluZWRcIikgeyAvLyBJRSA4XG4gICAgcGFkZGluZyA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUoZWxlbSkuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy10b3AnKSwgMTApO1xuICB9IGVsc2Uge1xuICAgIHBhZGRpbmcgPSBwYXJzZUludChlbGVtLmN1cnJlbnRTdHlsZS5wYWRkaW5nKTtcbiAgfVxuXG4gIGVsZW0uc3R5bGUubGVmdCA9ICcnO1xuICBlbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIHJldHVybiAoJy0nICsgcGFyc2VJbnQoKGhlaWdodCArIHBhZGRpbmcpIC8gMikgKyAncHgnKTtcbn07XG5cbnZhciBmYWRlSW4gPSBmdW5jdGlvbihlbGVtLCBpbnRlcnZhbCkge1xuICBpZiAoK2VsZW0uc3R5bGUub3BhY2l0eSA8IDEpIHtcbiAgICBpbnRlcnZhbCA9IGludGVydmFsIHx8IDE2O1xuICAgIGVsZW0uc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgZWxlbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICB2YXIgbGFzdCA9ICtuZXcgRGF0ZSgpO1xuICAgIHZhciB0aWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICBlbGVtLnN0eWxlLm9wYWNpdHkgPSArZWxlbS5zdHlsZS5vcGFjaXR5ICsgKG5ldyBEYXRlKCkgLSBsYXN0KSAvIDEwMDtcbiAgICAgIGxhc3QgPSArbmV3IERhdGUoKTtcblxuICAgICAgaWYgKCtlbGVtLnN0eWxlLm9wYWNpdHkgPCAxKSB7XG4gICAgICAgIHNldFRpbWVvdXQodGljaywgaW50ZXJ2YWwpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGljaygpO1xuICB9XG4gIGVsZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7IC8vZmFsbGJhY2sgSUU4XG59O1xuXG52YXIgZmFkZU91dCA9IGZ1bmN0aW9uKGVsZW0sIGludGVydmFsKSB7XG4gIGludGVydmFsID0gaW50ZXJ2YWwgfHwgMTY7XG4gIGVsZW0uc3R5bGUub3BhY2l0eSA9IDE7XG4gIHZhciBsYXN0ID0gK25ldyBEYXRlKCk7XG4gIHZhciB0aWNrID0gZnVuY3Rpb24oKSB7XG4gICAgZWxlbS5zdHlsZS5vcGFjaXR5ID0gK2VsZW0uc3R5bGUub3BhY2l0eSAtIChuZXcgRGF0ZSgpIC0gbGFzdCkgLyAxMDA7XG4gICAgbGFzdCA9ICtuZXcgRGF0ZSgpO1xuXG4gICAgaWYgKCtlbGVtLnN0eWxlLm9wYWNpdHkgPiAwKSB7XG4gICAgICBzZXRUaW1lb3V0KHRpY2ssIGludGVydmFsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWxlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cbiAgfTtcbiAgdGljaygpO1xufTtcblxudmFyIGZpcmVDbGljayA9IGZ1bmN0aW9uKG5vZGUpIHtcbiAgLy8gVGFrZW4gZnJvbSBodHRwOi8vd3d3Lm5vbm9idHJ1c2l2ZS5jb20vMjAxMS8xMS8yOS9wcm9ncmFtYXRpY2FsbHktZmlyZS1jcm9zc2Jyb3dzZXItY2xpY2stZXZlbnQtd2l0aC1qYXZhc2NyaXB0L1xuICAvLyBUaGVuIGZpeGVkIGZvciB0b2RheSdzIENocm9tZSBicm93c2VyLlxuICBpZiAodHlwZW9mIE1vdXNlRXZlbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBVcC10by1kYXRlIGFwcHJvYWNoXG4gICAgdmFyIG1ldnQgPSBuZXcgTW91c2VFdmVudCgnY2xpY2snLCB7XG4gICAgICB2aWV3OiB3aW5kb3csXG4gICAgICBidWJibGVzOiBmYWxzZSxcbiAgICAgIGNhbmNlbGFibGU6IHRydWVcbiAgICB9KTtcbiAgICBub2RlLmRpc3BhdGNoRXZlbnQobWV2dCk7XG4gIH0gZWxzZSBpZiAoIGRvY3VtZW50LmNyZWF0ZUV2ZW50ICkge1xuICAgIC8vIEZhbGxiYWNrXG4gICAgdmFyIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdNb3VzZUV2ZW50cycpO1xuICAgIGV2dC5pbml0RXZlbnQoJ2NsaWNrJywgZmFsc2UsIGZhbHNlKTtcbiAgICBub2RlLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgfSBlbHNlIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudE9iamVjdCkge1xuICAgIG5vZGUuZmlyZUV2ZW50KCdvbmNsaWNrJykgO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlLm9uY2xpY2sgPT09ICdmdW5jdGlvbicgKSB7XG4gICAgbm9kZS5vbmNsaWNrKCk7XG4gIH1cbn07XG5cbnZhciBzdG9wRXZlbnRQcm9wYWdhdGlvbiA9IGZ1bmN0aW9uKGUpIHtcbiAgLy8gSW4gcGFydGljdWxhciwgbWFrZSBzdXJlIHRoZSBzcGFjZSBiYXIgZG9lc24ndCBzY3JvbGwgdGhlIG1haW4gd2luZG93LlxuICBpZiAodHlwZW9mIGUuc3RvcFByb3BhZ2F0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0gZWxzZSBpZiAod2luZG93LmV2ZW50ICYmIHdpbmRvdy5ldmVudC5oYXNPd25Qcm9wZXJ0eSgnY2FuY2VsQnViYmxlJykpIHtcbiAgICB3aW5kb3cuZXZlbnQuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgfVxufTtcblxuZXhwb3J0IHsgXG4gIGhhc0NsYXNzLCBhZGRDbGFzcywgcmVtb3ZlQ2xhc3MsIFxuICBlc2NhcGVIdG1sLCBcbiAgX3Nob3csIHNob3csIF9oaWRlLCBoaWRlLCBcbiAgaXNEZXNjZW5kYW50LCBcbiAgZ2V0VG9wTWFyZ2luLFxuICBmYWRlSW4sIGZhZGVPdXQsXG4gIGZpcmVDbGljayxcbiAgc3RvcEV2ZW50UHJvcGFnYXRpb25cbn07XG4iLCJpbXBvcnQgeyBzdG9wRXZlbnRQcm9wYWdhdGlvbiwgZmlyZUNsaWNrIH0gZnJvbSAnLi9oYW5kbGUtZG9tJztcbmltcG9ydCB7IHNldEZvY3VzU3R5bGUgfSBmcm9tICcuL2hhbmRsZS1zd2FsLWRvbSc7XG5cblxudmFyIGhhbmRsZUtleURvd24gPSBmdW5jdGlvbihldmVudCwgcGFyYW1zLCBtb2RhbCkge1xuICB2YXIgZSA9IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcbiAgdmFyIGtleUNvZGUgPSBlLmtleUNvZGUgfHwgZS53aGljaDtcblxuICB2YXIgJG9rQnV0dG9uICAgICA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5jb25maXJtJyk7XG4gIHZhciAkY2FuY2VsQnV0dG9uID0gbW9kYWwucXVlcnlTZWxlY3RvcignYnV0dG9uLmNhbmNlbCcpO1xuICB2YXIgJG1vZGFsQnV0dG9ucyA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvblt0YWJpbmRleF0nKTtcblxuXG4gIGlmIChbOSwgMTMsIDMyLCAyN10uaW5kZXhPZihrZXlDb2RlKSA9PT0gLTEpIHtcbiAgICAvLyBEb24ndCBkbyB3b3JrIG9uIGtleXMgd2UgZG9uJ3QgY2FyZSBhYm91dC5cbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgJHRhcmdldEVsZW1lbnQgPSBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQ7XG5cbiAgdmFyIGJ0bkluZGV4ID0gLTE7IC8vIEZpbmQgdGhlIGJ1dHRvbiAtIG5vdGUsIHRoaXMgaXMgYSBub2RlbGlzdCwgbm90IGFuIGFycmF5LlxuICBmb3IgKHZhciBpID0gMDsgaSA8ICRtb2RhbEJ1dHRvbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoJHRhcmdldEVsZW1lbnQgPT09ICRtb2RhbEJ1dHRvbnNbaV0pIHtcbiAgICAgIGJ0bkluZGV4ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXlDb2RlID09PSA5KSB7XG4gICAgLy8gVEFCXG4gICAgaWYgKGJ0bkluZGV4ID09PSAtMSkge1xuICAgICAgLy8gTm8gYnV0dG9uIGZvY3VzZWQuIEp1bXAgdG8gdGhlIGNvbmZpcm0gYnV0dG9uLlxuICAgICAgJHRhcmdldEVsZW1lbnQgPSAkb2tCdXR0b247XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEN5Y2xlIHRvIHRoZSBuZXh0IGJ1dHRvblxuICAgICAgaWYgKGJ0bkluZGV4ID09PSAkbW9kYWxCdXR0b25zLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgJHRhcmdldEVsZW1lbnQgPSAkbW9kYWxCdXR0b25zWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJHRhcmdldEVsZW1lbnQgPSAkbW9kYWxCdXR0b25zW2J0bkluZGV4ICsgMV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3RvcEV2ZW50UHJvcGFnYXRpb24oZSk7XG4gICAgJHRhcmdldEVsZW1lbnQuZm9jdXMoKTtcblxuICAgIGlmIChwYXJhbXMuY29uZmlybUJ1dHRvbkNvbG9yKSB7XG4gICAgICBzZXRGb2N1c1N0eWxlKCR0YXJnZXRFbGVtZW50LCBwYXJhbXMuY29uZmlybUJ1dHRvbkNvbG9yKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGtleUNvZGUgPT09IDEzKSB7XG4gICAgICBpZiAoJHRhcmdldEVsZW1lbnQudGFnTmFtZSA9PT0gJ0lOUFVUJykge1xuICAgICAgICAkdGFyZ2V0RWxlbWVudCA9ICRva0J1dHRvbjtcbiAgICAgICAgJG9rQnV0dG9uLmZvY3VzKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChidG5JbmRleCA9PT0gLTEpIHtcbiAgICAgICAgLy8gRU5URVIvU1BBQ0UgY2xpY2tlZCBvdXRzaWRlIG9mIGEgYnV0dG9uLlxuICAgICAgICAkdGFyZ2V0RWxlbWVudCA9ICRva0J1dHRvbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIERvIG5vdGhpbmcgLSBsZXQgdGhlIGJyb3dzZXIgaGFuZGxlIGl0LlxuICAgICAgICAkdGFyZ2V0RWxlbWVudCA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGtleUNvZGUgPT09IDI3ICYmIHBhcmFtcy5hbGxvd0VzY2FwZUtleSA9PT0gdHJ1ZSkge1xuICAgICAgJHRhcmdldEVsZW1lbnQgPSAkY2FuY2VsQnV0dG9uO1xuICAgICAgZmlyZUNsaWNrKCR0YXJnZXRFbGVtZW50LCBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gRmFsbGJhY2sgLSBsZXQgdGhlIGJyb3dzZXIgaGFuZGxlIGl0LlxuICAgICAgJHRhcmdldEVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVLZXlEb3duO1xuIiwiaW1wb3J0IHsgaGV4VG9SZ2IgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IHJlbW92ZUNsYXNzLCBnZXRUb3BNYXJnaW4sIGZhZGVJbiwgc2hvdywgYWRkQ2xhc3MgfSBmcm9tICcuL2hhbmRsZS1kb20nO1xuaW1wb3J0IGRlZmF1bHRQYXJhbXMgZnJvbSAnLi9kZWZhdWx0LXBhcmFtcyc7XG5cbnZhciBtb2RhbENsYXNzICAgPSAnLnN3ZWV0LWFsZXJ0JztcbnZhciBvdmVybGF5Q2xhc3MgPSAnLnN3ZWV0LW92ZXJsYXknO1xuXG4vKlxuICogQWRkIG1vZGFsICsgb3ZlcmxheSB0byBET01cbiAqL1xuaW1wb3J0IGluamVjdGVkSFRNTCBmcm9tICcuL2luamVjdGVkLWh0bWwnO1xuXG52YXIgc3dlZXRBbGVydEluaXRpYWxpemUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHN3ZWV0V3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBzd2VldFdyYXAuaW5uZXJIVE1MID0gaW5qZWN0ZWRIVE1MO1xuXG4gIC8vIEFwcGVuZCBlbGVtZW50cyB0byBib2R5XG4gIHdoaWxlIChzd2VldFdyYXAuZmlyc3RDaGlsZCkge1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc3dlZXRXcmFwLmZpcnN0Q2hpbGQpO1xuICB9XG59O1xuXG4vKlxuICogR2V0IERPTSBlbGVtZW50IG9mIG1vZGFsXG4gKi9cbnZhciBnZXRNb2RhbCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgJG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihtb2RhbENsYXNzKTtcblxuICBpZiAoISRtb2RhbCkge1xuICAgIHN3ZWV0QWxlcnRJbml0aWFsaXplKCk7XG4gICAgJG1vZGFsID0gZ2V0TW9kYWwoKTtcbiAgfVxuXG4gIHJldHVybiAkbW9kYWw7XG59O1xuXG4vKlxuICogR2V0IERPTSBlbGVtZW50IG9mIGlucHV0IChpbiBtb2RhbClcbiAqL1xudmFyIGdldElucHV0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciAkbW9kYWwgPSBnZXRNb2RhbCgpO1xuICBpZiAoJG1vZGFsKSB7XG4gICAgcmV0dXJuICRtb2RhbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpO1xuICB9XG59O1xuXG4vKlxuICogR2V0IERPTSBlbGVtZW50IG9mIG92ZXJsYXlcbiAqL1xudmFyIGdldE92ZXJsYXkgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Iob3ZlcmxheUNsYXNzKTtcbn07XG5cbi8qXG4gKiBBZGQgYm94LXNoYWRvdyBzdHlsZSB0byBidXR0b24gKGRlcGVuZGluZyBvbiBpdHMgY2hvc2VuIGJnLWNvbG9yKVxuICovXG52YXIgc2V0Rm9jdXNTdHlsZSA9IGZ1bmN0aW9uKCRidXR0b24sIGJnQ29sb3IpIHtcbiAgdmFyIHJnYkNvbG9yID0gaGV4VG9SZ2IoYmdDb2xvcik7XG4gICRidXR0b24uc3R5bGUuYm94U2hhZG93ID0gJzAgMCAycHggcmdiYSgnICsgcmdiQ29sb3IgKyAnLCAwLjgpLCBpbnNldCAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjA1KSc7XG59O1xuXG4vKlxuICogQW5pbWF0aW9uIHdoZW4gb3BlbmluZyBtb2RhbFxuICovXG52YXIgb3Blbk1vZGFsID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyICRtb2RhbCA9IGdldE1vZGFsKCk7XG4gIGZhZGVJbihnZXRPdmVybGF5KCksIDEwKTtcbiAgc2hvdygkbW9kYWwpO1xuICBhZGRDbGFzcygkbW9kYWwsICdzaG93U3dlZXRBbGVydCcpO1xuICByZW1vdmVDbGFzcygkbW9kYWwsICdoaWRlU3dlZXRBbGVydCcpO1xuXG4gIHdpbmRvdy5wcmV2aW91c0FjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICB2YXIgJG9rQnV0dG9uID0gJG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5jb25maXJtJyk7XG4gICRva0J1dHRvbi5mb2N1cygpO1xuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIGFkZENsYXNzKCRtb2RhbCwgJ3Zpc2libGUnKTtcbiAgfSwgNTAwKTtcblxuICB2YXIgdGltZXIgPSAkbW9kYWwuZ2V0QXR0cmlidXRlKCdkYXRhLXRpbWVyJyk7XG5cbiAgaWYgKHRpbWVyICE9PSAnbnVsbCcgJiYgdGltZXIgIT09ICcnKSB7XG4gICAgdmFyIHRpbWVyQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAkbW9kYWwudGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZG9uZUZ1bmN0aW9uRXhpc3RzID0gKCh0aW1lckNhbGxiYWNrIHx8IG51bGwpICYmICRtb2RhbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaGFzLWRvbmUtZnVuY3Rpb24nKSA9PT0gJ3RydWUnKTtcbiAgICAgIGlmIChkb25lRnVuY3Rpb25FeGlzdHMpIHsgXG4gICAgICAgIHRpbWVyQ2FsbGJhY2sobnVsbCk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgc3dlZXRBbGVydC5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0sIHRpbWVyKTtcbiAgfVxufTtcblxuLypcbiAqIFJlc2V0IHRoZSBzdHlsaW5nIG9mIHRoZSBpbnB1dFxuICogKGZvciBleGFtcGxlIGlmIGVycm9ycyBoYXZlIGJlZW4gc2hvd24pXG4gKi9cbnZhciByZXNldElucHV0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciAkbW9kYWwgPSBnZXRNb2RhbCgpO1xuICB2YXIgJGlucHV0ID0gZ2V0SW5wdXQoKTtcblxuICByZW1vdmVDbGFzcygkbW9kYWwsICdzaG93LWlucHV0Jyk7XG4gICRpbnB1dC52YWx1ZSA9IGRlZmF1bHRQYXJhbXMuaW5wdXRWYWx1ZTtcbiAgJGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsIGRlZmF1bHRQYXJhbXMuaW5wdXRUeXBlKTtcbiAgJGlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCBkZWZhdWx0UGFyYW1zLmlucHV0UGxhY2Vob2xkZXIpO1xuXG4gIHJlc2V0SW5wdXRFcnJvcigpO1xufTtcblxuXG52YXIgcmVzZXRJbnB1dEVycm9yID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgLy8gSWYgcHJlc3MgZW50ZXIgPT4gaWdub3JlXG4gIGlmIChldmVudCAmJiBldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciAkbW9kYWwgPSBnZXRNb2RhbCgpO1xuXG4gIHZhciAkZXJyb3JJY29uID0gJG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5zYS1pbnB1dC1lcnJvcicpO1xuICByZW1vdmVDbGFzcygkZXJyb3JJY29uLCAnc2hvdycpO1xuXG4gIHZhciAkZXJyb3JDb250YWluZXIgPSAkbW9kYWwucXVlcnlTZWxlY3RvcignLnNhLWVycm9yLWNvbnRhaW5lcicpO1xuICByZW1vdmVDbGFzcygkZXJyb3JDb250YWluZXIsICdzaG93Jyk7XG59O1xuXG5cbi8qXG4gKiBTZXQgXCJtYXJnaW4tdG9wXCItcHJvcGVydHkgb24gbW9kYWwgYmFzZWQgb24gaXRzIGNvbXB1dGVkIGhlaWdodFxuICovXG52YXIgZml4VmVydGljYWxQb3NpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgJG1vZGFsID0gZ2V0TW9kYWwoKTtcbiAgJG1vZGFsLnN0eWxlLm1hcmdpblRvcCA9IGdldFRvcE1hcmdpbihnZXRNb2RhbCgpKTtcbn07XG5cblxuZXhwb3J0IHsgXG4gIHN3ZWV0QWxlcnRJbml0aWFsaXplLFxuICBnZXRNb2RhbCxcbiAgZ2V0T3ZlcmxheSxcbiAgZ2V0SW5wdXQsXG4gIHNldEZvY3VzU3R5bGUsXG4gIG9wZW5Nb2RhbCxcbiAgcmVzZXRJbnB1dCxcbiAgcmVzZXRJbnB1dEVycm9yLFxuICBmaXhWZXJ0aWNhbFBvc2l0aW9uXG59O1xuIiwidmFyIGluamVjdGVkSFRNTCA9IFxuXG4gIC8vIERhcmsgb3ZlcmxheVxuICBgPGRpdiBjbGFzcz1cInN3ZWV0LW92ZXJsYXlcIiB0YWJJbmRleD1cIi0xXCI+PC9kaXY+YCArXG5cbiAgLy8gTW9kYWxcbiAgYDxkaXYgY2xhc3M9XCJzd2VldC1hbGVydFwiPmAgK1xuXG4gICAgLy8gRXJyb3IgaWNvblxuICAgIGA8ZGl2IGNsYXNzPVwic2EtaWNvbiBzYS1lcnJvclwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzYS14LW1hcmtcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJzYS1saW5lIHNhLWxlZnRcIj48L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwic2EtbGluZSBzYS1yaWdodFwiPjwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5gICtcblxuICAgIC8vIFdhcm5pbmcgaWNvblxuICAgIGA8ZGl2IGNsYXNzPVwic2EtaWNvbiBzYS13YXJuaW5nXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cInNhLWJvZHlcIj48L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cInNhLWRvdFwiPjwvc3Bhbj5cbiAgICA8L2Rpdj5gICtcblxuICAgIC8vIEluZm8gaWNvblxuICAgIGA8ZGl2IGNsYXNzPVwic2EtaWNvbiBzYS1pbmZvXCI+PC9kaXY+YCArXG5cbiAgICAvLyBTdWNjZXNzIGljb25cbiAgICBgPGRpdiBjbGFzcz1cInNhLWljb24gc2Etc3VjY2Vzc1wiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzYS1saW5lIHNhLXRpcFwiPjwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPVwic2EtbGluZSBzYS1sb25nXCI+PC9zcGFuPlxuXG4gICAgICA8ZGl2IGNsYXNzPVwic2EtcGxhY2Vob2xkZXJcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzYS1maXhcIj48L2Rpdj5cbiAgICA8L2Rpdj5gICtcblxuICAgIGA8ZGl2IGNsYXNzPVwic2EtaWNvbiBzYS1jdXN0b21cIj48L2Rpdj5gICtcblxuICAgIC8vIFRpdGxlLCB0ZXh0IGFuZCBpbnB1dFxuICAgIGA8aDI+VGl0bGU8L2gyPlxuICAgIDxwPlRleHQ8L3A+XG4gICAgPGZpZWxkc2V0PlxuICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdGFiSW5kZXg9XCIzXCIgLz5cbiAgICAgIDxkaXYgY2xhc3M9XCJzYS1pbnB1dC1lcnJvclwiPjwvZGl2PlxuICAgIDwvZmllbGRzZXQ+YCArXG5cbiAgICAvLyBJbnB1dCBlcnJvcnNcbiAgICBgPGRpdiBjbGFzcz1cInNhLWVycm9yLWNvbnRhaW5lclwiPlxuICAgICAgPGRpdiBjbGFzcz1cImljb25cIj4hPC9kaXY+XG4gICAgICA8cD5Ob3QgdmFsaWQhPC9wPlxuICAgIDwvZGl2PmAgK1xuXG4gICAgLy8gQ2FuY2VsIGFuZCBjb25maXJtIGJ1dHRvbnNcbiAgICBgPGRpdiBjbGFzcz1cInNhLWJ1dHRvbi1jb250YWluZXJcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJjYW5jZWxcIiB0YWJJbmRleD1cIjJcIj5DYW5jZWw8L2J1dHRvbj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzYS1jb25maXJtLWJ1dHRvbi1jb250YWluZXJcIj5cbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImNvbmZpcm1cIiB0YWJJbmRleD1cIjFcIj5PSzwvYnV0dG9uPmAgKyBcblxuICAgICAgICAvLyBMb2FkaW5nIGFuaW1hdGlvblxuICAgICAgICBgPGRpdiBjbGFzcz1cImxhLWJhbGwtZmFsbFwiPlxuICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PmAgK1xuXG4gIC8vIEVuZCBvZiBtb2RhbFxuICBgPC9kaXY+YDtcblxuZXhwb3J0IGRlZmF1bHQgaW5qZWN0ZWRIVE1MO1xuIiwidmFyIGFsZXJ0VHlwZXMgPSBbJ2Vycm9yJywgJ3dhcm5pbmcnLCAnaW5mbycsICdzdWNjZXNzJywgJ2lucHV0JywgJ3Byb21wdCddO1xuXG5pbXBvcnQge1xuICBpc0lFOFxufSBmcm9tICcuL3V0aWxzJztcblxuaW1wb3J0IHtcbiAgZ2V0TW9kYWwsXG4gIGdldElucHV0LFxuICBzZXRGb2N1c1N0eWxlXG59IGZyb20gJy4vaGFuZGxlLXN3YWwtZG9tJztcblxuaW1wb3J0IHtcbiAgaGFzQ2xhc3MsIGFkZENsYXNzLCByZW1vdmVDbGFzcyxcbiAgZXNjYXBlSHRtbCxcbiAgX3Nob3csIHNob3csIF9oaWRlLCBoaWRlXG59IGZyb20gJy4vaGFuZGxlLWRvbSc7XG5cblxuLypcbiAqIFNldCB0eXBlLCB0ZXh0IGFuZCBhY3Rpb25zIG9uIG1vZGFsXG4gKi9cbnZhciBzZXRQYXJhbWV0ZXJzID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gIHZhciBtb2RhbCA9IGdldE1vZGFsKCk7XG5cbiAgdmFyICR0aXRsZSA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2gyJyk7XG4gIHZhciAkdGV4dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ3AnKTtcbiAgdmFyICRjYW5jZWxCdG4gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCdidXR0b24uY2FuY2VsJyk7XG4gIHZhciAkY29uZmlybUJ0biA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbi5jb25maXJtJyk7XG5cbiAgLypcbiAgICogVGl0bGVcbiAgICovXG4gICR0aXRsZS5pbm5lckhUTUwgPSBwYXJhbXMuaHRtbCA/IHBhcmFtcy50aXRsZSA6IGVzY2FwZUh0bWwocGFyYW1zLnRpdGxlKS5zcGxpdCgnXFxuJykuam9pbignPGJyPicpO1xuXG4gIC8qXG4gICAqIFRleHRcbiAgICovXG4gICR0ZXh0LmlubmVySFRNTCA9IHBhcmFtcy5odG1sID8gcGFyYW1zLnRleHQgOiBlc2NhcGVIdG1sKHBhcmFtcy50ZXh0IHx8ICcnKS5zcGxpdCgnXFxuJykuam9pbignPGJyPicpO1xuICBpZiAocGFyYW1zLnRleHQpIHNob3coJHRleHQpO1xuXG4gIC8qXG4gICAqIEN1c3RvbSBjbGFzc1xuICAgKi9cbiAgaWYgKHBhcmFtcy5jdXN0b21DbGFzcykge1xuICAgIGFkZENsYXNzKG1vZGFsLCBwYXJhbXMuY3VzdG9tQ2xhc3MpO1xuICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgnZGF0YS1jdXN0b20tY2xhc3MnLCBwYXJhbXMuY3VzdG9tQ2xhc3MpO1xuICB9IGVsc2Uge1xuICAgIC8vIEZpbmQgcHJldmlvdXNseSBzZXQgY2xhc3NlcyBhbmQgcmVtb3ZlIHRoZW1cbiAgICBsZXQgY3VzdG9tQ2xhc3MgPSBtb2RhbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY3VzdG9tLWNsYXNzJyk7XG4gICAgcmVtb3ZlQ2xhc3MobW9kYWwsIGN1c3RvbUNsYXNzKTtcbiAgICBtb2RhbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtY3VzdG9tLWNsYXNzJywgJycpO1xuICB9XG5cbiAgLypcbiAgICogSWNvblxuICAgKi9cbiAgaGlkZShtb2RhbC5xdWVyeVNlbGVjdG9yQWxsKCcuc2EtaWNvbicpKTtcblxuICBpZiAocGFyYW1zLnR5cGUgJiYgIWlzSUU4KCkpIHtcblxuICAgIGxldCB2YWxpZFR5cGUgPSBmYWxzZTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxlcnRUeXBlcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHBhcmFtcy50eXBlID09PSBhbGVydFR5cGVzW2ldKSB7XG4gICAgICAgIHZhbGlkVHlwZSA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghdmFsaWRUeXBlKSB7XG4gICAgICBsb2dTdHIoJ1Vua25vd24gYWxlcnQgdHlwZTogJyArIHBhcmFtcy50eXBlKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBsZXQgdHlwZXNXaXRoSWNvbnMgPSBbJ3N1Y2Nlc3MnLCAnZXJyb3InLCAnd2FybmluZycsICdpbmZvJ107XG4gICAgbGV0ICRpY29uO1xuXG4gICAgaWYgKHR5cGVzV2l0aEljb25zLmluZGV4T2YocGFyYW1zLnR5cGUpICE9PSAtMSkge1xuICAgICAgJGljb24gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuc2EtaWNvbi4nICsgJ3NhLScgKyBwYXJhbXMudHlwZSk7XG4gICAgICBzaG93KCRpY29uKTtcbiAgICB9XG5cbiAgICBsZXQgJGlucHV0ID0gZ2V0SW5wdXQoKTtcblxuICAgIC8vIEFuaW1hdGUgaWNvblxuICAgIHN3aXRjaCAocGFyYW1zLnR5cGUpIHtcblxuICAgICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICAgIGFkZENsYXNzKCRpY29uLCAnYW5pbWF0ZScpO1xuICAgICAgICBhZGRDbGFzcygkaWNvbi5xdWVyeVNlbGVjdG9yKCcuc2EtdGlwJyksICdhbmltYXRlU3VjY2Vzc1RpcCcpO1xuICAgICAgICBhZGRDbGFzcygkaWNvbi5xdWVyeVNlbGVjdG9yKCcuc2EtbG9uZycpLCAnYW5pbWF0ZVN1Y2Nlc3NMb25nJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgIGFkZENsYXNzKCRpY29uLCAnYW5pbWF0ZUVycm9ySWNvbicpO1xuICAgICAgICBhZGRDbGFzcygkaWNvbi5xdWVyeVNlbGVjdG9yKCcuc2EteC1tYXJrJyksICdhbmltYXRlWE1hcmsnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgICBhZGRDbGFzcygkaWNvbiwgJ3B1bHNlV2FybmluZycpO1xuICAgICAgICBhZGRDbGFzcygkaWNvbi5xdWVyeVNlbGVjdG9yKCcuc2EtYm9keScpLCAncHVsc2VXYXJuaW5nSW5zJyk7XG4gICAgICAgIGFkZENsYXNzKCRpY29uLnF1ZXJ5U2VsZWN0b3IoJy5zYS1kb3QnKSwgJ3B1bHNlV2FybmluZ0lucycpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnaW5wdXQnOlxuICAgICAgY2FzZSAncHJvbXB0JzpcbiAgICAgICAgJGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsIHBhcmFtcy5pbnB1dFR5cGUpO1xuICAgICAgICAkaW5wdXQudmFsdWUgPSBwYXJhbXMuaW5wdXRWYWx1ZTtcbiAgICAgICAgJGlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCBwYXJhbXMuaW5wdXRQbGFjZWhvbGRlcik7XG4gICAgICAgIGFkZENsYXNzKG1vZGFsLCAnc2hvdy1pbnB1dCcpO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICAkaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBzd2FsLnJlc2V0SW5wdXRFcnJvcik7XG4gICAgICAgIH0sIDQwMCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAqIEN1c3RvbSBpbWFnZVxuICAgKi9cbiAgaWYgKHBhcmFtcy5pbWFnZVVybCkge1xuICAgIGxldCAkY3VzdG9tSWNvbiA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5zYS1pY29uLnNhLWN1c3RvbScpO1xuXG4gICAgJGN1c3RvbUljb24uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gJ3VybCgnICsgcGFyYW1zLmltYWdlVXJsICsgJyknO1xuICAgIHNob3coJGN1c3RvbUljb24pO1xuXG4gICAgbGV0IF9pbWdXaWR0aCA9IDgwO1xuICAgIGxldCBfaW1nSGVpZ2h0ID0gODA7XG5cbiAgICBpZiAocGFyYW1zLmltYWdlU2l6ZSkge1xuICAgICAgbGV0IGRpbWVuc2lvbnMgPSBwYXJhbXMuaW1hZ2VTaXplLnRvU3RyaW5nKCkuc3BsaXQoJ3gnKTtcbiAgICAgIGxldCBpbWdXaWR0aCA9IGRpbWVuc2lvbnNbMF07XG4gICAgICBsZXQgaW1nSGVpZ2h0ID0gZGltZW5zaW9uc1sxXTtcblxuICAgICAgaWYgKCFpbWdXaWR0aCB8fCAhaW1nSGVpZ2h0KSB7XG4gICAgICAgIGxvZ1N0cignUGFyYW1ldGVyIGltYWdlU2l6ZSBleHBlY3RzIHZhbHVlIHdpdGggZm9ybWF0IFdJRFRIeEhFSUdIVCwgZ290ICcgKyBwYXJhbXMuaW1hZ2VTaXplKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9pbWdXaWR0aCA9IGltZ1dpZHRoO1xuICAgICAgICBfaW1nSGVpZ2h0ID0gaW1nSGVpZ2h0O1xuICAgICAgfVxuICAgIH1cblxuICAgICRjdXN0b21JY29uLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAkY3VzdG9tSWNvbi5nZXRBdHRyaWJ1dGUoJ3N0eWxlJykgKyAnd2lkdGg6JyArIF9pbWdXaWR0aCArICdweDsgaGVpZ2h0OicgKyBfaW1nSGVpZ2h0ICsgJ3B4Jyk7XG4gIH1cblxuICAvKlxuICAgKiBTaG93IGNhbmNlbCBidXR0b24/XG4gICAqL1xuICBtb2RhbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGFzLWNhbmNlbC1idXR0b24nLCBwYXJhbXMuc2hvd0NhbmNlbEJ1dHRvbik7XG4gIGlmIChwYXJhbXMuc2hvd0NhbmNlbEJ1dHRvbikge1xuICAgICRjYW5jZWxCdG4uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuICB9IGVsc2Uge1xuICAgIGhpZGUoJGNhbmNlbEJ0bik7XG4gIH1cblxuICAvKlxuICAgKiBTaG93IGNvbmZpcm0gYnV0dG9uP1xuICAgKi9cbiAgbW9kYWwuc2V0QXR0cmlidXRlKCdkYXRhLWhhcy1jb25maXJtLWJ1dHRvbicsIHBhcmFtcy5zaG93Q29uZmlybUJ1dHRvbik7XG4gIGlmIChwYXJhbXMuc2hvd0NvbmZpcm1CdXR0b24pIHtcbiAgICAkY29uZmlybUJ0bi5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XG4gIH0gZWxzZSB7XG4gICAgaGlkZSgkY29uZmlybUJ0bik7XG4gIH1cblxuICAvKlxuICAgKiBDdXN0b20gdGV4dCBvbiBjYW5jZWwvY29uZmlybSBidXR0b25zXG4gICAqL1xuICBpZiAocGFyYW1zLmNhbmNlbEJ1dHRvblRleHQpIHtcbiAgICAkY2FuY2VsQnRuLmlubmVySFRNTCA9IGVzY2FwZUh0bWwocGFyYW1zLmNhbmNlbEJ1dHRvblRleHQpO1xuICB9XG4gIGlmIChwYXJhbXMuY29uZmlybUJ1dHRvblRleHQpIHtcbiAgICAkY29uZmlybUJ0bi5pbm5lckhUTUwgPSBlc2NhcGVIdG1sKHBhcmFtcy5jb25maXJtQnV0dG9uVGV4dCk7XG4gIH1cblxuICAvKlxuICAgKiBDdXN0b20gY29sb3Igb24gY29uZmlybSBidXR0b25cbiAgICovXG4gIGlmIChwYXJhbXMuY29uZmlybUJ1dHRvbkNvbG9yKSB7XG4gICAgLy8gU2V0IGNvbmZpcm0gYnV0dG9uIHRvIHNlbGVjdGVkIGJhY2tncm91bmQgY29sb3JcbiAgICAkY29uZmlybUJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBwYXJhbXMuY29uZmlybUJ1dHRvbkNvbG9yO1xuXG4gICAgLy8gU2V0IHRoZSBjb25maXJtIGJ1dHRvbiBjb2xvciB0byB0aGUgbG9hZGluZyByaW5nXG4gICAgJGNvbmZpcm1CdG4uc3R5bGUuYm9yZGVyTGVmdENvbG9yID0gcGFyYW1zLmNvbmZpcm1Mb2FkaW5nQnV0dG9uQ29sb3I7XG4gICAgJGNvbmZpcm1CdG4uc3R5bGUuYm9yZGVyUmlnaHRDb2xvciA9IHBhcmFtcy5jb25maXJtTG9hZGluZ0J1dHRvbkNvbG9yO1xuXG4gICAgLy8gU2V0IGJveC1zaGFkb3cgdG8gZGVmYXVsdCBmb2N1c2VkIGJ1dHRvblxuICAgIHNldEZvY3VzU3R5bGUoJGNvbmZpcm1CdG4sIHBhcmFtcy5jb25maXJtQnV0dG9uQ29sb3IpO1xuICB9XG5cbiAgLypcbiAgICogQWxsb3cgb3V0c2lkZSBjbGlja1xuICAgKi9cbiAgbW9kYWwuc2V0QXR0cmlidXRlKCdkYXRhLWFsbG93LW91dHNpZGUtY2xpY2snLCBwYXJhbXMuYWxsb3dPdXRzaWRlQ2xpY2spO1xuXG4gIC8qXG4gICAqIENhbGxiYWNrIGZ1bmN0aW9uXG4gICAqL1xuICB2YXIgaGFzRG9uZUZ1bmN0aW9uID0gcGFyYW1zLmRvbmVGdW5jdGlvbiA/IHRydWUgOiBmYWxzZTtcbiAgbW9kYWwuc2V0QXR0cmlidXRlKCdkYXRhLWhhcy1kb25lLWZ1bmN0aW9uJywgaGFzRG9uZUZ1bmN0aW9uKTtcblxuICAvKlxuICAgKiBBbmltYXRpb25cbiAgICovXG4gIGlmICghcGFyYW1zLmFuaW1hdGlvbikge1xuICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgnZGF0YS1hbmltYXRpb24nLCAnbm9uZScpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwYXJhbXMuYW5pbWF0aW9uID09PSAnc3RyaW5nJykge1xuICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgnZGF0YS1hbmltYXRpb24nLCBwYXJhbXMuYW5pbWF0aW9uKTsgLy8gQ3VzdG9tIGFuaW1hdGlvblxuICB9IGVsc2Uge1xuICAgIG1vZGFsLnNldEF0dHJpYnV0ZSgnZGF0YS1hbmltYXRpb24nLCAncG9wJyk7XG4gIH1cblxuICAvKlxuICAgKiBUaW1lclxuICAgKi9cbiAgbW9kYWwuc2V0QXR0cmlidXRlKCdkYXRhLXRpbWVyJywgcGFyYW1zLnRpbWVyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNldFBhcmFtZXRlcnM7XG4iLCIvKlxuICogQWxsb3cgdXNlciB0byBwYXNzIHRoZWlyIG93biBwYXJhbXNcbiAqL1xudmFyIGV4dGVuZCA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgZm9yICh2YXIga2V5IGluIGIpIHtcbiAgICBpZiAoYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBhW2tleV0gPSBiW2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiBhO1xufTtcblxuLypcbiAqIENvbnZlcnQgSEVYIGNvZGVzIHRvIFJHQiB2YWx1ZXMgKCMwMDAwMDAgLT4gcmdiKDAsMCwwKSlcbiAqL1xudmFyIGhleFRvUmdiID0gZnVuY3Rpb24oaGV4KSB7XG4gIHZhciByZXN1bHQgPSAvXiM/KFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pJC9pLmV4ZWMoaGV4KTtcbiAgcmV0dXJuIHJlc3VsdCA/IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpICsgJywgJyArIHBhcnNlSW50KHJlc3VsdFsyXSwgMTYpICsgJywgJyArIHBhcnNlSW50KHJlc3VsdFszXSwgMTYpIDogbnVsbDtcbn07XG5cbi8qXG4gKiBDaGVjayBpZiB0aGUgdXNlciBpcyB1c2luZyBJbnRlcm5ldCBFeHBsb3JlciA4IChmb3IgZmFsbGJhY2tzKVxuICovXG52YXIgaXNJRTggPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICh3aW5kb3cuYXR0YWNoRXZlbnQgJiYgIXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKTtcbn07XG5cbi8qXG4gKiBJRSBjb21wYXRpYmxlIGxvZ2dpbmcgZm9yIGRldmVsb3BlcnNcbiAqL1xudmFyIGxvZ1N0ciA9IGZ1bmN0aW9uKHN0cmluZykge1xuICBpZiAod2luZG93LmNvbnNvbGUpIHtcbiAgICAvLyBJRS4uLlxuICAgIHdpbmRvdy5jb25zb2xlLmxvZygnU3dlZXRBbGVydDogJyArIHN0cmluZyk7XG4gIH1cbn07XG5cbi8qXG4gKiBTZXQgaG92ZXIsIGFjdGl2ZSBhbmQgZm9jdXMtc3RhdGVzIGZvciBidXR0b25zIFxuICogKHNvdXJjZTogaHR0cDovL3d3dy5zaXRlcG9pbnQuY29tL2phdmFzY3JpcHQtZ2VuZXJhdGUtbGlnaHRlci1kYXJrZXItY29sb3IpXG4gKi9cbnZhciBjb2xvckx1bWluYW5jZSA9IGZ1bmN0aW9uKGhleCwgbHVtKSB7XG4gIC8vIFZhbGlkYXRlIGhleCBzdHJpbmdcbiAgaGV4ID0gU3RyaW5nKGhleCkucmVwbGFjZSgvW14wLTlhLWZdL2dpLCAnJyk7XG4gIGlmIChoZXgubGVuZ3RoIDwgNikge1xuICAgIGhleCA9IGhleFswXSArIGhleFswXSArIGhleFsxXSArIGhleFsxXSArIGhleFsyXSArIGhleFsyXTtcbiAgfVxuICBsdW0gPSBsdW0gfHwgMDtcblxuICAvLyBDb252ZXJ0IHRvIGRlY2ltYWwgYW5kIGNoYW5nZSBsdW1pbm9zaXR5XG4gIHZhciByZ2IgPSAnIyc7XG4gIHZhciBjO1xuICB2YXIgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgYyA9IHBhcnNlSW50KGhleC5zdWJzdHIoaSAqIDIsIDIpLCAxNik7XG4gICAgYyA9IE1hdGgucm91bmQoTWF0aC5taW4oTWF0aC5tYXgoMCwgYyArIGMgKiBsdW0pLCAyNTUpKS50b1N0cmluZygxNik7XG4gICAgcmdiICs9ICgnMDAnICsgYykuc3Vic3RyKGMubGVuZ3RoKTtcbiAgfVxuXG4gIHJldHVybiByZ2I7XG59O1xuXG5cbmV4cG9ydCB7XG4gIGV4dGVuZCxcbiAgaGV4VG9SZ2IsXG4gIGlzSUU4LFxuICBsb2dTdHIsXG4gIGNvbG9yTHVtaW5hbmNlXG59O1xuIl19\n\n  \n  /*\n   * Use SweetAlert with RequireJS\n   */\n  \n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return sweetAlert;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = sweetAlert;\n  }\n\n})(window, document);","/*!\n * FormValidation (http://formvalidation.io)\n * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks\n *\n * @version     v0.7.1, built on 2016-02-01 12:00:57 AM\n * @author      https://twitter.com/formvalidation\n * @copyright   (c) 2013 - 2016 Nguyen Huu Phuoc\n * @license     http://formvalidation.io/license/\n */\n// Register the namespace\nwindow.FormValidation = {\n    AddOn:     {},  // Add-ons\n    Framework: {},  // Supported frameworks\n    I18n:      {},  // i18n\n    Validator: {}   // Available validators\n};\n\nif (typeof jQuery === 'undefined') {\n    throw new Error('FormValidation requires jQuery');\n}\n\n(function($) {\n    var version = $.fn.jquery.split(' ')[0].split('.');\n    if ((+version[0] < 2 && +version[1] < 9) || (+version[0] === 1 && +version[1] === 9 && +version[2] < 1)) {\n        throw new Error('FormValidation requires jQuery version 1.9.1 or higher');\n    }\n}(jQuery));\n\n(function($) {\n    // TODO: Remove backward compatibility\n    /**\n     * Constructor\n     *\n     * @param {jQuery|String} form The form element or selector\n     * @param {Object} options The options\n     * @param {String} [namespace] The optional namespace which is used for data-{namespace}-xxx attributes and internal data.\n     * Currently, it's used to support backward version\n     * @constructor\n     */\n    FormValidation.Base = function(form, options, namespace) {\n        this.$form      = $(form);\n        this.options    = $.extend({}, $.fn.formValidation.DEFAULT_OPTIONS, options);\n        this._namespace = namespace || 'fv';\n\n        this.$invalidFields = $([]);    // Array of invalid fields\n        this.$submitButton  = null;     // The submit button which is clicked to submit form\n        this.$hiddenButton  = null;\n\n        // Validating status\n        this.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';\n        this.STATUS_VALIDATING    = 'VALIDATING';\n        this.STATUS_INVALID       = 'INVALID';\n        this.STATUS_VALID         = 'VALID';\n        this.STATUS_IGNORED       = 'IGNORED';\n\n        // Default message\n        this.DEFAULT_MESSAGE      = $.fn.formValidation.DEFAULT_MESSAGE;\n\n        // Determine the event that is fired when user change the field value\n        // Most modern browsers supports input event except IE 7, 8.\n        // IE 9 supports input event but the event is still not fired if I press the backspace key.\n        // Get IE version\n        // https://gist.github.com/padolsey/527683/#comment-7595\n        this._ieVersion = (function() {\n            var v = 3, div = document.createElement('div'), a = div.all || [];\n            while (div.innerHTML = '<!--[if gt IE '+(++v)+']><br><![endif]-->', a[0]) {}\n            return v > 4 ? v : document.documentMode;\n        }());\n\n        var el = document.createElement('div');\n        this._changeEvent = (this._ieVersion === 9 || !('oninput' in el)) ? 'keyup' : 'input';\n\n        // The flag to indicate that the form is ready to submit when a remote/callback validator returns\n        this._submitIfValid = null;\n\n        // Field elements\n        this._cacheFields = {};\n\n        this._init();\n    };\n\n    FormValidation.Base.prototype = {\n        constructor: FormValidation.Base,\n\n        /**\n         * Check if the number of characters of field value exceed the threshold or not\n         *\n         * @param {jQuery} $field The field element\n         * @returns {Boolean}\n         */\n        _exceedThreshold: function($field) {\n            var ns        = this._namespace,\n                field     = $field.attr('data-' + ns + '-field'),\n                threshold = this.options.fields[field].threshold || this.options.threshold;\n            if (!threshold) {\n                return true;\n            }\n            var cannotType = $.inArray($field.attr('type'), ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit']) !== -1;\n            return (cannotType || $field.val().length >= threshold);\n        },\n\n        /**\n         * Init form\n         */\n        _init: function() {\n            var that    = this,\n                ns      = this._namespace,\n                options = {\n                    addOns:         {},\n                    autoFocus:      this.$form.attr('data-' + ns + '-autofocus'),\n                    button: {\n                        selector: this.$form.attr('data-' + ns + '-button-selector') || this.$form.attr('data-' + ns + '-submitbuttons'), // Support backward\n                        disabled: this.$form.attr('data-' + ns + '-button-disabled')\n                    },\n                    control: {\n                        valid:   this.$form.attr('data-' + ns + '-control-valid'),\n                        invalid: this.$form.attr('data-' + ns + '-control-invalid')\n                    },\n                    err: {\n                        clazz:     this.$form.attr('data-' + ns + '-err-clazz'),\n                        container: this.$form.attr('data-' + ns + '-err-container') || this.$form.attr('data-' + ns + '-container'), // Support backward\n                        parent:    this.$form.attr('data-' + ns + '-err-parent')\n                    },\n                    events: {\n                        formInit:         this.$form.attr('data-' + ns + '-events-form-init'),\n                        formPreValidate:  this.$form.attr('data-' + ns + '-events-form-prevalidate'),\n                        formError:        this.$form.attr('data-' + ns + '-events-form-error'),\n                        formReset:        this.$form.attr('data-' + ns + '-events-form-reset'),\n                        formSuccess:      this.$form.attr('data-' + ns + '-events-form-success'),\n                        fieldAdded:       this.$form.attr('data-' + ns + '-events-field-added'),\n                        fieldRemoved:     this.$form.attr('data-' + ns + '-events-field-removed'),\n                        fieldInit:        this.$form.attr('data-' + ns + '-events-field-init'),\n                        fieldError:       this.$form.attr('data-' + ns + '-events-field-error'),\n                        fieldReset:       this.$form.attr('data-' + ns + '-events-field-reset'),\n                        fieldSuccess:     this.$form.attr('data-' + ns + '-events-field-success'),\n                        fieldStatus:      this.$form.attr('data-' + ns + '-events-field-status'),\n                        localeChanged:    this.$form.attr('data-' + ns + '-events-locale-changed'),\n                        validatorError:   this.$form.attr('data-' + ns + '-events-validator-error'),\n                        validatorSuccess: this.$form.attr('data-' + ns + '-events-validator-success'),\n                        validatorIgnored: this.$form.attr('data-' + ns + '-events-validator-ignored')\n                    },\n                    excluded:      this.$form.attr('data-' + ns + '-excluded'),\n                    icon: {\n                        valid:      this.$form.attr('data-' + ns + '-icon-valid')      || this.$form.attr('data-' + ns + '-feedbackicons-valid'),      // Support backward\n                        invalid:    this.$form.attr('data-' + ns + '-icon-invalid')    || this.$form.attr('data-' + ns + '-feedbackicons-invalid'),    // Support backward\n                        validating: this.$form.attr('data-' + ns + '-icon-validating') || this.$form.attr('data-' + ns + '-feedbackicons-validating'), // Support backward\n                        feedback:   this.$form.attr('data-' + ns + '-icon-feedback')\n                    },\n                    live:          this.$form.attr('data-' + ns + '-live'),\n                    locale:        this.$form.attr('data-' + ns + '-locale'),\n                    message:       this.$form.attr('data-' + ns + '-message'),\n                    onPreValidate: this.$form.attr('data-' + ns + '-onprevalidate'),\n                    onError:       this.$form.attr('data-' + ns + '-onerror'),\n                    onReset:       this.$form.attr('data-' + ns + '-onreset'),\n                    onSuccess:     this.$form.attr('data-' + ns + '-onsuccess'),\n                    row: {\n                        selector: this.$form.attr('data-' + ns + '-row-selector') || this.$form.attr('data-' + ns + '-group'), // Support backward\n                        valid:    this.$form.attr('data-' + ns + '-row-valid'),\n                        invalid:  this.$form.attr('data-' + ns + '-row-invalid'),\n                        feedback: this.$form.attr('data-' + ns + '-row-feedback')\n                    },\n                    threshold:     this.$form.attr('data-' + ns + '-threshold'),\n                    trigger:       this.$form.attr('data-' + ns + '-trigger'),\n                    verbose:       this.$form.attr('data-' + ns + '-verbose'),\n                    fields:        {}\n                };\n\n            this.$form\n                // Disable client side validation in HTML 5\n                .attr('novalidate', 'novalidate')\n                .addClass(this.options.elementClass)\n                // Disable the default submission first\n                .on('submit.' + ns, function(e) {\n                    e.preventDefault();\n                    that.validate();\n                })\n                .on('click.' + ns, this.options.button.selector, function() {\n                    that.$submitButton  = $(this);\n                    // The user just click the submit button\n                    that._submitIfValid = true;\n                });\n\n            if (this.options.declarative === true || this.options.declarative === 'true') {\n                // Find all fields which have either \"name\" or \"data-{namespace}-field\" attribute\n                this.$form\n                    .find('[name], [data-' + ns + '-field]')\n                    .each(function() {\n                        var $field = $(this),\n                            field  = $field.attr('name') || $field.attr('data-' + ns + '-field'),\n                            opts   = that._parseOptions($field);\n                        if (opts) {\n                            $field.attr('data-' + ns + '-field', field);\n                            options.fields[field] = $.extend({}, opts, options.fields[field]);\n                        }\n                    });\n            }\n\n            this.options = $.extend(true, this.options, options);\n\n            // Normalize the err.parent option\n            if ('string' === typeof this.options.err.parent) {\n                this.options.err.parent = new RegExp(this.options.err.parent);\n            }\n\n            // Support backward\n            if (this.options.container) {\n                this.options.err.container = this.options.container;\n                delete this.options.container;\n            }\n            if (this.options.feedbackIcons) {\n                this.options.icon = $.extend(true, this.options.icon, this.options.feedbackIcons);\n                delete this.options.feedbackIcons;\n            }\n            if (this.options.group) {\n                this.options.row.selector = this.options.group;\n                delete this.options.group;\n            }\n            if (this.options.submitButtons) {\n                this.options.button.selector = this.options.submitButtons;\n                delete this.options.submitButtons;\n            }\n\n            // If the locale is not found, reset it to default one\n            if (!FormValidation.I18n[this.options.locale]) {\n                this.options.locale = $.fn.formValidation.DEFAULT_OPTIONS.locale;\n            }\n\n            // Parse the add-on options from HTML attributes\n            if (this.options.declarative === true || this.options.declarative === 'true') {\n                this.options = $.extend(true, this.options, { addOns: this._parseAddOnOptions() });\n            }\n\n            // When pressing Enter on any field in the form, the first submit button will do its job.\n            // The form then will be submitted.\n            // I create a first hidden submit button\n            this.$hiddenButton = $('<button/>')\n                                    .attr('type', 'submit')\n                                    .prependTo(this.$form)\n                                    .addClass('fv-hidden-submit')\n                                    .css({ display: 'none', width: 0, height: 0 });\n\n            this.$form\n                .on('click.' +  this._namespace, '[type=\"submit\"]', function(e) {\n                    // #746: Check if the button click handler returns false\n                    if (!e.isDefaultPrevented()) {\n                        var $target = $(e.target),\n                            // The button might contain HTML tag\n                            $button = $target.is('[type=\"submit\"]') ? $target.eq(0) : $target.parent('[type=\"submit\"]').eq(0);\n\n                        // Don't perform validation when clicking on the submit button/input which\n                        // aren't defined by the 'button.selector' option\n                        if (that.options.button.selector && !$button.is(that.options.button.selector) && !$button.is(that.$hiddenButton)) {\n                            that.$form.off('submit.' + that._namespace).submit();\n                        }\n                    }\n                });\n\n            for (var field in this.options.fields) {\n                this._initField(field);\n            }\n\n            // Init the add-ons\n            for (var addOn in this.options.addOns) {\n                if ('function' === typeof FormValidation.AddOn[addOn].init) {\n                    FormValidation.AddOn[addOn].init(this, this.options.addOns[addOn]);\n                }\n            }\n\n            this.$form.trigger($.Event(this.options.events.formInit), {\n                bv: this,   // Support backward\n                fv: this,\n                options: this.options\n            });\n\n            // Prepare the events\n            if (this.options.onPreValidate) {\n                this.$form.on(this.options.events.formPreValidate, function(e) {\n                    FormValidation.Helper.call(that.options.onPreValidate, [e]);\n                });\n            }\n            if (this.options.onSuccess) {\n                this.$form.on(this.options.events.formSuccess, function(e) {\n                    FormValidation.Helper.call(that.options.onSuccess, [e]);\n                });\n            }\n            if (this.options.onError) {\n                this.$form.on(this.options.events.formError, function(e) {\n                    FormValidation.Helper.call(that.options.onError, [e]);\n                });\n            }\n            if (this.options.onReset) {\n                this.$form.on(this.options.events.formReset, function(e) {\n                    FormValidation.Helper.call(that.options.onReset, [e]);\n                });\n            }\n        },\n\n        /**\n         * Init field\n         *\n         * @param {String|jQuery} field The field name or field element\n         */\n        _initField: function(field) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    fields = this.getFieldElements(field);\n                    fields.attr('data-' + ns + '-field', field);\n                    break;\n                default:\n                    break;\n            }\n\n            // We don't need to validate non-existing fields\n            if (fields.length === 0) {\n                return;\n            }\n\n            if (this.options.fields[field] === null || this.options.fields[field].validators === null) {\n                return;\n            }\n\n            var validators = this.options.fields[field].validators,\n                validatorName,\n                alias;\n            for (validatorName in validators) {\n                alias = validators[validatorName].alias || validatorName;\n                if (!FormValidation.Validator[alias]) {\n                    delete this.options.fields[field].validators[validatorName];\n                }\n            }\n            if (this.options.fields[field].enabled === null) {\n                this.options.fields[field].enabled = true;\n            }\n\n            var that      = this,\n                total     = fields.length,\n                type      = fields.attr('type'),\n                updateAll = (total === 1) || ('radio' === type) || ('checkbox' === type),\n                trigger   = this._getFieldTrigger(fields.eq(0)),\n                clazz     = this.options.err.clazz.split(' ').join('.'),\n                events    = $.map(trigger, function(item) {\n                    return item + '.update.' + ns;\n                }).join(' ');\n\n            for (var i = 0; i < total; i++) {\n                var $field    = fields.eq(i),\n                    row       = this.options.fields[field].row || this.options.row.selector,\n                    $parent   = $field.closest(row),\n                    // Allow user to indicate where the error messages are shown\n                    // Support backward\n                    container = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))\n                                ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)\n                                : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container),\n                    $message  = (container && container !== 'tooltip' && container !== 'popover') ? $(container) : this._getMessageContainer($field, row);\n\n                if (container && container !== 'tooltip' && container !== 'popover') {\n                    $message.addClass(this.options.err.clazz);\n                }\n\n                // Remove all error messages and feedback icons\n                $message.find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for=\"' + field + '\"]').remove();\n                $parent.find('i[data-' + ns + '-icon-for=\"' + field + '\"]').remove();\n\n                // Whenever the user change the field value, mark it as not validated yet\n                $field.off(events).on(events, function() {\n                    that.updateStatus($(this), that.STATUS_NOT_VALIDATED);\n                });\n\n                // Create help block elements for showing the error messages\n                $field.data(ns + '.messages', $message);\n                for (validatorName in validators) {\n                    $field.data(ns + '.result.' + validatorName, this.STATUS_NOT_VALIDATED);\n\n                    if (!updateAll || i === total - 1) {\n                        $('<small/>')\n                            .css('display', 'none')\n                            .addClass(this.options.err.clazz)\n                            .attr('data-' + ns + '-validator', validatorName)\n                            .attr('data-' + ns + '-for', field)\n                            .attr('data-' + ns + '-result', this.STATUS_NOT_VALIDATED)\n                            .html(this._getMessage(field, validatorName))\n                            .appendTo($message);\n                    }\n\n                    // Init the validator\n                    alias = validators[validatorName].alias || validatorName;\n                    if ('function' === typeof FormValidation.Validator[alias].init) {\n                        FormValidation.Validator[alias].init(this, $field, this.options.fields[field].validators[validatorName], validatorName);\n                    }\n                }\n\n                // Prepare the feedback icons\n                if (this.options.fields[field].icon !== false && this.options.fields[field].icon !== 'false'\n                    && this.options.icon\n                    && this.options.icon.valid && this.options.icon.invalid && this.options.icon.validating\n                    && (!updateAll || i === total - 1))\n                {\n                    // $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid).addClass(this.options.row.feedback);\n                    // Keep error messages which are populated from back-end\n                    $parent.addClass(this.options.row.feedback);\n                    var $icon = $('<i/>')\n                                    .css('display', 'none')\n                                    .addClass(this.options.icon.feedback)\n                                    .attr('data-' + ns + '-icon-for', field)\n                                    .insertAfter($field);\n\n                    // Store the icon as a data of field element\n                    (!updateAll ? $field : fields).data(ns + '.icon', $icon);\n\n                    if ('tooltip' === container || 'popover' === container) {\n                        (!updateAll ? $field : fields)\n                            .on(this.options.events.fieldError, function() {\n                                $parent.addClass('fv-has-tooltip');\n                            })\n                            .on(this.options.events.fieldSuccess, function() {\n                                $parent.removeClass('fv-has-tooltip');\n                            });\n\n                        $field\n                            // Show tooltip/popover message when field gets focus\n                            .off('focus.container.' + ns)\n                            .on('focus.container.' + ns, function() {\n                                that._showTooltip($(this), container);\n                            })\n                            // and hide them when losing focus\n                            .off('blur.container.' + ns)\n                            .on('blur.container.' + ns, function() {\n                                that._hideTooltip($(this), container);\n                            });\n                    }\n\n                    if ('string' === typeof this.options.fields[field].icon && this.options.fields[field].icon !== 'true') {\n                        $icon.appendTo($(this.options.fields[field].icon));\n                    } else {\n                        this._fixIcon($field, $icon);\n                    }\n                }\n            }\n\n            // Sort the validators by priority\n            var sortedByPriority = [];\n            for (validatorName in validators) {\n                alias = validators[validatorName].alias || validatorName;\n\n                // Determine the priority\n                validators[validatorName].priority = parseInt(validators[validatorName].priority\n                                                            || FormValidation.Validator[alias].priority\n                                                            || 1, 10);\n                sortedByPriority.push({\n                    validator: validatorName,\n                    priority: validators[validatorName].priority\n                });\n            }\n            sortedByPriority = sortedByPriority.sort(function(a, b) {\n                return a.priority - b.priority;\n            });\n\n            // Prepare the events\n            fields\n                .data(ns + '.validators', sortedByPriority)\n                .on(this.options.events.fieldSuccess, function(e, data) {\n                    var onSuccess = that.getOptions(data.field, null, 'onSuccess');\n                    if (onSuccess) {\n                        FormValidation.Helper.call(onSuccess, [e, data]);\n                    }\n                })\n                .on(this.options.events.fieldError, function(e, data) {\n                    var onError = that.getOptions(data.field, null, 'onError');\n                    if (onError) {\n                        FormValidation.Helper.call(onError, [e, data]);\n                    }\n                })\n                .on(this.options.events.fieldReset, function(e, data) {\n                    var onReset = that.getOptions(data.field, null, 'onReset');\n                    if (onReset) {\n                        FormValidation.Helper.call(onReset, [e, data]);\n                    }\n                })\n                .on(this.options.events.fieldStatus, function(e, data) {\n                    var onStatus = that.getOptions(data.field, null, 'onStatus');\n                    if (onStatus) {\n                        FormValidation.Helper.call(onStatus, [e, data]);\n                    }\n                })\n                .on(this.options.events.validatorError, function(e, data) {\n                    var onError = that.getOptions(data.field, data.validator, 'onError');\n                    if (onError) {\n                        FormValidation.Helper.call(onError, [e, data]);\n                    }\n                })\n                .on(this.options.events.validatorIgnored, function(e, data) {\n                    var onIgnored = that.getOptions(data.field, data.validator, 'onIgnored');\n                    if (onIgnored) {\n                        FormValidation.Helper.call(onIgnored, [e, data]);\n                    }\n                })\n                .on(this.options.events.validatorSuccess, function(e, data) {\n                    var onSuccess = that.getOptions(data.field, data.validator, 'onSuccess');\n                    if (onSuccess) {\n                        FormValidation.Helper.call(onSuccess, [e, data]);\n                    }\n                });\n\n            // Set live mode\n            this.onLiveChange(fields, 'live', function() {\n                if (that._exceedThreshold($(this))) {\n                    that.validateField($(this));\n                }\n            });\n\n            fields.trigger($.Event(this.options.events.fieldInit), {\n                bv: this,   // Support backward\n                fv: this,\n                field: field,\n                element: fields\n            });\n        },\n\n        /**\n         * Check if the field is excluded.\n         * Returning true means that the field will not be validated\n         *\n         * @param {jQuery} $field The field element\n         * @returns {Boolean}\n         */\n        _isExcluded: function($field) {\n            var ns           = this._namespace,\n                excludedAttr = $field.attr('data-' + ns + '-excluded'),\n                // I still need to check the 'name' attribute while initializing the field\n                field        = $field.attr('data-' + ns + '-field') || $field.attr('name');\n\n            switch (true) {\n                case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'true' || this.options.fields[field].excluded === true)):\n                case (excludedAttr === 'true'):\n                case (excludedAttr === ''):\n                    return true;\n\n                case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'false' || this.options.fields[field].excluded === false)):\n                case (excludedAttr === 'false'):\n                    return false;\n\n                case (!!field && this.options.fields && this.options.fields[field] && 'function' === typeof this.options.fields[field].excluded):\n                    return this.options.fields[field].excluded.call(this, $field, this);\n\n                case (!!field && this.options.fields && this.options.fields[field] && 'string' === typeof this.options.fields[field].excluded):\n                case (excludedAttr):\n                    return FormValidation.Helper.call(this.options.fields[field].excluded, [$field, this]);\n\n                default:\n                    if (this.options.excluded) {\n                        // Convert to array first\n                        if ('string' === typeof this.options.excluded) {\n                            this.options.excluded = $.map(this.options.excluded.split(','), function(item) {\n                                // Trim the spaces\n                                return $.trim(item);\n                            });\n                        }\n\n                        var length = this.options.excluded.length;\n                        for (var i = 0; i < length; i++) {\n                            if (('string' === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))\n                                || ('function' === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true))\n                            {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n            }\n        },\n\n        /**\n         * Get a field changed trigger event\n         *\n         * @param {jQuery} $field The field element\n         * @returns {String[]} The event names triggered on field change\n         */\n        _getFieldTrigger: function($field) {\n            var ns      = this._namespace,\n                trigger = $field.data(ns + '.trigger');\n            if (trigger) {\n                return trigger;\n            }\n\n            // IE10/11 auto fires input event of elements using the placeholder attribute\n            // https://connect.microsoft.com/IE/feedback/details/856700/\n            var type  = $field.attr('type'),\n                name  = $field.attr('data-' + ns + '-field'),\n                event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === $field.get(0).tagName)\n                        ? 'change'\n                        : (this._ieVersion >= 10 && $field.attr('placeholder') ? 'keyup' : this._changeEvent);\n            trigger   = ((this.options.fields[name] ? this.options.fields[name].trigger : null) || this.options.trigger || event).split(' ');\n\n            // Since the trigger data is used many times, I need to cache it to use later\n            $field.data(ns + '.trigger', trigger);\n\n            return trigger;\n        },\n\n        /**\n         * Get the error message for given field and validator\n         *\n         * @param {String} field The field name\n         * @param {String} validatorName The validator name\n         * @returns {String}\n         */\n        _getMessage: function(field, validatorName) {\n            if (!this.options.fields[field] || !this.options.fields[field].validators) {\n                return '';\n            }\n            var validators = this.options.fields[field].validators,\n                alias      = (validators[validatorName] && validators[validatorName].alias) ? validators[validatorName].alias : validatorName;\n            if (!FormValidation.Validator[alias]) {\n                return '';\n            }\n\n            switch (true) {\n                case !!validators[validatorName].message:\n                    return validators[validatorName].message;\n                case !!this.options.fields[field].message:\n                    return this.options.fields[field].message;\n                case !!this.options.message:\n                    return this.options.message;\n                case (!!FormValidation.I18n[this.options.locale] && !!FormValidation.I18n[this.options.locale][alias] && !!FormValidation.I18n[this.options.locale][alias]['default']):\n                    return FormValidation.I18n[this.options.locale][alias]['default'];\n                default:\n                    return this.DEFAULT_MESSAGE;\n            }\n        },\n\n        /**\n         * Get the element to place the error messages\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} row\n         * @returns {jQuery}\n         */\n        _getMessageContainer: function($field, row) {\n            if (!this.options.err.parent) {\n                throw new Error('The err.parent option is not defined');\n            }\n\n            var $parent = $field.parent();\n            if ($parent.is(row)) {\n                return $parent;\n            }\n\n            var cssClasses = $parent.attr('class');\n            if (!cssClasses) {\n                return this._getMessageContainer($parent, row);\n            }\n\n            if (this.options.err.parent.test(cssClasses)) {\n                return $parent;\n            }\n\n            return this._getMessageContainer($parent, row);\n        },\n\n        /**\n         * Parse the add-on options from HTML attributes\n         *\n         * @returns {Object}\n         */\n        _parseAddOnOptions: function() {\n            var ns     = this._namespace,\n                names  = this.$form.attr('data-' + ns + '-addons'),\n                addOns = this.options.addOns || {};\n\n            if (names) {\n                names = names.replace(/\\s/g, '').split(',');\n                for (var i = 0; i < names.length; i++) {\n                    if (!addOns[names[i]]) {\n                        addOns[names[i]] = {};\n                    }\n                }\n            }\n\n            // Try to parse each add-on options\n            var addOn, attrMap, attr, option;\n            for (addOn in addOns) {\n                if (!FormValidation.AddOn[addOn]) {\n                    // Add-on is not found\n                    delete addOns[addOn];\n                    continue;\n                }\n\n                attrMap = FormValidation.AddOn[addOn].html5Attributes;\n                if (attrMap) {\n                    for (attr in attrMap) {\n                        option = this.$form.attr('data-' + ns + '-addons-' + addOn.toLowerCase() + '-' + attr.toLowerCase());\n                        if (option) {\n                            addOns[addOn][attrMap[attr]] = option;\n                        }\n                    }\n                }\n            }\n\n            return addOns;\n        },\n\n        /**\n         * Parse the validator options from HTML attributes\n         *\n         * @param {jQuery} $field The field element\n         * @returns {Object}\n         */\n        _parseOptions: function($field) {\n            var ns           = this._namespace,\n                field        = $field.attr('name') || $field.attr('data-' + ns + '-field'),\n                validators   = {},\n                aliasAttr    = new RegExp('^data-' + ns + '-([a-z]+)-alias$'),\n                validatorSet = $.extend({}, FormValidation.Validator),\n                validator,\n                v,          // Validator name\n                attrName,\n                enabled,\n                optionName,\n                optionAttrName,\n                optionValue,\n                html5AttrName,\n                html5AttrMap;\n\n            // Determine whether the alias validator is used by checking the data-fv-validator-alias attribute\n            $.each($field.get(0).attributes, function(i, attribute) {\n                if (attribute.value && aliasAttr.test(attribute.name)) {\n                    v = attribute.name.split('-')[2];\n                    if (validatorSet[attribute.value]) {\n                        validatorSet[v]       = validatorSet[attribute.value];\n                        validatorSet[v].alias = attribute.value;\n                    }\n                }\n            });\n\n            for (v in validatorSet) {\n                validator    = validatorSet[v];\n                attrName     = 'data-' + ns + '-' + v.toLowerCase(),\n                enabled      = $field.attr(attrName) + '';\n                html5AttrMap = ('function' === typeof validator.enableByHtml5) ? validator.enableByHtml5($field) : null;\n\n                if ((html5AttrMap && enabled !== 'false')\n                    || (html5AttrMap !== true && ('' === enabled || 'true' === enabled || attrName === enabled.toLowerCase())))\n                {\n                    // Try to parse the options via attributes\n                    validator.html5Attributes = $.extend({}, {\n                                                    message: 'message',\n                                                    onerror: 'onError',\n                                                    onreset: 'onReset',\n                                                    onsuccess: 'onSuccess',\n                                                    priority: 'priority',\n                                                    transformer: 'transformer'\n                                                }, validator.html5Attributes);\n                    validators[v] = $.extend({}, html5AttrMap === true ? {} : html5AttrMap, validators[v]);\n                    if (validator.alias) {\n                        validators[v].alias = validator.alias;\n                    }\n\n                    for (html5AttrName in validator.html5Attributes) {\n                        optionName     = validator.html5Attributes[html5AttrName];\n                        optionAttrName = 'data-' + ns + '-' + v.toLowerCase() + '-' + html5AttrName;\n                        optionValue    = $field.attr(optionAttrName);\n                        if (optionValue) {\n                            if ('true' === optionValue || optionAttrName === optionValue.toLowerCase()) {\n                                optionValue = true;\n                            } else if ('false' === optionValue) {\n                                optionValue = false;\n                            }\n                            validators[v][optionName] = optionValue;\n                        }\n                    }\n                }\n            }\n\n            var opts = {\n                    autoFocus:   $field.attr('data-' + ns + '-autofocus'),\n                    err:         $field.attr('data-' + ns + '-err-container') || $field.attr('data-' + ns + '-container'), // Support backward\n                    enabled:     $field.attr('data-' + ns + '-enabled'),\n                    excluded:    $field.attr('data-' + ns + '-excluded'),\n                    icon:        $field.attr('data-' + ns + '-icon') || $field.attr('data-' + ns + '-feedbackicons') || (this.options.fields && this.options.fields[field] ? this.options.fields[field].feedbackIcons : null), // Support backward\n                    message:     $field.attr('data-' + ns + '-message'),\n                    onError:     $field.attr('data-' + ns + '-onerror'),\n                    onReset:     $field.attr('data-' + ns + '-onreset'),\n                    onStatus:    $field.attr('data-' + ns + '-onstatus'),\n                    onSuccess:   $field.attr('data-' + ns + '-onsuccess'),\n                    row:         $field.attr('data-' + ns + '-row') || $field.attr('data-' + ns + '-group') || (this.options.fields && this.options.fields[field] ? this.options.fields[field].group : null), // Support backward\n                    selector:    $field.attr('data-' + ns + '-selector'),\n                    threshold:   $field.attr('data-' + ns + '-threshold'),\n                    transformer: $field.attr('data-' + ns + '-transformer'),\n                    trigger:     $field.attr('data-' + ns + '-trigger'),\n                    verbose:     $field.attr('data-' + ns + '-verbose'),\n                    validators:  validators\n                },\n                emptyOptions    = $.isEmptyObject(opts),        // Check if the field options are set using HTML attributes\n                emptyValidators = $.isEmptyObject(validators);  // Check if the field validators are set using HTML attributes\n\n            if (!emptyValidators || (!emptyOptions && this.options.fields && this.options.fields[field])) {\n                //opts.validators = validators;\n                return opts;\n            } else {\n                return null;\n            }\n        },\n\n        /**\n         * Called when all validations are completed\n         */\n        _submit: function() {\n            var isValid = this.isValid();\n            if (isValid === null) {\n                return;\n            }\n\n            var eventType = isValid ? this.options.events.formSuccess : this.options.events.formError,\n                e         = $.Event(eventType);\n\n            this.$form.trigger(e);\n\n            // Call default handler\n            // Check if whether the submit button is clicked\n            if (this.$submitButton) {\n                isValid ? this._onSuccess(e) : this._onError(e);\n            }\n        },\n\n        // ~~~~~~\n        // Events\n        // ~~~~~~\n\n        /**\n         * The default handler of error.form.fv event.\n         * It will be called when there is a invalid field\n         *\n         * @param {jQuery.Event} e The jQuery event object\n         */\n        _onError: function(e) {\n            if (e.isDefaultPrevented()) {\n                return;\n            }\n\n            if ('submitted' === this.options.live) {\n                // Enable live mode\n                this.options.live = 'enabled';\n\n                var that = this;\n                for (var field in this.options.fields) {\n                    (function(f) {\n                        var fields  = that.getFieldElements(f);\n                        if (fields.length) {\n                            that.onLiveChange(fields, 'live', function() {\n                                if (that._exceedThreshold($(this))) {\n                                    that.validateField($(this));\n                                }\n                            });\n                        }\n                    })(field);\n                }\n            }\n\n            // Determined the first invalid field which will be focused on automatically\n            var ns = this._namespace;\n            for (var i = 0; i < this.$invalidFields.length; i++) {\n                var $field    = this.$invalidFields.eq(i),\n                    autoFocus = this.isOptionEnabled($field.attr('data-' + ns + '-field'), 'autoFocus');\n                if (autoFocus) {\n                    // Focus the field\n                    $field.focus();\n                    break;\n                }\n            }\n        },\n\n        /**\n         * Called after validating a field element\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} [validatorName] The validator name\n         */\n        _onFieldValidated: function($field, validatorName) {\n            var ns            = this._namespace,\n                field         = $field.attr('data-' + ns + '-field'),\n                validators    = this.options.fields[field].validators,\n                counter       = {},\n                numValidators = 0,\n                data          = {\n                    bv: this,   // Support backward\n                    fv: this,\n                    field: field,\n                    element: $field,\n                    validator: validatorName,\n                    result: $field.data(ns + '.response.' + validatorName)\n                };\n\n            // Trigger an event after given validator completes\n            if (validatorName) {\n                switch ($field.data(ns + '.result.' + validatorName)) {\n                    case this.STATUS_INVALID:\n                        $field.trigger($.Event(this.options.events.validatorError), data);\n                        break;\n                    case this.STATUS_VALID:\n                        $field.trigger($.Event(this.options.events.validatorSuccess), data);\n                        break;\n                    case this.STATUS_IGNORED:\n                        $field.trigger($.Event(this.options.events.validatorIgnored), data);\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            counter[this.STATUS_NOT_VALIDATED] = 0;\n            counter[this.STATUS_VALIDATING]    = 0;\n            counter[this.STATUS_INVALID]       = 0;\n            counter[this.STATUS_VALID]         = 0;\n            counter[this.STATUS_IGNORED]       = 0;\n\n            for (var v in validators) {\n                if (validators[v].enabled === false) {\n                    continue;\n                }\n\n                numValidators++;\n                var result = $field.data(ns + '.result.' + v);\n                if (result) {\n                    counter[result]++;\n                }\n            }\n\n            // The sum of valid fields now also include ignored fields\n            if (counter[this.STATUS_VALID] + counter[this.STATUS_IGNORED] === numValidators) {\n                // Remove from the list of invalid fields\n                this.$invalidFields = this.$invalidFields.not($field);\n\n                $field.trigger($.Event(this.options.events.fieldSuccess), data);\n            }\n            // If all validators are completed and there is at least one validator which doesn't pass\n            else if ((counter[this.STATUS_NOT_VALIDATED] === 0 || !this.isOptionEnabled(field, 'verbose')) && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {\n                // Add to the list of invalid fields\n                this.$invalidFields = this.$invalidFields.add($field);\n\n                $field.trigger($.Event(this.options.events.fieldError), data);\n            }\n        },\n\n        /**\n         * The default handler of success.form.fv event.\n         * It will be called when all the fields are valid\n         *\n         * @param {jQuery.Event} e The jQuery event object\n         */\n        _onSuccess: function(e) {\n            if (e.isDefaultPrevented()) {\n                return;\n            }\n\n            // Submit the form\n            this.disableSubmitButtons(true).defaultSubmit();\n        },\n\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        // Abstract methods\n        // Need to be implemented by sub-class that supports specific framework\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n        /**\n         * Specific framework might need to adjust the icon position\n         *\n         * @param {jQuery} $field The field element\n         * @param {jQuery} $icon The icon element\n         */\n        _fixIcon: function($field, $icon) {\n        },\n\n        /**\n         * Create a tooltip or popover\n         * It will be shown when focusing on the field\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} message The message\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _createTooltip: function($field, message, type) {\n        },\n\n        /**\n         * Destroy the tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _destroyTooltip: function($field, type) {\n        },\n\n        /**\n         * Hide a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _hideTooltip: function($field, type) {\n        },\n\n        /**\n         * Show a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _showTooltip: function($field, type) {\n        },\n\n        // ~~~~~~~~~~~~~~\n        // Public methods\n        // ~~~~~~~~~~~~~~\n\n        /**\n         * Submit the form using default submission.\n         * It also does not perform any validations when submitting the form\n         */\n        defaultSubmit: function() {\n            var ns = this._namespace;\n            if (this.$submitButton) {\n                // Create hidden input to send the submit buttons\n                $('<input/>')\n                    .attr({\n                        'type': 'hidden',\n                        name: this.$submitButton.attr('name')\n                    })\n                    .attr('data-' + ns + '-submit-hidden', '')\n                    .val(this.$submitButton.val())\n                    .appendTo(this.$form);\n            }\n\n            // Submit form\n            this.$form.off('submit.' + ns).submit();\n        },\n\n        /**\n         * Disable/enable submit buttons\n         *\n         * @param {Boolean} disabled Can be true or false\n         * @returns {FormValidation.Base}\n         */\n        disableSubmitButtons: function(disabled) {\n            if (!disabled) {\n                this.$form\n                    .find(this.options.button.selector)\n                        .removeAttr('disabled')\n                        .removeClass(this.options.button.disabled);\n            } else if (this.options.live !== 'disabled') {\n                // Don't disable if the live validating mode is disabled\n                this.$form\n                    .find(this.options.button.selector)\n                        .attr('disabled', 'disabled')\n                        .addClass(this.options.button.disabled);\n            }\n\n            return this;\n        },\n\n        /**\n         * Retrieve the field elements by given name\n         *\n         * @param {String} field The field name\n         * @returns {null|jQuery[]}\n         */\n        getFieldElements: function(field) {\n            if (!this._cacheFields[field]) {\n                if (this.options.fields[field] && this.options.fields[field].selector) {\n                    // Look for the field inside the form first\n                    var f = this.$form.find(this.options.fields[field].selector);\n                    // If not found, search in entire document\n                    this._cacheFields[field] = f.length ? f : $(this.options.fields[field].selector);\n                } else {\n                    this._cacheFields[field] = this.$form.find('[name=\"' + field + '\"]');\n                }\n            }\n\n            return this._cacheFields[field];\n        },\n\n        /**\n         * Get the field value after applying transformer\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {String} validatorName The validator name\n         * @returns {String}\n         */\n        getFieldValue: function(field, validatorName) {\n            var $field, ns = this._namespace;\n            if ('string' === typeof field) {\n                $field = this.getFieldElements(field);\n                if ($field.length === 0) {\n                    return null;\n                }\n            } else {\n                $field = field;\n                field  = $field.attr('data-' + ns + '-field');\n            }\n\n            if (!field || !this.options.fields[field]) {\n                return $field.val();\n            }\n\n            var transformer = (this.options.fields[field].validators && this.options.fields[field].validators[validatorName]\n                                ? this.options.fields[field].validators[validatorName].transformer : null)\n                                || this.options.fields[field].transformer;\n            return transformer ? FormValidation.Helper.call(transformer, [$field, validatorName, this]) : $field.val();\n        },\n\n        /**\n         * Get the namespace\n         *\n         * @returns {String}\n         */\n        getNamespace: function() {\n            return this._namespace;\n        },\n\n        /**\n         * Get the field options\n         *\n         * @param {String|jQuery} [field] The field name or field element. If it is not set, the method returns the form options\n         * @param {String} [validator] The name of validator. It null, the method returns form options\n         * @param {String} [option] The option name\n         * @return {String|Object}\n         */\n        getOptions: function(field, validator, option) {\n            var ns = this._namespace;\n            if (!field) {\n                return option ? this.options[option] : this.options;\n            }\n            if ('object' === typeof field) {\n                field = field.attr('data-' + ns + '-field');\n            }\n            if (!this.options.fields[field]) {\n                return null;\n            }\n\n            var options = this.options.fields[field];\n            if (!validator) {\n                return option ? options[option] : options;\n            }\n            if (!options.validators || !options.validators[validator]) {\n                return null;\n            }\n\n            return option ? options.validators[validator][option] : options.validators[validator];\n        },\n\n        /**\n         * Get the validating result of field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {String} validatorName The validator name\n         * @returns {String} The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID', 'VALID' or 'IGNORED'\n         */\n        getStatus: function(field, validatorName) {\n            var ns = this._namespace;\n            switch (typeof field) {\n                case 'object':\n                    return field.data(ns + '.result.' + validatorName);\n                case 'string':\n                /* falls through */\n                default:\n                    return this.getFieldElements(field).eq(0).data(ns + '.result.' + validatorName);\n            }\n        },\n\n        /**\n         * Check whether or not a field option is enabled\n         *\n         * @param {String} field The field name\n         * @param {String} option The option name, \"verbose\", \"autoFocus\", for example\n         * @returns {Boolean}\n         */\n        isOptionEnabled: function(field, option) {\n            if (this.options.fields[field] && (this.options.fields[field][option] === 'true' || this.options.fields[field][option] === true)) {\n                return true;\n            }\n            if (this.options.fields[field] && (this.options.fields[field][option] === 'false' || this.options.fields[field][option] === false)) {\n                return false;\n            }\n            return this.options[option] === 'true' || this.options[option] === true;\n        },\n\n        /**\n         * Check the form validity\n         *\n         * @returns {Boolean|null} Returns one of three values\n         * - true, if all fields are valid\n         * - false, if there is one invalid field\n         * - null, if there is at least one field which is not validated yet or being validated\n         */\n        isValid: function() {\n            for (var field in this.options.fields) {\n                var isValidField = this.isValidField(field);\n                if (isValidField === null) {\n                    return null;\n                }\n                if (isValidField === false) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * Check if all fields inside a given container are valid.\n         * It's useful when working with a wizard-like such as tab, collapse\n         *\n         * @param {String|jQuery} container The container selector or element\n         * @returns {Boolean|null} Returns one of three values\n         * - true, if all fields inside the container are valid\n         * - false, if there is one invalid field inside the container\n         * - null, if the container consists of at least one field which is not validated yet or being validated\n         */\n        isValidContainer: function(container) {\n            var that       = this,\n                ns         = this._namespace,\n                fields     = [],\n                $container = ('string' === typeof container) ? $(container) : container;\n            if ($container.length === 0) {\n                return true;\n            }\n\n            $container.find('[data-' + ns + '-field]').each(function() {\n                var $field = $(this);\n                if (!that._isExcluded($field)) {\n                    fields.push($field);\n                }\n            });\n\n            var total = fields.length,\n                clazz = this.options.err.clazz.split(' ').join('.');\n            for (var i = 0; i < total; i++) {\n                var $f      = fields[i],\n                    field   = $f.attr('data-' + ns + '-field'),\n                    $errors = $f.data(ns + '.messages')\n                                .find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for=\"' + field + '\"]');\n\n                if (this.options.fields && this.options.fields[field]\n                    && (this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false))\n                {\n                    continue;\n                }\n\n                if ($errors.filter('[data-' + ns + '-result=\"' + this.STATUS_INVALID + '\"]').length > 0) {\n                    return false;\n                }\n\n                // If the field is not validated\n                if ($errors.filter('[data-' + ns + '-result=\"' + this.STATUS_NOT_VALIDATED + '\"]').length > 0\n                    || $errors.filter('[data-' + ns + '-result=\"' + this.STATUS_VALIDATING + '\"]').length > 0)\n                {\n                    return null;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * Check if the field is valid or not\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @returns {Boolean|null} Returns one of three values\n         * - true, if the field passes all validators\n         * - false, if the field doesn't pass any validator\n         * - null, if there is at least one validator which isn't validated yet or being validated\n         */\n        isValidField: function(field) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n            if (fields.length === 0 || !this.options.fields[field]\n                || this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false)\n            {\n                return true;\n            }\n\n            var type  = fields.attr('type'),\n                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\n                $field, validatorName, status;\n            for (var i = 0; i < total; i++) {\n                $field = fields.eq(i);\n                if (this._isExcluded($field)) {\n                    continue;\n                }\n\n                for (validatorName in this.options.fields[field].validators) {\n                    if (this.options.fields[field].validators[validatorName].enabled === false) {\n                        continue;\n                    }\n\n                    status = $field.data(ns + '.result.' + validatorName);\n                    if (status === this.STATUS_VALIDATING || status === this.STATUS_NOT_VALIDATED) {\n                        return null;\n                    } else if (status === this.STATUS_INVALID) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * Detach a handler function for a field live change event\n         *\n         * @param {jQuery[]} $fields The field elements\n         * @param {String} namespace The event namespace\n         * @returns {FormValidation.Base}\n         */\n        offLiveChange: function($fields, namespace) {\n            if ($fields === null || $fields.length === 0) {\n                return this;\n            }\n\n            var ns      = this._namespace,\n                trigger = this._getFieldTrigger($fields.eq(0)),\n                events  = $.map(trigger, function(item) {\n                    return item + '.' + namespace + '.' + ns;\n                }).join(' ');\n\n            $fields.off(events);\n            return this;\n        },\n\n        /**\n         * Attach a handler function for a field live change event\n         *\n         * @param {jQuery[]} $fields The field elements\n         * @param {String} namespace The event namespace\n         * @param {Function} handler The handler function\n         * @returns {FormValidation.Base}\n         */\n        onLiveChange: function($fields, namespace, handler) {\n            if ($fields === null || $fields.length === 0) {\n                return this;\n            }\n\n            var ns      = this._namespace,\n                trigger = this._getFieldTrigger($fields.eq(0)),\n                events  = $.map(trigger, function(item) {\n                    return item + '.' + namespace + '.' + ns;\n                }).join(' ');\n\n            switch (this.options.live) {\n                case 'submitted':\n                    break;\n                case 'disabled':\n                    $fields.off(events);\n                    break;\n                case 'enabled':\n                /* falls through */\n                default:\n                    $fields.off(events).on(events, function(e) {\n                        handler.apply(this, arguments);\n                    });\n                    break;\n            }\n\n            return this;\n        },\n\n        /**\n         * Update the error message\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {String} validator The validator name\n         * @param {String} message The message\n         * @returns {FormValidation.Base}\n         */\n        updateMessage: function(field, validator, message) {\n            var ns      = this._namespace,\n                $fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    $fields = field;\n                    field   = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    $fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            var clazz = this.options.err.clazz.split(' ').join('.');\n            $fields.each(function() {\n                $(this)\n                    .data(ns + '.messages')\n                    .find('.' + clazz + '[data-' + ns + '-validator=\"' + validator + '\"][data-' + ns + '-for=\"' + field + '\"]').html(message);\n            });\n\n            return this;\n        },\n\n        /**\n         * Update all validating results of field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {String} status The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID', 'VALID' or 'IGNORED'\n         * @param {String} [validatorName] The validator name. If null, the method updates validity result for all validators\n         * @returns {FormValidation.Base}\n         */\n        updateStatus: function(field, status, validatorName) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            if (!field || !this.options.fields[field]) {\n                return this;\n            }\n\n            if (status === this.STATUS_NOT_VALIDATED) {\n                // Reset the flag\n                // To prevent the form from doing submit when a deferred validator returns true while typing\n                this._submitIfValid = false;\n            }\n\n            var that  = this,\n                type  = fields.attr('type'),\n                row   = this.options.fields[field].row || this.options.row.selector,\n                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\n                clazz = this.options.err.clazz.split(' ').join('.');\n\n            for (var i = 0; i < total; i++) {\n                var $field       = fields.eq(i);\n                if (this._isExcluded($field)) {\n                    continue;\n                }\n\n                var $parent      = $field.closest(row),\n                    $message     = $field.data(ns + '.messages'),\n                    $allErrors   = $message.find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for=\"' + field + '\"]'),\n                    $errors      = validatorName ? $allErrors.filter('[data-' + ns + '-validator=\"' + validatorName + '\"]') : $allErrors,\n                    $icon        = $field.data(ns + '.icon'),\n                    // Support backward\n                    container    = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))\n                                    ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)\n                                    : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container),\n                    isValidField = null,\n                    isValidating,\n                    isNotValidated;\n\n                // Update status\n                if (validatorName) {\n                    $field.data(ns + '.result.' + validatorName, status);\n                } else {\n                    for (var v in this.options.fields[field].validators) {\n                        $field.data(ns + '.result.' + v, status);\n                    }\n                }\n\n                // Show/hide error elements and feedback icons\n                $errors.attr('data-' + ns + '-result', status);\n\n                switch (status) {\n                    case this.STATUS_VALIDATING:\n                        isValidField = null;\n                        this.disableSubmitButtons(true);\n                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);\n                        $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);\n                        if ($icon) {\n                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).addClass(this.options.icon.validating).show();\n                        }\n                        break;\n\n                    case this.STATUS_INVALID:\n                        isValidField = false;\n                        this.disableSubmitButtons(true);\n                        $field.removeClass(this.options.control.valid).addClass(this.options.control.invalid);\n                        $parent.removeClass(this.options.row.valid).addClass(this.options.row.invalid);\n                        if ($icon) {\n                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.validating).addClass(this.options.icon.invalid).show();\n                        }\n                        break;\n\n                    case this.STATUS_IGNORED:       // Treat ignored fields like they are valid with some specialties\n                    case this.STATUS_VALID:\n                        isValidating   = ($allErrors.filter('[data-' + ns + '-result=\"' + this.STATUS_VALIDATING +'\"]').length > 0);\n                        isNotValidated = ($allErrors.filter('[data-' + ns + '-result=\"' + this.STATUS_NOT_VALIDATED +'\"]').length > 0);\n\n                        var numIgnored = $allErrors.filter('[data-' + ns + '-result=\"' + this.STATUS_IGNORED +'\"]').length;\n\n                        // If the field is valid (passes all validators)\n                        isValidField   = (isValidating || isNotValidated)     // There are some validators that have not done\n                                        ? null\n                                        // All validators are completed\n                                        : ($allErrors.filter('[data-' + ns + '-result=\"' + this.STATUS_VALID +'\"]').length + numIgnored === $allErrors.length);\n\n                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);\n\n                        if (isValidField === true) {\n                            this.disableSubmitButtons(this.isValid() === false);\n                            if (status === this.STATUS_VALID) {\n                                $field.addClass(this.options.control.valid);\n                            }\n                        } else if (isValidField === false) {\n                            this.disableSubmitButtons(true);\n                            if (status === this.STATUS_VALID) {\n                                $field.addClass(this.options.control.invalid);\n                            }\n                        }\n\n                        if ($icon) {\n                            $icon.removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).removeClass(this.options.icon.valid);\n                            if (status === this.STATUS_VALID || numIgnored !== $allErrors.length) {\n                                $icon.addClass(isValidating\n                                                ? this.options.icon.validating\n                                                : (isValidField === null ? '' : (isValidField ? this.options.icon.valid : this.options.icon.invalid)))\n                                     .show();\n                            }\n                        }\n\n                        var isValidContainer = this.isValidContainer($parent);\n                        if (isValidContainer !== null) {\n                            $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);\n                            if (status === this.STATUS_VALID || numIgnored !== $allErrors.length) {\n                                $parent.addClass(isValidContainer ? this.options.row.valid : this.options.row.invalid);\n                            }\n                        }\n                        break;\n\n                    case this.STATUS_NOT_VALIDATED:\n                    /* falls through */\n                    default:\n                        isValidField = null;\n                        this.disableSubmitButtons(false);\n                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);\n                        $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);\n                        if ($icon) {\n                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).hide();\n                        }\n                        break;\n                }\n\n                if ($icon && ('tooltip' === container || 'popover' === container)) {\n                    (isValidField === false)\n                        // Only show the first error message\n                        ? this._createTooltip($field, $allErrors.filter('[data-' + ns + '-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html(), container)\n                        : this._destroyTooltip($field, container);\n                } else {\n                    (status === this.STATUS_INVALID) ? $errors.show() : $errors.hide();\n                }\n\n                // Trigger an event\n                $field.trigger($.Event(this.options.events.fieldStatus), {\n                    bv: this,   // Support backward\n                    fv: this,\n                    field: field,\n                    element: $field,\n                    status: status\n                });\n                this._onFieldValidated($field, validatorName);\n            }\n\n            return this;\n        },\n\n        /**\n         * Validate the form\n         *\n         * @returns {FormValidation.Base}\n         */\n        validate: function() {\n            if ($.isEmptyObject(this.options.fields)) {\n                this._submit();\n                return this;\n            }\n            this.$form.trigger($.Event(this.options.events.formPreValidate));\n\n            this.disableSubmitButtons(true);\n            this._submitIfValid = false;\n            for (var field in this.options.fields) {\n                this.validateField(field);\n            }\n\n            this._submit();\n            this._submitIfValid = true;\n\n            return this;\n        },\n\n        /**\n         * Validate given field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @returns {FormValidation.Base}\n         */\n        validateField: function(field) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            if (fields.length === 0 || !this.options.fields[field]\n                || this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false)\n            {\n                return this;\n            }\n\n            var that       = this,\n                type       = fields.attr('type'),\n                total      = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\n                updateAll  = ('radio' === type || 'checkbox' === type),\n                validators = this.options.fields[field].validators,\n                verbose    = this.isOptionEnabled(field, 'verbose'),\n                validatorName,\n                alias,\n                validateResult;\n\n            for (var i = 0; i < total; i++) {\n                var $field = fields.eq(i);\n                if (this._isExcluded($field)) {\n                    continue;\n                }\n\n                var stop             = false,\n                    sortedByPriority = $field.data(ns + '.validators'),\n                    numValidators    = sortedByPriority.length;\n\n                for (var j = 0; j < numValidators; j++) {\n                    validatorName = sortedByPriority[j].validator;\n                    if ($field.data(ns + '.dfs.' + validatorName)) {\n                        $field.data(ns + '.dfs.' + validatorName).reject();\n                    }\n                    if (stop) {\n                        break;\n                    }\n\n                    // Don't validate field if it is already done\n                    var result = $field.data(ns + '.result.' + validatorName);\n                    if (result === this.STATUS_VALID || result === this.STATUS_INVALID) {\n                        this._onFieldValidated($field, validatorName);\n                        continue;\n                    } else if (validators[validatorName].enabled === false) {\n                        // Changed in v0.6.2:\n                        // When the field validator is disabled, it should be treated as STATUS_IGNORED instead of STATUS_VALID\n                        // By doing that, the field with only disabled and ignored validators will not have success/error class\n                        this.updateStatus(updateAll ? field : $field, this.STATUS_IGNORED, validatorName);\n                        continue;\n                    }\n\n                    $field.data(ns + '.result.' + validatorName, this.STATUS_VALIDATING);\n\n                    // Check whether or not the validator is just an alias of another\n                    alias          = validators[validatorName].alias || validatorName;\n                    validateResult = FormValidation.Validator[alias].validate(this, $field, validators[validatorName], validatorName);\n\n                    // validateResult can be a $.Deferred object ...\n                    if ('object' === typeof validateResult && validateResult.resolve) {\n                        this.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);\n                        $field.data(ns + '.dfs.' + validatorName, validateResult);\n\n                        validateResult.done(function($f, v, response) {\n                            // v is validator name\n                            $f.removeData(ns + '.dfs.' + v).data(ns + '.response.' + v, response);\n                            if (response.message) {\n                                that.updateMessage($f, v, response.message);\n                            }\n\n                            that.updateStatus(updateAll ? $f.attr('data-' + ns + '-field') : $f,\n                                              response.valid === true ? that.STATUS_VALID : (response.valid === false ? that.STATUS_INVALID : that.STATUS_IGNORED),\n                                              v);\n\n                            if (response.valid && that._submitIfValid === true) {\n                                // If a remote validator returns true and the form is ready to submit, then do it\n                                that._submit();\n                            } else if (response.valid === false && !verbose) {\n                                stop = true;\n                            }\n                        });\n                    }\n                    // ... or object { valid: true/false/null, message: 'dynamic message', otherKey: value, ... }\n                    else if ('object' === typeof validateResult && validateResult.valid !== undefined) {\n                        $field.data(ns + '.response.' + validatorName, validateResult);\n                        if (validateResult.message) {\n                            this.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);\n                        }\n                        this.updateStatus(updateAll ? field : $field,\n                                          validateResult.valid === true ? this.STATUS_VALID : (validateResult.valid === false ? this.STATUS_INVALID : this.STATUS_IGNORED),\n                                          validatorName);\n                        if (validateResult.valid === false && !verbose) {\n                            break;\n                        }\n                    }\n                    // ... or a boolean value\n                    else if ('boolean' === typeof validateResult) {\n                        $field.data(ns + '.response.' + validatorName, validateResult);\n                        this.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\n                        if (!validateResult && !verbose) {\n                            break;\n                        }\n                    }\n                    // ... or null\n                    // to indicate that the field should be ignored for current validator\n                    else if (null === validateResult) {\n                        $field.data(ns + '.response.' + validatorName, validateResult);\n                        this.updateStatus(updateAll ? field : $field, this.STATUS_IGNORED, validatorName);\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        // Useful APIs which aren't used internally\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n        /**\n         * Add a new field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {Object} [options] The validator rules\n         * @returns {FormValidation.Base}\n         */\n        addField: function(field, options) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field') || field.attr('name');\n                    break;\n                case 'string':\n                    delete this._cacheFields[field];\n                    fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            fields.attr('data-' + ns + '-field', field);\n\n            var type  = fields.attr('type'),\n                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\n\n            for (var i = 0; i < total; i++) {\n                var $field = fields.eq(i);\n\n                // Try to parse the options from HTML attributes\n                var opts = this._parseOptions($field);\n                opts = (opts === null) ? options : $.extend(true, opts, options);\n\n                this.options.fields[field] = $.extend(true, this.options.fields[field], opts);\n\n                // Update the cache\n                this._cacheFields[field] = this._cacheFields[field] ? this._cacheFields[field].add($field) : $field;\n\n                // Init the element\n                this._initField(('checkbox' === type || 'radio' === type) ? field : $field);\n            }\n\n            this.disableSubmitButtons(false);\n            // Trigger an event\n            this.$form.trigger($.Event(this.options.events.fieldAdded), {\n                field: field,\n                element: fields,\n                options: this.options.fields[field]\n            });\n\n            return this;\n        },\n\n        /**\n         * Destroy the plugin\n         * It will remove all error messages, feedback icons and turn off the events\n         */\n        destroy: function() {\n            var ns = this._namespace, i, field, fields, $field, validator, $icon, row, alias;\n\n            // Destroy the validators first\n            for (field in this.options.fields) {\n                fields = this.getFieldElements(field);\n                for (i = 0; i < fields.length; i++) {\n                    $field = fields.eq(i);\n                    for (validator in this.options.fields[field].validators) {\n                        if ($field.data(ns + '.dfs.' + validator)) {\n                            $field.data(ns + '.dfs.' + validator).reject();\n                        }\n                        $field.removeData(ns + '.result.' + validator)\n                              .removeData(ns + '.response.' + validator)\n                              .removeData(ns + '.dfs.' + validator);\n\n                        // Destroy the validator\n                        alias = this.options.fields[field].validators[validator].alias || validator;\n                        if ('function' === typeof FormValidation.Validator[alias].destroy) {\n                            FormValidation.Validator[alias].destroy(this, $field, this.options.fields[field].validators[validator], validator);\n                        }\n                    }\n                }\n            }\n\n            // Remove messages and icons\n            var clazz = this.options.err.clazz.split(' ').join('.');\n            for (field in this.options.fields) {\n                fields = this.getFieldElements(field);\n                row    = this.options.fields[field].row || this.options.row.selector;\n                for (i = 0; i < fields.length; i++) {\n                    $field = fields.eq(i);\n                    $field\n                        // Remove all error messages\n                        .data(ns + '.messages')\n                            .find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for=\"' + field + '\"]').remove().end()\n                            .end()\n                        .removeData(ns + '.messages')\n                        .removeData(ns + '.validators')\n                        // Remove feedback classes\n                        .closest(row)\n                            .removeClass(this.options.row.valid)\n                            .removeClass(this.options.row.invalid)\n                            .removeClass(this.options.row.feedback)\n                            .end()\n                        // Turn off events\n                        .off('.' + ns)\n                        .removeAttr('data-' + ns + '-field');\n\n                    // Remove feedback icons, tooltip/popover container\n                    // Support backward\n                    var container = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))\n                                    ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)\n                                    : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container);\n                    if ('tooltip' === container || 'popover' === container) {\n                        this._destroyTooltip($field, container);\n                    }\n\n                    $icon = $field.data(ns + '.icon');\n                    if ($icon) {\n                        $icon.remove();\n                    }\n                    $field.removeData(ns + '.icon')\n                          // It's safe to remove trigger data here, because it might be used when destroying the validator\n                          .removeData(ns + '.trigger');\n                }\n            }\n\n            // Destroy the add-ons\n            for (var addOn in this.options.addOns) {\n                if ('function' === typeof FormValidation.AddOn[addOn].destroy) {\n                    FormValidation.AddOn[addOn].destroy(this, this.options.addOns[addOn]);\n                }\n            }\n\n            this.disableSubmitButtons(false);   // Enable submit buttons\n            this.$hiddenButton.remove();        // Remove the hidden button\n\n            this.$form\n                .removeClass(this.options.elementClass)\n                .off('.' + ns)\n                .removeData('bootstrapValidator')   // Support backward\n                .removeData('formValidation')\n                // Remove generated hidden elements\n                .find('[data-' + ns + '-submit-hidden]').remove().end()\n                .find('[type=\"submit\"]')\n                    .off('click.' + ns);\n        },\n\n        /**\n         * Enable/Disable all validators to given field\n         *\n         * @param {String} field The field name\n         * @param {Boolean} enabled Enable/Disable field validators\n         * @param {String} [validatorName] The validator name. If null, all validators will be enabled/disabled\n         * @returns {FormValidation.Base}\n         */\n        enableFieldValidators: function(field, enabled, validatorName) {\n            var validators = this.options.fields[field].validators;\n\n            // Enable/disable particular validator\n            if (validatorName\n                && validators\n                && validators[validatorName] && validators[validatorName].enabled !== enabled)\n            {\n                this.options.fields[field].validators[validatorName].enabled = enabled;\n                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validatorName);\n            }\n            // Enable/disable all validators\n            else if (!validatorName && this.options.fields[field].enabled !== enabled) {\n                this.options.fields[field].enabled = enabled;\n                for (var v in validators) {\n                    this.enableFieldValidators(field, enabled, v);\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * Some validators have option which its value is dynamic.\n         * For example, the zipCode validator has the country option which might be changed dynamically by a select element.\n         *\n         * @param {jQuery|String} field The field name or element\n         * @param {String|Function} option The option which can be determined by:\n         * - a string\n         * - name of field which defines the value\n         * - name of function which returns the value\n         * - a function returns the value\n         *\n         * The callback function has the format of\n         *      callback: function(value, validator, $field) {\n         *          // value is the value of field\n         *          // validator is the BootstrapValidator instance\n         *          // $field is the field element\n         *      }\n         *\n         * @returns {String}\n         */\n        getDynamicOption: function(field, option) {\n            var $field = ('string' === typeof field) ? this.getFieldElements(field) : field,\n                value  = $field.val();\n\n            // Option can be determined by\n            // ... a function\n            if ('function' === typeof option) {\n                return FormValidation.Helper.call(option, [value, this, $field]);\n            }\n            // ... value of other field\n            else if ('string' === typeof option) {\n                var $f = this.getFieldElements(option);\n                if ($f.length) {\n                    return $f.val();\n                }\n                // ... return value of callback\n                else {\n                    return FormValidation.Helper.call(option, [value, this, $field]) || option;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * Get the form element\n         *\n         * @returns {jQuery}\n         */\n        getForm: function() {\n            return this.$form;\n        },\n\n        /**\n         * Get the list of invalid fields\n         *\n         * @returns {jQuery[]}\n         */\n        getInvalidFields: function() {\n            return this.$invalidFields;\n        },\n\n        /**\n         * Get the current locale\n         *\n         * @return {String}\n         */\n        getLocale: function() {\n            return this.options.locale;\n        },\n\n        /**\n         * Get the error messages\n         *\n         * @param {String|jQuery} [field] The field name or field element\n         * If the field is not defined, the method returns all error messages of all fields\n         * @param {String} [validator] The name of validator\n         * If the validator is not defined, the method returns error messages of all validators\n         * @returns {String[]}\n         */\n        getMessages: function(field, validator) {\n            var that     = this,\n                ns       = this._namespace,\n                messages = [],\n                $fields  = $([]);\n\n            switch (true) {\n                case (field && 'object' === typeof field):\n                    $fields = field;\n                    break;\n                case (field && 'string' === typeof field):\n                    var f = this.getFieldElements(field);\n                    if (f.length > 0) {\n                        var type = f.attr('type');\n                        $fields = ('radio' === type || 'checkbox' === type) ? f.eq(0) : f;\n                    }\n                    break;\n                default:\n                    $fields = this.$invalidFields;\n                    break;\n            }\n\n            var filter = validator ? '[data-' + ns + '-validator=\"' + validator + '\"]' : '',\n                clazz  = this.options.err.clazz.split(' ').join('.');\n            $fields.each(function() {\n                messages = messages.concat(\n                    $(this)\n                        .data(ns + '.messages')\n                        .find('.' + clazz + '[data-' + ns + '-for=\"' + $(this).attr('data-' + ns + '-field') + '\"][data-' + ns + '-result=\"' + that.STATUS_INVALID + '\"]' + filter)\n                        .map(function() {\n                            var v = $(this).attr('data-' + ns + '-validator'),\n                                f = $(this).attr('data-' + ns + '-for');\n                            return (that.options.fields[f].validators[v].enabled === false) ? '' : $(this).html();\n                        })\n                        .get()\n                );\n            });\n\n            return messages;\n        },\n\n        /**\n         * Returns the clicked submit button\n         *\n         * @returns {jQuery}\n         */\n        getSubmitButton: function() {\n            return this.$submitButton;\n        },\n\n        /**\n         * Remove a given field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @returns {FormValidation.Base}\n         */\n        removeField: function(field) {\n            var ns     = this._namespace,\n                fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    fields = field;\n                    field  = field.attr('data-' + ns + '-field') || field.attr('name');\n                    fields.attr('data-' + ns + '-field', field);\n                    break;\n                case 'string':\n                    fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            if (fields.length === 0) {\n                return this;\n            }\n\n            var type  = fields.attr('type'),\n                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\n\n            for (var i = 0; i < total; i++) {\n                var $field = fields.eq(i);\n\n                // Remove from the list of invalid fields\n                this.$invalidFields = this.$invalidFields.not($field);\n\n                // Update the cache\n                this._cacheFields[field] = this._cacheFields[field].not($field);\n            }\n\n            if (!this._cacheFields[field] || this._cacheFields[field].length === 0) {\n                delete this.options.fields[field];\n            }\n            if ('checkbox' === type || 'radio' === type) {\n                this._initField(field);\n            }\n\n            this.disableSubmitButtons(false);\n            // Trigger an event\n            this.$form.trigger($.Event(this.options.events.fieldRemoved), {\n                field: field,\n                element: fields\n            });\n\n            return this;\n        },\n\n        /**\n         * Reset given field\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)\n         * @returns {FormValidation.Base}\n         */\n        resetField: function(field, resetValue) {\n            var ns      = this._namespace,\n                $fields = $([]);\n            switch (typeof field) {\n                case 'object':\n                    $fields = field;\n                    field   = field.attr('data-' + ns + '-field');\n                    break;\n                case 'string':\n                    $fields = this.getFieldElements(field);\n                    break;\n                default:\n                    break;\n            }\n\n            var i     = 0,\n                total = $fields.length;\n            if (this.options.fields[field]) {\n                for (i = 0; i < total; i++) {\n                    for (var validator in this.options.fields[field].validators) {\n                        $fields.eq(i).removeData(ns + '.dfs.' + validator);\n                    }\n                }\n            }\n\n            if (resetValue) {\n                var type = $fields.attr('type');\n                ('radio' === type || 'checkbox' === type) ? $fields.prop('checked', false).removeAttr('selected') : $fields.val('');\n            }\n\n            // Mark field as not validated yet\n            this.updateStatus(field, this.STATUS_NOT_VALIDATED);\n\n            for (i = 0; i < total; i++) {\n                $fields.eq(i).trigger($.Event(this.options.events.fieldReset), {\n                    fv: this,\n                    field: field,\n                    element: $fields.eq(i),\n                    resetValue: resetValue\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Reset the form\n         *\n         * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)\n         * @returns {FormValidation.Base}\n         */\n        resetForm: function(resetValue) {\n            for (var field in this.options.fields) {\n                this.resetField(field, resetValue);\n            }\n\n            this.$invalidFields = $([]);\n            this.$submitButton  = null;\n\n            // Enable submit buttons\n            this.disableSubmitButtons(false);\n\n            this.$form.trigger($.Event(this.options.events.formReset), {\n                fv: this,\n                resetValue: resetValue\n            });\n\n            return this;\n        },\n\n        /**\n         * Revalidate given field\n         * It's used when you need to revalidate the field which its value is updated by other plugin\n         *\n         * @param {String|jQuery} field The field name of field element\n         * @returns {FormValidation.Base}\n         */\n        revalidateField: function(field) {\n            this.updateStatus(field, this.STATUS_NOT_VALIDATED)\n                .validateField(field);\n\n            return this;\n        },\n\n        /**\n         * Set the locale\n         *\n         * @param {String} locale The locale in format of countrycode_LANGUAGECODE\n         * @returns {FormValidation.Base}\n         */\n        setLocale: function(locale) {\n            this.options.locale = locale;\n            this.$form.trigger($.Event(this.options.events.localeChanged), {\n                locale: locale,\n                bv: this,   // Support backward\n                fv: this\n            });\n\n            return this;\n        },\n\n        /**\n         * Update the option of a specific validator\n         *\n         * @param {String|jQuery} field The field name or field element\n         * @param {String} validator The validator name\n         * @param {String} option The option name\n         * @param {String} value The value to set\n         * @returns {FormValidation.Base}\n         */\n        updateOption: function(field, validator, option, value) {\n            var ns = this._namespace;\n            if ('object' === typeof field) {\n                field = field.attr('data-' + ns + '-field');\n            }\n            if (this.options.fields[field] && this.options.fields[field].validators[validator]) {\n                this.options.fields[field].validators[validator][option] = value;\n                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validator);\n            }\n\n            return this;\n        },\n\n        /**\n         * Validate given container\n         * It can be used with isValidContainer() when you want to work with wizard form\n         *\n         * @param {String|jQuery} container The container selector or element\n         * @returns {FormValidation.Base}\n         */\n        validateContainer: function(container) {\n            var that       = this,\n                ns         = this._namespace,\n                fields     = [],\n                $container = ('string' === typeof container) ? $(container) : container;\n            if ($container.length === 0) {\n                return this;\n            }\n\n            $container.find('[data-' + ns + '-field]').each(function() {\n                var $field = $(this);\n                if (!that._isExcluded($field)) {\n                    fields.push($field);\n                }\n            });\n\n            var total = fields.length;\n            for (var i = 0; i < total; i++) {\n                this.validateField(fields[i]);\n            }\n\n            return this;\n        }\n    };\n\n    // Plugin definition\n    $.fn.formValidation = function(option) {\n        var params = arguments;\n        return this.each(function() {\n            var $this   = $(this),\n                data    = $this.data('formValidation'),\n                options = 'object' === typeof option && option;\n            if (!data) {\n                var framework = (options.framework || $this.attr('data-fv-framework') || 'bootstrap').toLowerCase(),\n                    clazz     = framework.substr(0, 1).toUpperCase() + framework.substr(1);\n\n                if (typeof FormValidation.Framework[clazz] === 'undefined') {\n                    throw new Error('The class FormValidation.Framework.' + clazz + ' is not implemented');\n                }\n\n                data = new FormValidation.Framework[clazz](this, options);\n                $this.addClass('fv-form-' + framework)\n                     .data('formValidation', data);\n            }\n\n            // Allow to call plugin method\n            if ('string' === typeof option) {\n                data[option].apply(data, Array.prototype.slice.call(params, 1));\n            }\n        });\n    };\n\n    $.fn.formValidation.Constructor = FormValidation.Base;\n\n    // Default message\n    $.fn.formValidation.DEFAULT_MESSAGE = 'This value is not valid';\n\n    // The default options sorted in alphabetical order\n    $.fn.formValidation.DEFAULT_OPTIONS = {\n        // The first invalid field will be focused automatically\n        autoFocus: true,\n\n        // Support declarative usage (setting options via HTML 5 attributes)\n        // Setting to false can improve the performance\n        declarative: true,\n\n        // The form CSS class\n        elementClass: 'fv-form',\n\n        // Use custom event name to avoid window.onerror being invoked by jQuery\n        // See #630\n        events: {\n            // Support backward\n            formInit: 'init.form.fv',\n            formPreValidate: 'prevalidate.form.fv',\n            formError: 'err.form.fv',\n            formReset: 'rst.form.fv',\n            formSuccess: 'success.form.fv',\n            fieldAdded: 'added.field.fv',\n            fieldRemoved: 'removed.field.fv',\n            fieldInit: 'init.field.fv',\n            fieldError: 'err.field.fv',\n            fieldReset: 'rst.field.fv',\n            fieldSuccess: 'success.field.fv',\n            fieldStatus: 'status.field.fv',\n            localeChanged: 'changed.locale.fv',\n            validatorError: 'err.validator.fv',\n            validatorSuccess: 'success.validator.fv',\n            validatorIgnored: 'ignored.validator.fv'\n        },\n\n        // Indicate fields which won't be validated\n        // By default, the plugin will not validate the following kind of fields:\n        // - disabled\n        // - hidden\n        // - invisible\n        //\n        // The setting consists of jQuery filters. Accept 3 formats:\n        // - A string. Use a comma to separate filter\n        // - An array. Each element is a filter\n        // - An array. Each element can be a callback function\n        //      function($field, validator) {\n        //          $field is jQuery object representing the field element\n        //          validator is the BootstrapValidator instance\n        //          return true or false;\n        //      }\n        //\n        // The 3 following settings are equivalent:\n        //\n        // 1) ':disabled, :hidden, :not(:visible)'\n        // 2) [':disabled', ':hidden', ':not(:visible)']\n        // 3) [':disabled', ':hidden', function($field) {\n        //        return !$field.is(':visible');\n        //    }]\n        excluded: [':disabled', ':hidden', ':not(:visible)'],\n\n        // Map the field name with validator rules\n        fields: null,\n\n        // Live validating option\n        // Can be one of 3 values:\n        // - enabled: The plugin validates fields as soon as they are changed\n        // - disabled: Disable the live validating. The error messages are only shown after the form is submitted\n        // - submitted: The live validating is enabled after the form is submitted\n        live: 'enabled',\n\n        // Locale in the format of languagecode_COUNTRYCODE\n        locale: 'en_US',\n\n        // Default invalid message\n        message: null,\n\n        // The field will not be live validated if its length is less than this number of characters\n        threshold: null,\n\n        // Whether to be verbose when validating a field or not.\n        // Possible values:\n        // - true:  when a field has multiple validators, all of them will be checked, and respectively - if errors occur in\n        //          multiple validators, all of them will be displayed to the user\n        // - false: when a field has multiple validators, validation for this field will be terminated upon the first encountered error.\n        //          Thus, only the very first error message related to this field will be displayed to the user\n        verbose: true,\n\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        // These options mostly are overridden by specific framework\n        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n        button: {\n            // The submit buttons selector\n            // These buttons will be disabled to prevent the valid form from multiple submissions\n            // Don't perform validation when clicking on the submit button/input which have formnovalidate attribute\n            selector: '[type=\"submit\"]:not([formnovalidate])',\n\n            // The disabled class\n            disabled: ''\n        },\n\n        control: {\n            // The CSS class for valid control\n            valid: '',\n\n            // The CSS class for invalid control\n            invalid: ''\n        },\n\n        err: {\n            // The CSS class of each message element\n            clazz: '',\n\n            // The error messages container. It can be:\n            // - 'tooltip' if you want to use Bootstrap tooltip to show error messages\n            // - 'popover' if you want to use Bootstrap popover to show error messages\n            // - a CSS selector indicating the container\n            // In the first two cases, since the tooltip/popover should be small enough, the plugin only shows only one error message\n            // You also can define the message container for particular field\n            container: null,\n\n            // Used to determine where the messages are placed\n            parent: null\n        },\n\n        // Shows ok/error/loading icons based on the field validity.\n        icon: {\n            valid: null,\n            invalid: null,\n            validating: null,\n            feedback: ''\n        },\n\n        row: {\n            // The CSS selector for indicating the element consists of the field\n            // You should adjust this option if your form group consists of many fields which not all of them need to be validated\n            selector: null,\n            valid: '',\n            invalid: '',\n            feedback: ''\n        }\n    };\n}(jQuery));\n;(function($) {\n    // Helper methods, which can be used in validator class\n    FormValidation.Helper = {\n        /**\n         * Execute a callback function\n         *\n         * @param {String|Function} functionName Can be\n         * - name of global function\n         * - name of namespace function (such as A.B.C)\n         * - a function\n         * @param {Array} args The callback arguments\n         */\n        call: function(functionName, args) {\n            if ('function' === typeof functionName) {\n                return functionName.apply(this, args);\n            } else if ('string' === typeof functionName) {\n                if ('()' === functionName.substring(functionName.length - 2)) {\n                    functionName = functionName.substring(0, functionName.length - 2);\n                }\n                var ns      = functionName.split('.'),\n                    func    = ns.pop(),\n                    context = window;\n                for (var i = 0; i < ns.length; i++) {\n                    context = context[ns[i]];\n                }\n\n                return (typeof context[func] === 'undefined') ? null : context[func].apply(this, args);\n            }\n        },\n\n        /**\n         * Validate a date\n         *\n         * @param {Number} year The full year in 4 digits\n         * @param {Number} month The month number\n         * @param {Number} day The day number\n         * @param {Boolean} [notInFuture] If true, the date must not be in the future\n         * @returns {Boolean}\n         */\n        date: function(year, month, day, notInFuture) {\n            if (isNaN(year) || isNaN(month) || isNaN(day)) {\n                return false;\n            }\n            if (day.length > 2 || month.length > 2 || year.length > 4) {\n                return false;\n            }\n\n            day   = parseInt(day, 10);\n            month = parseInt(month, 10);\n            year  = parseInt(year, 10);\n\n            if (year < 1000 || year > 9999 || month <= 0 || month > 12) {\n                return false;\n            }\n            var numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n            // Update the number of days in Feb of leap year\n            if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\n                numDays[1] = 29;\n            }\n\n            // Check the day\n            if (day <= 0 || day > numDays[month - 1]) {\n                return false;\n            }\n\n            if (notInFuture === true) {\n                var currentDate  = new Date(),\n                    currentYear  = currentDate.getFullYear(),\n                    currentMonth = currentDate.getMonth(),\n                    currentDay   = currentDate.getDate();\n                return (year < currentYear\n                || (year === currentYear && month - 1 < currentMonth)\n                || (year === currentYear && month - 1 === currentMonth && day < currentDay));\n            }\n\n            return true;\n        },\n\n        /**\n         * Format a string\n         * It's used to format the error message\n         * format('The field must between %s and %s', [10, 20]) = 'The field must between 10 and 20'\n         *\n         * @param {String} message\n         * @param {Array} parameters\n         * @returns {String}\n         */\n        format: function(message, parameters) {\n            if (!$.isArray(parameters)) {\n                parameters = [parameters];\n            }\n\n            for (var i in parameters) {\n                message = message.replace('%s', parameters[i]);\n            }\n\n            return message;\n        },\n\n        /**\n         * Implement Luhn validation algorithm\n         * Credit to https://gist.github.com/ShirtlessKirk/2134376\n         *\n         * @see http://en.wikipedia.org/wiki/Luhn\n         * @param {String} value\n         * @returns {Boolean}\n         */\n        luhn: function(value) {\n            var length  = value.length,\n                mul     = 0,\n                prodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\n                sum     = 0;\n\n            while (length--) {\n                sum += prodArr[mul][parseInt(value.charAt(length), 10)];\n                mul ^= 1;\n            }\n\n            return (sum % 10 === 0 && sum > 0);\n        },\n\n        /**\n         * Implement modulus 11, 10 (ISO 7064) algorithm\n         *\n         * @param {String} value\n         * @returns {Boolean}\n         */\n        mod11And10: function(value) {\n            var check  = 5,\n                length = value.length;\n            for (var i = 0; i < length; i++) {\n                check = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;\n            }\n            return (check === 1);\n        },\n\n        /**\n         * Implements Mod 37, 36 (ISO 7064) algorithm\n         * Usages:\n         * mod37And36('A12425GABC1234002M')\n         * mod37And36('002006673085', '0123456789')\n         *\n         * @param {String} value\n         * @param {String} [alphabet]\n         * @returns {Boolean}\n         */\n        mod37And36: function(value, alphabet) {\n            alphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            var modulus = alphabet.length,\n                length  = value.length,\n                check   = Math.floor(modulus / 2);\n            for (var i = 0; i < length; i++) {\n                check = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;\n            }\n            return (check === 1);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            base64: {\n                'default': 'Please enter a valid base 64 encoded'\n            }\n        }\n    });\n\n    FormValidation.Validator.base64 = {\n        /**\n         * Return true if the input value is a base 64 encoded string.\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            between: {\n                'default': 'Please enter a value between %s and %s',\n                notInclusive: 'Please enter a value between %s and %s strictly'\n            }\n        }\n    });\n\n    FormValidation.Validator.between = {\n        html5Attributes: {\n            message: 'message',\n            min: 'min',\n            max: 'max',\n            inclusive: 'inclusive'\n        },\n\n        enableByHtml5: function($field) {\n            if ('range' === $field.attr('type')) {\n                return {\n                    min: $field.attr('min'),\n                    max: $field.attr('max')\n                };\n            }\n\n            return false;\n        },\n\n        /**\n         * Return true if the input value is between (strictly or not) two given numbers\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - min\n         * - max\n         *\n         * The min, max keys define the number which the field value compares to. min, max can be\n         *      - A number\n         *      - Name of field which its value defines the number\n         *      - Name of callback function that returns the number\n         *      - A callback function that returns the number\n         *\n         * - inclusive [optional]: Can be true or false. Default is true\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n\t\t\tvalue = this._format(value);\n\n            var locale   = validator.getLocale(),\n                min      = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\n                max      = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\n                minValue = this._format(min),\n                maxValue = this._format(max);\n\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\n                    ? {\n                        valid: $.isNumeric(value) && parseFloat(value) >= minValue && parseFloat(value) <= maxValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].between['default'], [min, max])\n                    }\n                    : {\n                        valid: $.isNumeric(value) && parseFloat(value) > minValue && parseFloat(value) < maxValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].between.notInclusive, [min, max])\n                    };\n        },\n\n        _format: function(value) {\n            return (value + '').replace(',', '.');\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            bic: {\n                'default': 'Please enter a valid BIC number'\n            }\n        }\n    });\n\n    FormValidation.Validator.bic = {\n        /**\n         * Validate an Business Identifier Code (BIC), also known as ISO 9362, SWIFT-BIC, SWIFT ID or SWIFT code\n         *\n         * For more information see http://en.wikipedia.org/wiki/ISO_9362\n         *\n         * @todo The 5 and 6 characters are an ISO 3166-1 country code, this could also be validated\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n            return /^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.Validator.blank = {\n        /**\n         * Placeholder validator that can be used to display a custom validation message\n         * returned from the server\n         * Example:\n         *\n         * (1) a \"blank\" validator is applied to an input field.\n         * (2) data is entered via the UI that is unable to be validated client-side.\n         * (3) server returns a 400 with JSON data that contains the field that failed\n         *     validation and an associated message.\n         * (4) ajax 400 call handler does the following:\n         *\n         *      fv.updateMessage(field, 'blank', errorMessage);\n         *      fv.updateStatus(field, 'INVALID', 'blank');\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            return true;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            callback: {\n                'default': 'Please enter a valid value'\n            }\n        }\n    });\n\n    FormValidation.Validator.callback = {\n        priority: 999,\n\n        html5Attributes: {\n            message: 'message',\n            callback: 'callback'\n        },\n\n        /**\n         * Return result from the callback method\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - callback: The callback method that passes parameters:\n         *      callback: function(fieldValue, validator, $field) {\n         *          // fieldValue is the value of field\n         *          // validator is instance of FormValidation.Base\n         *          // $field is the field element\n         *      }\n         * - message: The invalid message\n         * @returns {Deferred}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value  = validator.getFieldValue($field, validatorName),\n                dfd    = new $.Deferred(),\n                result = { valid: true };\n\n            if (options.callback) {\n                var response = FormValidation.Helper.call(options.callback, [value, validator, $field]);\n                result = ('boolean' === typeof response || null === response) ? { valid: response } : response;\n            }\n\n            dfd.resolve($field, validatorName, result);\n            return dfd;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            choice: {\n                'default': 'Please enter a valid value',\n                less: 'Please choose %s options at minimum',\n                more: 'Please choose %s options at maximum',\n                between: 'Please choose %s - %s options'\n            }\n        }\n    });\n\n    FormValidation.Validator.choice = {\n        html5Attributes: {\n            message: 'message',\n            min: 'min',\n            max: 'max'\n        },\n\n        /**\n         * Check if the number of checked boxes are less or more than a given number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of following keys:\n         * - min\n         * - max\n         *\n         * At least one of two keys is required\n         * The min, max keys define the number which the field value compares to. min, max can be\n         *      - A number\n         *      - Name of field which its value defines the number\n         *      - Name of callback function that returns the number\n         *      - A callback function that returns the number\n         *\n         * - message: The invalid message\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var locale     = validator.getLocale(),\n                ns         = validator.getNamespace(),\n                numChoices = $field.is('select')\n                            ? validator.getFieldElements($field.attr('data-' + ns + '-field')).find('option').filter(':selected').length\n                            : validator.getFieldElements($field.attr('data-' + ns + '-field')).filter(':checked').length,\n                min        = options.min ? ($.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min)) : null,\n                max        = options.max ? ($.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max)) : null,\n                isValid    = true,\n                message    = options.message || FormValidation.I18n[locale].choice['default'];\n\n            if ((min && numChoices < parseInt(min, 10)) || (max && numChoices > parseInt(max, 10))) {\n                isValid = false;\n            }\n\n            switch (true) {\n                case (!!min && !!max):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.between, [parseInt(min, 10), parseInt(max, 10)]);\n                    break;\n\n                case (!!min):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.less, parseInt(min, 10));\n                    break;\n\n                case (!!max):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.more, parseInt(max, 10));\n                    break;\n\n                default:\n                    break;\n            }\n\n            return { valid: isValid, message: message };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            color: {\n                'default': 'Please enter a valid color'\n            }\n        }\n    });\n\n    FormValidation.Validator.color = {\n        html5Attributes: {\n            message: 'message',\n            type: 'type'\n        },\n\n        enableByHtml5: function($field) {\n            return ('color' === $field.attr('type'));\n        },\n\n        SUPPORTED_TYPES: [\n            'hex', 'rgb', 'rgba', 'hsl', 'hsla', 'keyword'\n        ],\n\n        KEYWORD_COLORS: [\n            // Colors start with A\n            'aliceblue', 'antiquewhite', 'aqua', 'aquamarine', 'azure',\n            // B\n            'beige', 'bisque', 'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown', 'burlywood',\n            // C\n            'cadetblue', 'chartreuse', 'chocolate', 'coral', 'cornflowerblue', 'cornsilk', 'crimson', 'cyan',\n            // D\n            'darkblue', 'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey', 'darkkhaki', 'darkmagenta',\n            'darkolivegreen', 'darkorange', 'darkorchid', 'darkred', 'darksalmon', 'darkseagreen', 'darkslateblue',\n            'darkslategray', 'darkslategrey', 'darkturquoise', 'darkviolet', 'deeppink', 'deepskyblue', 'dimgray',\n            'dimgrey', 'dodgerblue',\n            // F\n            'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            // G\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green', 'greenyellow', 'grey',\n            // H\n            'honeydew', 'hotpink',\n            // I\n            'indianred', 'indigo', 'ivory',\n            // K\n            'khaki',\n            // L\n            'lavender', 'lavenderblush', 'lawngreen', 'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey', 'lightpink', 'lightsalmon', 'lightseagreen',\n            'lightskyblue', 'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow', 'lime', 'limegreen',\n            'linen',\n            // M\n            'magenta', 'maroon', 'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple', 'mediumseagreen',\n            'mediumslateblue', 'mediumspringgreen', 'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin',\n            // N\n            'navajowhite', 'navy',\n            // O\n            'oldlace', 'olive', 'olivedrab', 'orange', 'orangered', 'orchid',\n            // P\n            'palegoldenrod', 'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip', 'peachpuff', 'peru', 'pink',\n            'plum', 'powderblue', 'purple',\n            // R\n            'red', 'rosybrown', 'royalblue',\n            // S\n            'saddlebrown', 'salmon', 'sandybrown', 'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue',\n            // T\n            'tan', 'teal', 'thistle', 'tomato', 'transparent', 'turquoise',\n            // V\n            'violet',\n            // W\n            'wheat', 'white', 'whitesmoke',\n            // Y\n            'yellow', 'yellowgreen'\n        ],\n\n        /**\n         * Return true if the input value is a valid color\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * - type: The array of valid color types\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Only accept 6 hex character values due to the HTML 5 spec\n            // See http://www.w3.org/TR/html-markup/input.color.html#input.color.attrs.value\n            if (this.enableByHtml5($field)) {\n                return /^#[0-9A-F]{6}$/i.test(value);\n            }\n\n            var types = options.type || this.SUPPORTED_TYPES;\n            if (!$.isArray(types)) {\n                types = types.replace(/s/g, '').split(',');\n            }\n\n            var method,\n                type,\n                isValid = false;\n\n            for (var i = 0; i < types.length; i++) {\n                type    = types[i];\n                method  = '_' + type.toLowerCase();\n                isValid = isValid || this[method](value);\n                if (isValid) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _hex: function(value) {\n            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\n        },\n\n        _hsl: function(value) {\n            return /^hsl\\((\\s*(-?\\d+)\\s*,)(\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*,)(\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*)\\)$/.test(value);\n        },\n\n        _hsla: function(value) {\n            return /^hsla\\((\\s*(-?\\d+)\\s*,)(\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*,){2}(\\s*(0?(\\.\\d+)?|1(\\.0+)?)\\s*)\\)$/.test(value);\n        },\n\n        _keyword: function(value) {\n            return $.inArray(value, this.KEYWORD_COLORS) >= 0;\n        },\n\n        _rgb: function(value) {\n            var regexInteger = /^rgb\\((\\s*(\\b([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\b)\\s*,){2}(\\s*(\\b([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\b)\\s*)\\)$/,\n                regexPercent = /^rgb\\((\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*,){2}(\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*)\\)$/;\n            return regexInteger.test(value) || regexPercent.test(value);\n        },\n\n        _rgba: function(value) {\n            var regexInteger = /^rgba\\((\\s*(\\b([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\b)\\s*,){3}(\\s*(0?(\\.\\d+)?|1(\\.0+)?)\\s*)\\)$/,\n                regexPercent = /^rgba\\((\\s*(\\b(0?\\d{1,2}|100)\\b%)\\s*,){3}(\\s*(0?(\\.\\d+)?|1(\\.0+)?)\\s*)\\)$/;\n            return regexInteger.test(value) || regexPercent.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            creditCard: {\n                'default': 'Please enter a valid credit card number'\n            }\n        }\n    });\n\n    FormValidation.Validator.creditCard = {\n        /**\n         * Return true if the input value is valid credit card number\n         * Based on https://gist.github.com/DiegoSalazar/4075533\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} [options] Can consist of the following key:\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Accept only digits, dashes or spaces\n            if (/[^0-9-\\s]+/.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\D/g, '');\n\n            if (!FormValidation.Helper.luhn(value)) {\n                return false;\n            }\n\n            // Validate the card number based on prefix (IIN ranges) and length\n            var cards = {\n                AMERICAN_EXPRESS: {\n                    length: [15],\n                    prefix: ['34', '37']\n                },\n                DINERS_CLUB: {\n                    length: [14],\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\n                },\n                DINERS_CLUB_US: {\n                    length: [16],\n                    prefix: ['54', '55']\n                },\n                DISCOVER: {\n                    length: [16],\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\n                             '62214', '62215', '62216', '62217', '62218', '62219',\n                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',\n                             '62290', '62291', '622920', '622921', '622922', '622923',\n                             '622924', '622925', '644', '645', '646', '647', '648',\n                             '649', '65']\n                },\n                JCB: {\n                    length: [16],\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\n                },\n                LASER: {\n                    length: [16, 17, 18, 19],\n                    prefix: ['6304', '6706', '6771', '6709']\n                },\n                MAESTRO: {\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\n                },\n                MASTERCARD: {\n                    length: [16],\n                    prefix: ['51', '52', '53', '54', '55']\n                },\n                SOLO: {\n                    length: [16, 18, 19],\n                    prefix: ['6334', '6767']\n                },\n                UNIONPAY: {\n                    length: [16, 17, 18, 19],\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\n                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',\n                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',\n                             '622920', '622921', '622922', '622923', '622924', '622925']\n                },\n                VISA: {\n                    length: [16],\n                    prefix: ['4']\n                }\n            };\n\n            var type, i;\n            for (type in cards) {\n                for (i in cards[type].prefix) {\n                    if (value.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]     // Check the prefix\n                        && $.inArray(value.length, cards[type].length) !== -1)                      // and length\n                    {\n                        return {\n                            valid: true,\n                            type: type\n                        };\n                    }\n                }\n            }\n\n            return false;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            cusip: {\n                'default': 'Please enter a valid CUSIP number'\n            }\n        }\n    });\n\n    FormValidation.Validator.cusip = {\n        /**\n         * Validate a CUSIP number\n         *\n         * @see http://en.wikipedia.org/wiki/CUSIP\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} [options] Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            value = value.toUpperCase();\n            if (!/^[0-9A-Z]{9}$/.test(value)) {\n                return false;\n            }\n\n            var converted = $.map(value.split(''), function(item) {\n                                var code = item.charCodeAt(0);\n                                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\n                                            // Replace A, B, C, ..., Z with 10, 11, ..., 35\n                                            ? (code - 'A'.charCodeAt(0) + 10)\n                                            : item;\n                            }),\n                length    = converted.length,\n                sum       = 0;\n            for (var i = 0; i < length - 1; i++) {\n                var num = parseInt(converted[i], 10);\n                if (i % 2 !== 0) {\n                    num *= 2;\n                }\n                if (num > 9) {\n                    num -= 9;\n                }\n                sum += num;\n            }\n\n            sum = (10 - (sum % 10)) % 10;\n            return sum === parseInt(converted[length - 1], 10);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            cvv: {\n                'default': 'Please enter a valid CVV number'\n            }\n        }\n    });\n\n    FormValidation.Validator.cvv = {\n        html5Attributes: {\n            message: 'message',\n            ccfield: 'creditCardField'\n        },\n\n        /**\n         * Bind the validator on the live change of the credit card field\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - creditCardField: The credit card number field\n         */\n        init: function(validator, $field, options, validatorName) {\n            if (options.creditCardField) {\n                var creditCardField = validator.getFieldElements(options.creditCardField);\n                validator.onLiveChange(creditCardField, 'live_' + validatorName, function() {\n                    var status = validator.getStatus($field, validatorName);\n                    if (status !== validator.STATUS_NOT_VALIDATED) {\n                        validator.revalidateField($field);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Unbind the validator on the live change of the credit card field\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - creditCardField: The credit card number field\n         */\n        destroy: function(validator, $field, options, validatorName) {\n            if (options.creditCardField) {\n                var creditCardField = validator.getFieldElements(options.creditCardField);\n                validator.offLiveChange(creditCardField, 'live_' + validatorName);\n            }\n        },\n\n        /**\n         * Return true if the input value is a valid CVV number.\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - creditCardField: The credit card number field. It can be null\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            if (!/^[0-9]{3,4}$/.test(value)) {\n                return false;\n            }\n\n            if (!options.creditCardField) {\n                return true;\n            }\n\n            // Get the credit card number\n            var creditCard = validator.getFieldElements(options.creditCardField).val();\n            if (creditCard === '') {\n                return true;\n            }\n            \n            creditCard = creditCard.replace(/\\D/g, '');\n\n            // Supported credit card types\n            var cards = {\n                AMERICAN_EXPRESS: {\n                    length: [15],\n                    prefix: ['34', '37']\n                },\n                DINERS_CLUB: {\n                    length: [14],\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\n                },\n                DINERS_CLUB_US: {\n                    length: [16],\n                    prefix: ['54', '55']\n                },\n                DISCOVER: {\n                    length: [16],\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\n                             '62214', '62215', '62216', '62217', '62218', '62219',\n                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',\n                             '62290', '62291', '622920', '622921', '622922', '622923',\n                             '622924', '622925', '644', '645', '646', '647', '648',\n                             '649', '65']\n                },\n                JCB: {\n                    length: [16],\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\n                },\n                LASER: {\n                    length: [16, 17, 18, 19],\n                    prefix: ['6304', '6706', '6771', '6709']\n                },\n                MAESTRO: {\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\n                },\n                MASTERCARD: {\n                    length: [16],\n                    prefix: ['51', '52', '53', '54', '55']\n                },\n                SOLO: {\n                    length: [16, 18, 19],\n                    prefix: ['6334', '6767']\n                },\n                UNIONPAY: {\n                    length: [16, 17, 18, 19],\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\n                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',\n                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',\n                             '622920', '622921', '622922', '622923', '622924', '622925']\n                },\n                VISA: {\n                    length: [16],\n                    prefix: ['4']\n                }\n            };\n            var type, i, creditCardType = null;\n            for (type in cards) {\n                for (i in cards[type].prefix) {\n                    if (creditCard.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]    // Check the prefix\n                        && $.inArray(creditCard.length, cards[type].length) !== -1)                     // and length\n                    {\n                        creditCardType = type;\n                        break;\n                    }\n                }\n            }\n\n            return (creditCardType === null)\n                        ? false\n                        : (('AMERICAN_EXPRESS' === creditCardType) ? (value.length === 4) : (value.length === 3));\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            date: {\n                'default': 'Please enter a valid date',\n                min: 'Please enter a date after %s',\n                max: 'Please enter a date before %s',\n                range: 'Please enter a date in the range %s - %s'\n            }\n        }\n    });\n\n    FormValidation.Validator.date = {\n        html5Attributes: {\n            message: 'message',\n            format: 'format',\n            min: 'min',\n            max: 'max',\n            separator: 'separator'\n        },\n\n        /**\n         * Return true if the input value is valid date\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * - min: the minimum date\n         * - max: the maximum date\n         * - separator: Use to separate the date, month, and year.\n         * By default, it is /\n         * - format: The date format. Default is MM/DD/YYYY\n         * The format can be:\n         *\n         * i) date: Consist of DD, MM, YYYY parts which are separated by the separator option\n         * ii) date and time:\n         * The time can consist of h, m, s parts which are separated by :\n         * ii) date, time and A (indicating AM or PM)\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            options.format = options.format || 'MM/DD/YYYY';\n\n            // #683: Force the format to YYYY-MM-DD as the default browser behaviour when using type=\"date\" attribute\n            if ($field.attr('type') === 'date') {\n                options.format = 'YYYY-MM-DD';\n            }\n\n            var locale     = validator.getLocale(),\n                message    = options.message || FormValidation.I18n[locale].date['default'],\n                formats    = options.format.split(' '),\n                dateFormat = formats[0],\n                timeFormat = (formats.length > 1) ? formats[1] : null,\n                amOrPm     = (formats.length > 2) ? formats[2] : null,\n                sections   = value.split(' '),\n                date       = sections[0],\n                time       = (sections.length > 1) ? sections[1] : null;\n\n            if (formats.length !== sections.length) {\n                return {\n                    valid: false,\n                    message: message\n                };\n            }\n\n            // Determine the separator\n            var separator = options.separator;\n            if (!separator) {\n                separator = (date.indexOf('/') !== -1)\n                            ? '/'\n                            : ((date.indexOf('-') !== -1) ? '-' : ((date.indexOf('.') !== -1) ? '.' : null));\n            }\n            if (separator === null || date.indexOf(separator) === -1) {\n                return {\n                    valid: false,\n                    message: message\n                };\n            }\n\n            // Determine the date\n            date       = date.split(separator);\n            dateFormat = dateFormat.split(separator);\n            if (date.length !== dateFormat.length) {\n                return {\n                    valid: false,\n                    message: message\n                };\n            }\n\n            var year  = date[$.inArray('YYYY', dateFormat)],\n                month = date[$.inArray('MM', dateFormat)],\n                day   = date[$.inArray('DD', dateFormat)];\n\n            if (!year || !month || !day || year.length !== 4) {\n                return {\n                    valid: false,\n                    message: message\n                };\n            }\n\n            // Determine the time\n            var minutes = null, hours = null, seconds = null;\n            if (timeFormat) {\n                timeFormat = timeFormat.split(':');\n                time       = time.split(':');\n\n                if (timeFormat.length !== time.length) {\n                    return {\n                        valid: false,\n                        message: message\n                    };\n                }\n\n                hours   = time.length > 0 ? time[0] : null;\n                minutes = time.length > 1 ? time[1] : null;\n                seconds = time.length > 2 ? time[2] : null;\n\n                if (hours === '' || minutes === '' || seconds === '') {\n                    return {\n                        valid: false,\n                        message: message\n                    };\n                }\n\n                // Validate seconds\n                if (seconds) {\n                    if (isNaN(seconds) || seconds.length > 2) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                    seconds = parseInt(seconds, 10);\n                    if (seconds < 0 || seconds > 60) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                }\n\n                // Validate hours\n                if (hours) {\n                    if (isNaN(hours) || hours.length > 2) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                    hours = parseInt(hours, 10);\n                    if (hours < 0 || hours >= 24 || (amOrPm && hours > 12)) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                }\n\n                // Validate minutes\n                if (minutes) {\n                    if (isNaN(minutes) || minutes.length > 2) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                    minutes = parseInt(minutes, 10);\n                    if (minutes < 0 || minutes > 59) {\n                        return {\n                            valid: false,\n                            message: message\n                        };\n                    }\n                }\n            }\n\n            // Validate day, month, and year\n            var valid     = FormValidation.Helper.date(year, month, day),\n                min       = null,\n                max       = null,\n                minOption = options.min,\n                maxOption = options.max;\n\n            if (minOption) {\n                min = (minOption instanceof Date)\n                    ? minOption\n                    : (this._parseDate(minOption, dateFormat, separator) ||\n                       this._parseDate(validator.getDynamicOption($field, minOption), dateFormat, separator));\n\n                // In order to avoid displaying a date string like \"Mon Dec 08 2014 19:14:12 GMT+0000 (WET)\"\n                minOption = this._formatDate(min, options.format);\n            }\n\n            if (maxOption) {\n                max = (maxOption instanceof Date)\n                    ? maxOption\n                    : (this._parseDate(maxOption, dateFormat, separator) ||\n                       this._parseDate(validator.getDynamicOption($field, maxOption), dateFormat, separator));\n\n                // In order to avoid displaying a date string like \"Mon Dec 08 2014 19:14:12 GMT+0000 (WET)\"\n                maxOption = this._formatDate(max, options.format);\n            }\n\n            date = new Date(year, month -1, day, hours, minutes, seconds);\n\n            switch (true) {\n                case (minOption && !maxOption && valid):\n                    valid   = date.getTime() >= min.getTime();\n                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.min, minOption);\n                    break;\n\n                case (maxOption && !minOption && valid):\n                    valid   = date.getTime() <= max.getTime();\n                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.max, maxOption);\n                    break;\n\n                case (maxOption && minOption && valid):\n                    valid   = date.getTime() <= max.getTime() && date.getTime() >= min.getTime();\n                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.range, [minOption, maxOption]);\n                    break;\n\n                default:\n                    break;\n            }\n\n            return {\n                valid: valid,\n                date: date,\n                message: message\n            };\n        },\n\n        /**\n         * Return a date object after parsing the date string\n         *\n         * @param {Date|String} date   The date string to parse\n         * @param {String} format The date format\n         * The format can be:\n         *   - date: Consist of DD, MM, YYYY parts which are separated by the separator option\n         *   - date and time:\n         *     The time can consist of h, m, s parts which are separated by :\n         * @param {String} separator The separator used to separate the date, month, and year\n         * @returns {Date}\n         */\n        _parseDate: function(date, format, separator) {\n            if (date instanceof Date) {\n                return date;\n            }\n            if (typeof date !== 'string') {\n                return null;\n            }\n\n            // Ensure that the format must consist of year, month and day patterns\n            var yearIndex   = $.inArray('YYYY', format),\n                monthIndex  = $.inArray('MM', format),\n                dayIndex    = $.inArray('DD', format);\n            if (yearIndex === -1 || monthIndex === -1 || dayIndex === -1) {\n                return null;\n            }\n\n            var minutes     = 0, hours = 0, seconds = 0,\n                sections    = date.split(' '),\n                dateSection = sections[0].split(separator);\n            if (dateSection.length < 3) {\n                return null;\n            }\n\n            if (sections.length > 1) {\n                var timeSection = sections[1].split(':');\n                hours   = timeSection.length > 0 ? timeSection[0] : null;\n                minutes = timeSection.length > 1 ? timeSection[1] : null;\n                seconds = timeSection.length > 2 ? timeSection[2] : null;\n            }\n\n            return new Date(dateSection[yearIndex], dateSection[monthIndex] - 1, dateSection[dayIndex],\n                            hours, minutes, seconds);\n        },\n\n        /**\n         * Format date\n         *\n         * @param {Date} date The date object to format\n         * @param {String} format The date format\n         * The format can consist of the following tokens:\n         *      d       Day of the month without leading zeros (1 through 31)\n         *      dd      Day of the month with leading zeros (01 through 31)\n         *      m       Month without leading zeros (1 through 12)\n         *      mm      Month with leading zeros (01 through 12)\n         *      yy      Last two digits of year (for example: 14)\n         *      yyyy    Full four digits of year (for example: 2014)\n         *      h       Hours without leading zeros (1 through 12)\n         *      hh      Hours with leading zeros (01 through 12)\n         *      H       Hours without leading zeros (0 through 23)\n         *      HH      Hours with leading zeros (00 through 23)\n         *      M       Minutes without leading zeros (0 through 59)\n         *      MM      Minutes with leading zeros (00 through 59)\n         *      s       Seconds without leading zeros (0 through 59)\n         *      ss      Seconds with leading zeros (00 through 59)\n         * @returns {String}\n         */\n        _formatDate: function(date, format) {\n            format = format\n                        .replace(/Y/g, 'y')\n                        .replace(/M/g, 'm')\n                        .replace(/D/g, 'd')\n                        .replace(/:m/g, ':M')\n                        .replace(/:mm/g, ':MM')\n                        .replace(/:S/, ':s')\n                        .replace(/:SS/, ':ss');\n\n            var replacer = {\n                d: function(date) {\n                    return date.getDate();\n                },\n                dd: function(date) {\n                    var d = date.getDate();\n                    return (d < 10) ? '0' + d : d;\n                },\n                m: function(date) {\n                    return date.getMonth() + 1;\n                },\n                mm: function(date) {\n                    var m = date.getMonth() + 1;\n                    return m < 10 ? '0' + m : m;\n                },\n                yy: function(date) {\n                    return ('' + date.getFullYear()).substr(2);\n                },\n                yyyy: function(date) {\n                    return date.getFullYear();\n                },\n                h: function(date) {\n                    return date.getHours() % 12 || 12;\n                },\n                hh: function(date) {\n                    var h = date.getHours() % 12 || 12;\n                    return h < 10 ? '0' + h : h;\n                },\n                H: function(date) {\n                    return date.getHours();\n                },\n                HH: function(date) {\n                    var H = date.getHours();\n                    return H < 10 ? '0' + H : H;\n                },\n                M: function(date) {\n                    return date.getMinutes();\n                },\n                MM: function(date) {\n                    var M = date.getMinutes();\n                    return M < 10 ? '0' + M : M;\n                },\n                s: function(date) {\n                    return date.getSeconds();\n                },\n                ss: function(date) {\n                    var s = date.getSeconds();\n                    return s < 10 ? '0' + s : s;\n                }\n            };\n\n            return format.replace(/d{1,4}|m{1,4}|yy(?:yy)?|([HhMs])\\1?|\"[^\"]*\"|'[^']*'/g, function(match) {\n                return replacer[match] ? replacer[match](date) : match.slice(1, match.length - 1);\n            });\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            different: {\n                'default': 'Please enter a different value'\n            }\n        }\n    });\n\n    FormValidation.Validator.different = {\n        html5Attributes: {\n            message: 'message',\n            field: 'field'\n        },\n\n        /**\n         * Bind the validator on the live change of the field to compare with current one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         */\n        init: function(validator, $field, options, validatorName) {\n            var fields = options.field.split(',');\n            for (var i = 0; i < fields.length; i++) {\n                var compareWith = validator.getFieldElements($.trim(fields[i]));\n                validator.onLiveChange(compareWith, 'live_' + validatorName, function() {\n                    var status = validator.getStatus($field, validatorName);\n                    if (status !== validator.STATUS_NOT_VALIDATED) {\n                        validator.revalidateField($field);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Unbind the validator on the live change of the field to compare with current one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         */\n        destroy: function(validator, $field, options, validatorName) {\n            var fields = options.field.split(',');\n            for (var i = 0; i < fields.length; i++) {\n                var compareWith = validator.getFieldElements($.trim(fields[i]));\n                validator.offLiveChange(compareWith, 'live_' + validatorName);\n            }\n        },\n\n        /**\n         * Return true if the input value is different with given field's value\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var fields  = options.field.split(','),\n                isValid = true;\n\n            for (var i = 0; i < fields.length; i++) {\n                var compareWith = validator.getFieldElements($.trim(fields[i]));\n                if (compareWith == null || compareWith.length === 0) {\n                    continue;\n                }\n\n                var compareValue = validator.getFieldValue(compareWith, validatorName);\n                if (value === compareValue) {\n                    isValid = false;\n                } else if (compareValue !== '') {\n                    validator.updateStatus(compareWith, validator.STATUS_VALID, validatorName);\n                }\n            }\n\n            return isValid;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            digits: {\n                'default': 'Please enter only digits'\n            }\n        }\n    });\n\n    FormValidation.Validator.digits = {\n        /**\n         * Return true if the input value contains digits only\n         *\n         * @param {FormValidation.Base} validator Validate plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} [options]\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            return /^\\d+$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            ean: {\n                'default': 'Please enter a valid EAN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.ean = {\n        /**\n         * Validate EAN (International Article Number)\n         *\n         * @see http://en.wikipedia.org/wiki/European_Article_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            if (!/^(\\d{8}|\\d{12}|\\d{13})$/.test(value)) {\n                return false;\n            }\n\n            var length = value.length,\n                sum    = 0,\n                weight = (length === 8) ? [3, 1] : [1, 3];\n            for (var i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\n            }\n            sum = (10 - sum % 10) % 10;\n            return (sum + '' === value.charAt(length - 1));\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            ein: {\n                'default': 'Please enter a valid EIN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.ein = {\n        // The first two digits are called campus\n        // See http://en.wikipedia.org/wiki/Employer_Identification_Number\n        // http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes\n        CAMPUS: {\n            ANDOVER: ['10', '12'],\n            ATLANTA: ['60', '67'],\n            AUSTIN: ['50', '53'],\n            BROOKHAVEN: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\n            CINCINNATI: ['30', '32', '35', '36', '37', '38', '61'],\n            FRESNO: ['15', '24'],\n            KANSAS_CITY: ['40', '44'],\n            MEMPHIS: ['94', '95'],\n            OGDEN: ['80', '90'],\n            PHILADELPHIA: ['33', '39', '41', '42', '43', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\n            INTERNET: ['20', '26', '27', '45', '46', '47'],\n            SMALL_BUSINESS_ADMINISTRATION: ['31']\n        },\n\n        /**\n         * Validate EIN (Employer Identification Number) which is also known as\n         * Federal Employer Identification Number (FEIN) or Federal Tax Identification Number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Object|Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            if (!/^[0-9]{2}-?[0-9]{7}$/.test(value)) {\n                return false;\n            }\n            // Check the first two digits\n            var campus = value.substr(0, 2) + '';\n            for (var key in this.CAMPUS) {\n                if ($.inArray(campus, this.CAMPUS[key]) !== -1) {\n                    return {\n                        valid: true,\n                        campus: key\n                    };\n                }\n            }\n\n            return false;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            emailAddress: {\n                'default': 'Please enter a valid email address'\n            }\n        }\n    });\n\n    FormValidation.Validator.emailAddress = {\n        html5Attributes: {\n            message: 'message',\n            multiple: 'multiple',\n            separator: 'separator'\n        },\n\n        enableByHtml5: function($field) {\n            return ('email' === $field.attr('type'));\n        },\n\n        /**\n         * Return true if and only if the input value is a valid email address\n         *\n         * @param {FormValidation.Base} validator Validate plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} [options]\n         * - multiple: Allow multiple email addresses, separated by a comma or semicolon; default is false.\n         * - separator: Regex for character or characters expected as separator between addresses; default is comma /[,;]/, i.e. comma or semicolon.\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Email address regular expression\n            // http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\n            var emailRegExp   = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n                allowMultiple = options.multiple === true || options.multiple === 'true';\n\n            if (allowMultiple) {\n                var separator = options.separator || /[,;]/,\n                    addresses = this._splitEmailAddresses(value, separator);\n\n                for (var i = 0; i < addresses.length; i++) {\n                    if (!emailRegExp.test(addresses[i])) {\n                        return false;\n                    }\n                }\n\n                return true;\n            } else {\n                return emailRegExp.test(value);\n            }\n        },\n\n        _splitEmailAddresses: function(emailAddresses, separator) {\n            var quotedFragments     = emailAddresses.split(/\"/),\n                quotedFragmentCount = quotedFragments.length,\n                emailAddressArray   = [],\n                nextEmailAddress    = '';\n\n            for (var i = 0; i < quotedFragmentCount; i++) {\n                if (i % 2 === 0) {\n                    var splitEmailAddressFragments     = quotedFragments[i].split(separator),\n                        splitEmailAddressFragmentCount = splitEmailAddressFragments.length;\n\n                    if (splitEmailAddressFragmentCount === 1) {\n                        nextEmailAddress += splitEmailAddressFragments[0];\n                    } else {\n                        emailAddressArray.push(nextEmailAddress + splitEmailAddressFragments[0]);\n\n                        for (var j = 1; j < splitEmailAddressFragmentCount - 1; j++) {\n                            emailAddressArray.push(splitEmailAddressFragments[j]);\n                        }\n                        nextEmailAddress = splitEmailAddressFragments[splitEmailAddressFragmentCount - 1];\n                    }\n                } else {\n                    nextEmailAddress += '\"' + quotedFragments[i];\n                    if (i < quotedFragmentCount - 1) {\n                        nextEmailAddress += '\"';\n                    }\n                }\n            }\n\n            emailAddressArray.push(nextEmailAddress);\n            return emailAddressArray;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            file: {\n                'default': 'Please choose a valid file'\n            }\n        }\n    });\n\n    FormValidation.Validator.file = {\n        html5Attributes: {\n            extension: 'extension',\n            maxfiles: 'maxFiles',\n            minfiles: 'minFiles',\n            maxsize: 'maxSize',\n            minsize: 'minSize',\n            maxtotalsize: 'maxTotalSize',\n            mintotalsize: 'minTotalSize',\n            message: 'message',\n            type: 'type'\n        },\n\n        /**\n         * Validate upload file. Use HTML 5 API if the browser supports\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - extension: The allowed extensions, separated by a comma\n         * - maxFiles: The maximum number of files\n         * - minFiles: The minimum number of files\n         * - maxSize: The maximum size in bytes\n         * - minSize: The minimum size in bytes\n         * - maxTotalSize: The maximum size in bytes for all files\n         * - minTotalSize: The minimum size in bytes for all files\n         * - message: The invalid message\n         * - type: The allowed MIME type, separated by a comma\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var ext,\n                extensions = options.extension ? options.extension.toLowerCase().split(',') : null,\n                types      = options.type      ? options.type.toLowerCase().split(',')      : null,\n                html5      = (window.File && window.FileList && window.FileReader);\n\n            if (html5) {\n                // Get FileList instance\n                var files     = $field.get(0).files,\n                    total     = files.length,\n                    totalSize = 0;\n\n                if ((options.maxFiles && total > parseInt(options.maxFiles, 10))        // Check the maxFiles\n                    || (options.minFiles && total < parseInt(options.minFiles, 10)))    // Check the minFiles\n                {\n                    return false;\n                }\n\n                for (var i = 0; i < total; i++) {\n                    totalSize += files[i].size;\n                    ext        = files[i].name.substr(files[i].name.lastIndexOf('.') + 1);\n\n                    if ((options.minSize && files[i].size < parseInt(options.minSize, 10))                      // Check the minSize\n                        || (options.maxSize && files[i].size > parseInt(options.maxSize, 10))                   // Check the maxSize\n                        || (extensions && $.inArray(ext.toLowerCase(), extensions) === -1)                      // Check file extension\n                        || (files[i].type && types && $.inArray(files[i].type.toLowerCase(), types) === -1))    // Check file type\n                    {\n                        return false;\n                    }\n                }\n\n                if ((options.maxTotalSize && totalSize > parseInt(options.maxTotalSize, 10))        // Check the maxTotalSize\n                    || (options.minTotalSize && totalSize < parseInt(options.minTotalSize, 10)))    // Check the minTotalSize\n                {\n                    return false;\n                }\n            } else {\n                // Check file extension\n                ext = value.substr(value.lastIndexOf('.') + 1);\n                if (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            greaterThan: {\n                'default': 'Please enter a value greater than or equal to %s',\n                notInclusive: 'Please enter a value greater than %s'\n            }\n        }\n    });\n\n    FormValidation.Validator.greaterThan = {\n        html5Attributes: {\n            message: 'message',\n            value: 'value',\n            inclusive: 'inclusive'\n        },\n\n        enableByHtml5: function($field) {\n            var type = $field.attr('type'),\n                min  = $field.attr('min');\n            if (min && type !== 'date') {\n                return {\n                    value: min\n                };\n            }\n\n            return false;\n        },\n\n        /**\n         * Return true if the input value is greater than or equals to given number\n         *\n         * @param {FormValidation.Base} validator Validate plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - value: Define the number to compare with. It can be\n         *      - A number\n         *      - Name of field which its value defines the number\n         *      - Name of callback function that returns the number\n         *      - A callback function that returns the number\n         *\n         * - inclusive [optional]: Can be true or false. Default is true\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n            \n            value = this._format(value);\n\n            var locale         = validator.getLocale(),\n                compareTo      = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value),\n                compareToValue = this._format(compareTo);\n\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\n                    ? {\n                        valid: $.isNumeric(value) && parseFloat(value) >= compareToValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].greaterThan['default'], compareTo)\n                    }\n                    : {\n                        valid: $.isNumeric(value) && parseFloat(value) > compareToValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].greaterThan.notInclusive, compareTo)\n                    };\n        },\n\n        _format: function(value) {\n            return (value + '').replace(',', '.');\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            grid: {\n                'default': 'Please enter a valid GRId number'\n            }\n        }\n    });\n\n    FormValidation.Validator.grid = {\n        /**\n         * Validate GRId (Global Release Identifier)\n         *\n         * @see http://en.wikipedia.org/wiki/Global_Release_Identifier\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            value = value.toUpperCase();\n            if (!/^[GRID:]*([0-9A-Z]{2})[-\\s]*([0-9A-Z]{5})[-\\s]*([0-9A-Z]{10})[-\\s]*([0-9A-Z]{1})$/g.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\s/g, '').replace(/-/g, '');\n            if ('GRID:' === value.substr(0, 5)) {\n                value = value.substr(5);\n            }\n            return FormValidation.Helper.mod37And36(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            hex: {\n                'default': 'Please enter a valid hexadecimal number'\n            }\n        }\n    });\n\n    FormValidation.Validator.hex = {\n        /**\n         * Return true if and only if the input value is a valid hexadecimal number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            return /^[0-9a-fA-F]+$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            iban: {\n                'default': 'Please enter a valid IBAN number',\n                country: 'Please enter a valid IBAN number in %s',\n                countries: {\n                    AD: 'Andorra',\n                    AE: 'United Arab Emirates',\n                    AL: 'Albania',\n                    AO: 'Angola',\n                    AT: 'Austria',\n                    AZ: 'Azerbaijan',\n                    BA: 'Bosnia and Herzegovina',\n                    BE: 'Belgium',\n                    BF: 'Burkina Faso',\n                    BG: 'Bulgaria',\n                    BH: 'Bahrain',\n                    BI: 'Burundi',\n                    BJ: 'Benin',\n                    BR: 'Brazil',\n                    CH: 'Switzerland',\n                    CI: 'Ivory Coast',\n                    CM: 'Cameroon',\n                    CR: 'Costa Rica',\n                    CV: 'Cape Verde',\n                    CY: 'Cyprus',\n                    CZ: 'Czech Republic',\n                    DE: 'Germany',\n                    DK: 'Denmark',\n                    DO: 'Dominican Republic',\n                    DZ: 'Algeria',\n                    EE: 'Estonia',\n                    ES: 'Spain',\n                    FI: 'Finland',\n                    FO: 'Faroe Islands',\n                    FR: 'France',\n                    GB: 'United Kingdom',\n                    GE: 'Georgia',\n                    GI: 'Gibraltar',\n                    GL: 'Greenland',\n                    GR: 'Greece',\n                    GT: 'Guatemala',\n                    HR: 'Croatia',\n                    HU: 'Hungary',\n                    IE: 'Ireland',\n                    IL: 'Israel',\n                    IR: 'Iran',\n                    IS: 'Iceland',\n                    IT: 'Italy',\n                    JO: 'Jordan',\n                    KW: 'Kuwait',\n                    KZ: 'Kazakhstan',\n                    LB: 'Lebanon',\n                    LI: 'Liechtenstein',\n                    LT: 'Lithuania',\n                    LU: 'Luxembourg',\n                    LV: 'Latvia',\n                    MC: 'Monaco',\n                    MD: 'Moldova',\n                    ME: 'Montenegro',\n                    MG: 'Madagascar',\n                    MK: 'Macedonia',\n                    ML: 'Mali',\n                    MR: 'Mauritania',\n                    MT: 'Malta',\n                    MU: 'Mauritius',\n                    MZ: 'Mozambique',\n                    NL: 'Netherlands',\n                    NO: 'Norway',\n                    PK: 'Pakistan',\n                    PL: 'Poland',\n                    PS: 'Palestine',\n                    PT: 'Portugal',\n                    QA: 'Qatar',\n                    RO: 'Romania',\n                    RS: 'Serbia',\n                    SA: 'Saudi Arabia',\n                    SE: 'Sweden',\n                    SI: 'Slovenia',\n                    SK: 'Slovakia',\n                    SM: 'San Marino',\n                    SN: 'Senegal',\n                    TL: 'East Timor',\n                    TN: 'Tunisia',\n                    TR: 'Turkey',\n                    VG: 'Virgin Islands, British',\n                    XK: 'Republic of Kosovo'\n                }\n            }\n        }\n    });\n\n    FormValidation.Validator.iban = {\n        html5Attributes: {\n            message: 'message',\n            country: 'country',\n            sepa: 'sepa'\n        },\n\n        // http://www.swift.com/dsp/resources/documents/IBAN_Registry.pdf\n        // http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\n        REGEX: {\n            AD: 'AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}',                       // Andorra\n            AE: 'AE[0-9]{2}[0-9]{3}[0-9]{16}',                                  // United Arab Emirates\n            AL: 'AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}',                               // Albania\n            AO: 'AO[0-9]{2}[0-9]{21}',                                          // Angola\n            AT: 'AT[0-9]{2}[0-9]{5}[0-9]{11}',                                  // Austria\n            AZ: 'AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}',                               // Azerbaijan\n            BA: 'BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}',                   // Bosnia and Herzegovina\n            BE: 'BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}',                           // Belgium\n            BF: 'BF[0-9]{2}[0-9]{23}',                                          // Burkina Faso\n            BG: 'BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}',                // Bulgaria\n            BH: 'BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}',                               // Bahrain\n            BI: 'BI[0-9]{2}[0-9]{12}',                                          // Burundi\n            BJ: 'BJ[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Benin\n            BR: 'BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]',             // Brazil\n            CH: 'CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                               // Switzerland\n            CI: 'CI[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Ivory Coast\n            CM: 'CM[0-9]{2}[0-9]{23}',                                          // Cameroon\n            CR: 'CR[0-9]{2}[0-9]{3}[0-9]{14}',                                  // Costa Rica\n            CV: 'CV[0-9]{2}[0-9]{21}',                                          // Cape Verde\n            CY: 'CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}',                       // Cyprus\n            CZ: 'CZ[0-9]{2}[0-9]{20}',                                          // Czech Republic\n            DE: 'DE[0-9]{2}[0-9]{8}[0-9]{10}',                                  // Germany\n            DK: 'DK[0-9]{2}[0-9]{14}',                                          // Denmark\n            DO: 'DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}',                               // Dominican Republic\n            DZ: 'DZ[0-9]{2}[0-9]{20}',                                          // Algeria\n            EE: 'EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}',                  // Estonia\n            ES: 'ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}',          // Spain\n            FI: 'FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}',                           // Finland\n            FO: 'FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                           // Faroe Islands\n            FR: 'FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',               // France\n            GB: 'GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                           // United Kingdom\n            GE: 'GE[0-9]{2}[A-Z]{2}[0-9]{16}',                                  // Georgia\n            GI: 'GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}',                               // Gibraltar\n            GL: 'GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                           // Greenland\n            GR: 'GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}',                       // Greece\n            GT: 'GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}',                            // Guatemala\n            HR: 'HR[0-9]{2}[0-9]{7}[0-9]{10}',                                  // Croatia\n            HU: 'HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}',          // Hungary\n            IE: 'IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                           // Ireland\n            IL: 'IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}',                          // Israel\n            IR: 'IR[0-9]{2}[0-9]{22}',                                          // Iran\n            IS: 'IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}',                  // Iceland\n            IT: 'IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',               // Italy\n            JO: 'JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}',                 // Jordan\n            KW: 'KW[0-9]{2}[A-Z]{4}[0-9]{22}',                                  // Kuwait\n            KZ: 'KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                               // Kazakhstan\n            LB: 'LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}',                               // Lebanon\n            LI: 'LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                               // Liechtenstein\n            LT: 'LT[0-9]{2}[0-9]{5}[0-9]{11}',                                  // Lithuania\n            LU: 'LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                               // Luxembourg\n            LV: 'LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}',                               // Latvia\n            MC: 'MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',               // Monaco\n            MD: 'MD[0-9]{2}[A-Z0-9]{20}',                                       // Moldova\n            ME: 'ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                          // Montenegro\n            MG: 'MG[0-9]{2}[0-9]{23}',                                          // Madagascar\n            MK: 'MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}',                       // Macedonia\n            ML: 'ML[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Mali\n            MR: 'MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}',                        // Mauritania\n            MT: 'MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}',                       // Malta\n            MU: 'MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}',  // Mauritius\n            MZ: 'MZ[0-9]{2}[0-9]{21}',                                          // Mozambique\n            NL: 'NL[0-9]{2}[A-Z]{4}[0-9]{10}',                                  // Netherlands\n            NO: 'NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}',                           // Norway\n            PK: 'PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                               // Pakistan\n            PL: 'PL[0-9]{2}[0-9]{8}[0-9]{16}',                                  // Poland\n            PS: 'PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                               // Palestinian\n            PT: 'PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}',                  // Portugal\n            QA: 'QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                               // Qatar\n            RO: 'RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                               // Romania\n            RS: 'RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                          // Serbia\n            SA: 'SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}',                               // Saudi Arabia\n            SE: 'SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}',                          // Sweden\n            SI: 'SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}',                           // Slovenia\n            SK: 'SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}',                          // Slovakia\n            SM: 'SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',               // San Marino\n            SN: 'SN[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Senegal\n            TL: 'TL38[0-9]{3}[0-9]{14}[0-9]{2}',                                // East Timor\n            TN: 'TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Tunisia\n            TR: 'TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}',                    // Turkey\n            VG: 'VG[0-9]{2}[A-Z]{4}[0-9]{16}',                                  // Virgin Islands, British\n            XK: 'XK[0-9]{2}[0-9]{4}[0-9]{10}[0-9]{2}'                           // Republic of Kosovo\n        },\n\n        // List of SEPA country codes\n        SEPA_COUNTRIES: [\n            'AT', 'BE', 'BG', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES',\n            'FI', 'FR', 'GB', 'GI', 'GR', 'HR', 'HU', 'IE', 'IS', 'IT',\n            'LI', 'LT', 'LU', 'LV', 'MC', 'MT', 'NL', 'NO', 'PL', 'PT',\n            'RO', 'SE', 'SI', 'SK', 'SM'\n        ],\n\n        /**\n         * Validate an International Bank Account Number (IBAN)\n         * To test it, take the sample IBAN from\n         * http://www.nordea.com/Our+services/International+products+and+services/Cash+Management/IBAN+countries/908462.html\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * - country: The ISO 3166-1 country code. It can be\n         *      - A country code\n         *      - Name of field which its value defines the country code\n         *      - Name of callback function that returns the country code\n         *      - A callback function that returns the country code\n         * - sepa: Set it to true (false) to indicate that the IBAN number must be (not be) from SEPA countries\n         * By default, this option is not defined\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            value = value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();\n            var country = options.country;\n            if (!country) {\n                country = value.substr(0, 2);\n            } else if (typeof country !== 'string' || !this.REGEX[country]) {\n                // Determine the country code\n                country = validator.getDynamicOption($field, country);\n            }\n\n            var locale = validator.getLocale();\n            if (!this.REGEX[country]) {\n                return false;\n            }\n\n            // Check whether or not the sepa option is enabled\n            if (typeof options.sepa !== undefined) {\n                var isSepaCountry = $.inArray(country, this.SEPA_COUNTRIES) !== -1;\n                if (((options.sepa === 'true' || options.sepa === true) && !isSepaCountry)\n                    || ((options.sepa === 'false' || options.sepa === false) && isSepaCountry))\n                {\n                    return false;\n                }\n            }\n\n            if (!(new RegExp('^' + this.REGEX[country] + '$')).test(value)) {\n                return {\n                    valid: false,\n                    message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].iban.country, FormValidation.I18n[locale].iban.countries[country])\n                };\n            }\n\n            value = value.substr(4) + value.substr(0, 4);\n            value = $.map(value.split(''), function(n) {\n                var code = n.charCodeAt(0);\n                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\n                        // Replace A, B, C, ..., Z with 10, 11, ..., 35\n                        ? (code - 'A'.charCodeAt(0) + 10)\n                        : n;\n            });\n            value = value.join('');\n\n            var temp   = parseInt(value.substr(0, 1), 10),\n                length = value.length;\n            for (var i = 1; i < length; ++i) {\n                temp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;\n            }\n\n            return {\n                valid: (temp === 1),\n                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].iban.country, FormValidation.I18n[locale].iban.countries[country])\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            id: {\n                'default': 'Please enter a valid identification number',\n                country: 'Please enter a valid identification number in %s',\n                countries: {\n                    BA: 'Bosnia and Herzegovina',\n                    BG: 'Bulgaria',\n                    BR: 'Brazil',\n                    CH: 'Switzerland',\n                    CL: 'Chile',\n                    CN: 'China',\n                    CZ: 'Czech Republic',\n                    DK: 'Denmark',\n                    EE: 'Estonia',\n                    ES: 'Spain',\n                    FI: 'Finland',\n                    HR: 'Croatia',\n                    IE: 'Ireland',\n                    IS: 'Iceland',\n                    LT: 'Lithuania',\n                    LV: 'Latvia',\n                    ME: 'Montenegro',\n                    MK: 'Macedonia',\n                    NL: 'Netherlands',\n                    PL: 'Poland',\n                    RO: 'Romania',\n                    RS: 'Serbia',\n                    SE: 'Sweden',\n                    SI: 'Slovenia',\n                    SK: 'Slovakia',\n                    SM: 'San Marino',\n                    TH: 'Thailand',\n                    TR: 'Turkey',\n                    ZA: 'South Africa'\n                }\n            }\n        }\n    });\n\n    FormValidation.Validator.id = {\n        html5Attributes: {\n            message: 'message',\n            country: 'country'\n        },\n\n        // Supported country codes\n        COUNTRY_CODES: [\n            'BA', 'BG', 'BR', 'CH', 'CL', 'CN', 'CZ', 'DK', 'EE', 'ES', 'FI', 'HR', 'IE', 'IS', 'LT', 'LV', 'ME', 'MK', 'NL',\n            'PL', 'RO', 'RS', 'SE', 'SI', 'SK', 'SM', 'TH', 'TR', 'ZA'\n        ],\n\n        /**\n         * Validate identification number in different countries\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - country: The ISO 3166-1 country code. It can be\n         *      - One of country code defined in COUNTRY_CODES\n         *      - Name of field which its value defines the country code\n         *      - Name of callback function that returns the country code\n         *      - A callback function that returns the country code\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var locale  = validator.getLocale(),\n                country = options.country;\n            if (!country) {\n                country = value.substr(0, 2);\n            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\n                // Determine the country code\n                country = validator.getDynamicOption($field, country);\n            }\n\n            if ($.inArray(country, this.COUNTRY_CODES) === -1) {\n                return true;\n            }\n\n            var method = ['_', country.toLowerCase()].join(''),\n                result = this[method](value);\n            result         = (result === true || result === false) ? { valid: result } : result;\n            result.message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].id.country, FormValidation.I18n[locale].id.countries[country.toUpperCase()]);\n\n            return result;\n        },\n\n        /**\n         * Validate Unique Master Citizen Number which uses in\n         * - Bosnia and Herzegovina (country code: BA)\n         * - Macedonia (MK)\n         * - Montenegro (ME)\n         * - Serbia (RS)\n         * - Slovenia (SI)\n         *\n         * @see http://en.wikipedia.org/wiki/Unique_Master_Citizen_Number\n         * @param {String} value The ID\n         * @param {String} countryCode The ISO country code, can be BA, MK, ME, RS, SI\n         * @returns {Boolean}\n         */\n        _validateJMBG: function(value, countryCode) {\n            if (!/^\\d{13}$/.test(value)) {\n                return false;\n            }\n            var day   = parseInt(value.substr(0, 2), 10),\n                month = parseInt(value.substr(2, 2), 10),\n                year  = parseInt(value.substr(4, 3), 10),\n                rr    = parseInt(value.substr(7, 2), 10),\n                k     = parseInt(value.substr(12, 1), 10);\n\n            // Validate date of birth\n            // FIXME: Validate the year of birth\n            if (day > 31 || month > 12) {\n                return false;\n            }\n\n            // Validate checksum\n            var sum = 0;\n            for (var i = 0; i < 6; i++) {\n                sum += (7 - i) * (parseInt(value.charAt(i), 10) + parseInt(value.charAt(i + 6), 10));\n            }\n            sum = 11 - sum % 11;\n            if (sum === 10 || sum === 11) {\n                sum = 0;\n            }\n            if (sum !== k) {\n                return false;\n            }\n\n            // Validate political region\n            // rr is the political region of birth, which can be in ranges:\n            // 10-19: Bosnia and Herzegovina\n            // 20-29: Montenegro\n            // 30-39: Croatia (not used anymore)\n            // 41-49: Macedonia\n            // 50-59: Slovenia (only 50 is used)\n            // 70-79: Central Serbia\n            // 80-89: Serbian province of Vojvodina\n            // 90-99: Kosovo\n            switch (countryCode.toUpperCase()) {\n                case 'BA':\n                    return (10 <= rr && rr <= 19);\n                case 'MK':\n                    return (41 <= rr && rr <= 49);\n                case 'ME':\n                    return (20 <= rr && rr <= 29);\n                case 'RS':\n                    return (70 <= rr && rr <= 99);\n                case 'SI':\n                    return (50 <= rr && rr <= 59);\n                default:\n                    return true;\n            }\n        },\n\n        _ba: function(value) {\n            return this._validateJMBG(value, 'BA');\n        },\n        _mk: function(value) {\n            return this._validateJMBG(value, 'MK');\n        },\n        _me: function(value) {\n            return this._validateJMBG(value, 'ME');\n        },\n        _rs: function(value) {\n            return this._validateJMBG(value, 'RS');\n        },\n\n        /**\n         * Examples: 0101006500006\n         */\n        _si: function(value) {\n            return this._validateJMBG(value, 'SI');\n        },\n\n        /**\n         * Validate Bulgarian national identification number (EGN)\n         *\n         * @see http://en.wikipedia.org/wiki/Uniform_civil_number\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _bg: function(value) {\n            if (!/^\\d{10}$/.test(value) && !/^\\d{6}\\s\\d{3}\\s\\d{1}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\s/g, '');\n            // Check the birth date\n            var year  = parseInt(value.substr(0, 2), 10) + 1900,\n                month = parseInt(value.substr(2, 2), 10),\n                day   = parseInt(value.substr(4, 2), 10);\n            if (month > 40) {\n                year += 100;\n                month -= 40;\n            } else if (month > 20) {\n                year -= 100;\n                month -= 20;\n            }\n\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n            for (var i = 0; i < 9; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = (sum % 11) % 10;\n            return (sum + '' === value.substr(9, 1));\n        },\n\n        /**\n         * Validate Brazilian national identification number (CPF)\n         *\n         * @see http://en.wikipedia.org/wiki/Cadastro_de_Pessoas_F%C3%ADsicas\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _br: function(value) {\n            value = value.replace(/\\D/g, '');\n\n            if (!/^\\d{11}$/.test(value) || /^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(value)) {\n                return false;\n            }\n\n            var d1 = 0;\n            for (var i = 0; i < 9; i++) {\n                d1 += (10 - i) * parseInt(value.charAt(i), 10);\n            }\n            d1 = 11 - d1 % 11;\n            if (d1 === 10 || d1 === 11) {\n                d1 = 0;\n            }\n            if (d1 + '' !== value.charAt(9)) {\n                return false;\n            }\n\n            var d2 = 0;\n            for (i = 0; i < 10; i++) {\n                d2 += (11 - i) * parseInt(value.charAt(i), 10);\n            }\n            d2 = 11 - d2 % 11;\n            if (d2 === 10 || d2 === 11) {\n                d2 = 0;\n            }\n\n            return (d2 + '' === value.charAt(10));\n        },\n\n        /**\n         * Validate Swiss Social Security Number (AHV-Nr/No AVS)\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Switzerland\n         * @see http://www.bsv.admin.ch/themen/ahv/00011/02185/index.html?lang=de\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _ch: function(value) {\n            if (!/^756[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{2}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\D/g, '').substr(3);\n            var length = value.length,\n                sum    = 0,\n                weight = (length === 8) ? [3, 1] : [1, 3];\n            for (var i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\n            }\n            sum = 10 - sum % 10;\n            return (sum + '' === value.charAt(length - 1));\n        },\n\n        /**\n         * Validate Chilean national identification number (RUN/RUT)\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Chile\n         * @see https://palena.sii.cl/cvc/dte/ee_empresas_emisoras.html for samples\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _cl: function(value) {\n            if (!/^\\d{7,8}[-]{0,1}[0-9K]$/i.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\-/g, '');\n            while (value.length < 9) {\n                value = '0' + value;\n            }\n            var sum    = 0,\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = 11 - sum % 11;\n            if (sum === 11) {\n                sum = 0;\n            } else if (sum === 10) {\n                sum = 'K';\n            }\n            return sum + '' === value.charAt(8).toUpperCase();\n        },\n\n        /**\n         * Validate Chinese citizen identification number\n         *\n         * Rules:\n         * - For current 18-digit system (since 1st Oct 1999, defined by GB11643—1999 national standard):\n         *     - Digit 0-5: Must be a valid administrative division code of China PR.\n         *     - Digit 6-13: Must be a valid YYYYMMDD date of birth. A future date is tolerated.\n         *     - Digit 14-16: Order code, any integer.\n         *     - Digit 17: An ISO 7064:1983, MOD 11-2 checksum.\n         *       Both upper/lower case of X are tolerated.\n         * - For deprecated 15-digit system:\n         *     - Digit 0-5: Must be a valid administrative division code of China PR.\n         *     - Digit 6-11: Must be a valid YYMMDD date of birth, indicating the year of 19XX.\n         *     - Digit 12-14: Order code, any integer.\n         * Lists of valid administrative division codes of China PR can be seen here:\n         * <http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/>\n         * Published and maintained by National Bureau of Statistics of China PR.\n         * NOTE: Current and deprecated codes MUST BOTH be considered valid.\n         * Many Chinese citizens born in once existed administrative divisions!\n         *\n         * @see http://en.wikipedia.org/wiki/Resident_Identity_Card#Identity_card_number\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _cn: function(value) {\n            // Basic format check (18 or 15 digits, considering X in checksum)\n            value = value.trim();\n            if (!/^\\d{15}$/.test(value) && !/^\\d{17}[\\dXx]{1}$/.test(value)) {\n                return false;\n            }\n            \n            // Check China PR Administrative division code\n            var adminDivisionCodes = {\n                11: {\n                    0: [0],\n                    1: [[0, 9], [11, 17]],\n                    2: [0, 28, 29]\n                },\n                12: {\n                    0: [0],\n                    1: [[0, 16]],\n                    2: [0, 21, 23, 25]\n                },\n                13: {\n                    0: [0],\n                    1: [[0, 5], 7, 8, 21, [23, 33], [81, 85]],\n                    2: [[0, 5], [7, 9], [23, 25], 27, 29, 30, 81, 83],\n                    3: [[0, 4], [21, 24]],\n                    4: [[0, 4], 6, 21, [23, 35], 81],\n                    5: [[0, 3], [21, 35], 81, 82],\n                    6: [[0, 4], [21, 38], [81, 84]],\n                    7: [[0, 3], 5, 6, [21, 33]],\n                    8: [[0, 4], [21, 28]],\n                    9: [[0, 3], [21, 30], [81, 84]],\n                    10: [[0, 3], [22, 26], 28, 81, 82],\n                    11: [[0, 2], [21, 28], 81, 82]\n                },\n                14: {\n                    0: [0],\n                    1: [0, 1, [5, 10], [21, 23], 81],\n                    2: [[0, 3], 11, 12, [21, 27]],\n                    3: [[0, 3], 11, 21, 22],\n                    4: [[0, 2], 11, 21, [23, 31], 81],\n                    5: [[0, 2], 21, 22, 24, 25, 81],\n                    6: [[0, 3], [21, 24]],\n                    7: [[0, 2], [21, 29], 81],\n                    8: [[0, 2], [21, 30], 81, 82],\n                    9: [[0, 2], [21, 32], 81],\n                    10: [[0, 2], [21, 34], 81, 82],\n                    11: [[0, 2], [21, 30], 81, 82],\n                    23: [[0, 3], 22, 23, [25, 30], 32, 33]\n                },\n                15: {\n                    0: [0],\n                    1: [[0, 5], [21, 25]],\n                    2: [[0, 7], [21, 23]],\n                    3: [[0, 4]],\n                    4: [[0, 4], [21, 26], [28, 30]],\n                    5: [[0, 2], [21, 26], 81],\n                    6: [[0, 2], [21, 27]],\n                    7: [[0, 3], [21, 27], [81, 85]],\n                    8: [[0, 2], [21, 26]],\n                    9: [[0, 2], [21, 29], 81],\n                    22: [[0, 2], [21, 24]],\n                    25: [[0, 2], [22, 31]],\n                    26: [[0, 2], [24, 27], [29, 32], 34],\n                    28: [0, 1, [22, 27]],\n                    29: [0, [21, 23]]\n                },\n                21: {\n                    0: [0],\n                    1: [[0, 6], [11, 14], [22, 24], 81],\n                    2: [[0, 4], [11, 13], 24, [81, 83]],\n                    3: [[0, 4], 11, 21, 23, 81],\n                    4: [[0, 4], 11, [21, 23]],\n                    5: [[0, 5], 21, 22],\n                    6: [[0, 4], 24, 81, 82],\n                    7: [[0, 3], 11, 26, 27, 81, 82],\n                    8: [[0, 4], 11, 81, 82],\n                    9: [[0, 5], 11, 21, 22],\n                    10: [[0, 5], 11, 21, 81],\n                    11: [[0, 3], 21, 22],\n                    12: [[0, 2], 4, 21, 23, 24, 81, 82],\n                    13: [[0, 3], 21, 22, 24, 81, 82],\n                    14: [[0, 4], 21, 22, 81]\n                },\n                22: {\n                    0: [0],\n                    1: [[0, 6], 12, 22, [81, 83]],\n                    2: [[0, 4], 11, 21, [81, 84]],\n                    3: [[0, 3], 22, 23, 81, 82],\n                    4: [[0, 3], 21, 22],\n                    5: [[0, 3], 21, 23, 24, 81, 82],\n                    6: [[0, 2], 4, 5, [21, 23], 25, 81],\n                    7: [[0, 2], [21, 24], 81],\n                    8: [[0, 2], 21, 22, 81, 82],\n                    24: [[0, 6], 24, 26]\n                },\n                23: {\n                    0: [0],\n                    1: [[0, 12], 21, [23, 29], [81, 84]],\n                    2: [[0, 8], 21, [23, 25], 27, [29, 31], 81],\n                    3: [[0, 7], 21, 81, 82],\n                    4: [[0, 7], 21, 22],\n                    5: [[0, 3], 5, 6, [21, 24]],\n                    6: [[0, 6], [21, 24]],\n                    7: [[0, 16], 22, 81],\n                    8: [[0, 5], 11, 22, 26, 28, 33, 81, 82],\n                    9: [[0, 4], 21],\n                    10: [[0, 5], 24, 25, 81, [83, 85]],\n                    11: [[0, 2], 21, 23, 24, 81, 82],\n                    12: [[0, 2], [21, 26], [81, 83]],\n                    27: [[0, 4], [21, 23]]\n                },\n                31: {\n                    0: [0],\n                    1: [0, 1, [3, 10], [12, 20]],\n                    2: [0, 30]\n                },\n                32: {\n                    0: [0],\n                    1: [[0, 7], 11, [13, 18], 24, 25],\n                    2: [[0, 6], 11, 81, 82],\n                    3: [[0, 5], 11, 12, [21, 24], 81, 82],\n                    4: [[0, 2], 4, 5, 11, 12, 81, 82],\n                    5: [[0, 9], [81, 85]],\n                    6: [[0, 2], 11, 12, 21, 23, [81, 84]],\n                    7: [0, 1, 3, 5, 6, [21, 24]],\n                    8: [[0, 4], 11, 26, [29, 31]],\n                    9: [[0, 3], [21, 25], 28, 81, 82],\n                    10: [[0, 3], 11, 12, 23, 81, 84, 88],\n                    11: [[0, 2], 11, 12, [81, 83]],\n                    12: [[0, 4], [81, 84]],\n                    13: [[0, 2], 11, [21, 24]]\n                },\n                33: {\n                    0: [0],\n                    1: [[0, 6], [8, 10], 22, 27, 82, 83, 85],\n                    2: [0, 1, [3, 6], 11, 12, 25, 26, [81, 83]],\n                    3: [[0, 4], 22, 24, [26, 29], 81, 82],\n                    4: [[0, 2], 11, 21, 24, [81, 83]],\n                    5: [[0, 3], [21, 23]],\n                    6: [[0, 2], 21, 24, [81, 83]],\n                    7: [[0, 3], 23, 26, 27, [81, 84]],\n                    8: [[0, 3], 22, 24, 25, 81],\n                    9: [[0, 3], 21, 22],\n                    10: [[0, 4], [21, 24], 81, 82],\n                    11: [[0, 2], [21, 27], 81]\n                },\n                34: {\n                    0: [0],\n                    1: [[0, 4], 11, [21, 24], 81],\n                    2: [[0, 4], 7, 8, [21, 23], 25],\n                    3: [[0, 4], 11, [21, 23]],\n                    4: [[0, 6], 21],\n                    5: [[0, 4], 6, [21, 23]],\n                    6: [[0, 4], 21],\n                    7: [[0, 3], 11, 21],\n                    8: [[0, 3], 11, [22, 28], 81],\n                    10: [[0, 4], [21, 24]],\n                    11: [[0, 3], 22, [24, 26], 81, 82],\n                    12: [[0, 4], 21, 22, 25, 26, 82],\n                    13: [[0, 2], [21, 24]],\n                    14: [[0, 2], [21, 24]],\n                    15: [[0, 3], [21, 25]],\n                    16: [[0, 2], [21, 23]],\n                    17: [[0, 2], [21, 23]],\n                    18: [[0, 2], [21, 25], 81]\n                },\n                35: {\n                    0: [0],\n                    1: [[0, 5], 11, [21, 25], 28, 81, 82],\n                    2: [[0, 6], [11, 13]],\n                    3: [[0, 5], 22],\n                    4: [[0, 3], 21, [23, 30], 81],\n                    5: [[0, 5], 21, [24, 27], [81, 83]],\n                    6: [[0, 3], [22, 29], 81],\n                    7: [[0, 2], [21, 25], [81, 84]],\n                    8: [[0, 2], [21, 25], 81],\n                    9: [[0, 2], [21, 26], 81, 82]\n                },\n                36: {\n                    0: [0],\n                    1: [[0, 5], 11, [21, 24]],\n                    2: [[0, 3], 22, 81],\n                    3: [[0, 2], 13, [21, 23]],\n                    4: [[0, 3], 21, [23, 30], 81, 82],\n                    5: [[0, 2], 21],\n                    6: [[0, 2], 22, 81],\n                    7: [[0, 2], [21, 35], 81, 82],\n                    8: [[0, 3], [21, 30], 81],\n                    9: [[0, 2], [21, 26], [81, 83]],\n                    10: [[0, 2], [21, 30]],\n                    11: [[0, 2], [21, 30], 81]\n                },\n                37: {\n                    0: [0],\n                    1: [[0, 5], 12, 13, [24, 26], 81],\n                    2: [[0, 3], 5, [11, 14], [81, 85]],\n                    3: [[0, 6], [21, 23]],\n                    4: [[0, 6], 81],\n                    5: [[0, 3], [21, 23]],\n                    6: [[0, 2], [11, 13], 34, [81, 87]],\n                    7: [[0, 5], 24, 25, [81, 86]],\n                    8: [[0, 2], 11, [26, 32], [81, 83]],\n                    9: [[0, 3], 11, 21, 23, 82, 83],\n                    10: [[0, 2], [81, 83]],\n                    11: [[0, 3], 21, 22],\n                    12: [[0, 3]],\n                    13: [[0, 2], 11, 12, [21, 29]],\n                    14: [[0, 2], [21, 28], 81, 82],\n                    15: [[0, 2], [21, 26], 81],\n                    16: [[0, 2], [21, 26]],\n                    17: [[0, 2], [21, 28]]\n                },\n                41: {\n                    0: [0],\n                    1: [[0, 6], 8, 22, [81, 85]],\n                    2: [[0, 5], 11, [21, 25]],\n                    3: [[0, 7], 11, [22, 29], 81],\n                    4: [[0, 4], 11, [21, 23], 25, 81, 82],\n                    5: [[0, 3], 5, 6, 22, 23, 26, 27, 81],\n                    6: [[0, 3], 11, 21, 22],\n                    7: [[0, 4], 11, 21, [24, 28], 81, 82],\n                    8: [[0, 4], 11, [21, 23], 25, [81, 83]],\n                    9: [[0, 2], 22, 23, [26, 28]],\n                    10: [[0, 2], [23, 25], 81, 82],\n                    11: [[0, 4], [21, 23]],\n                    12: [[0, 2], 21, 22, 24, 81, 82],\n                    13: [[0, 3], [21, 30], 81],\n                    14: [[0, 3], [21, 26], 81],\n                    15: [[0, 3], [21, 28]],\n                    16: [[0, 2], [21, 28], 81],\n                    17: [[0, 2], [21, 29]],\n                    90: [0, 1]\n                },\n                42: {\n                    0: [0],\n                    1: [[0, 7], [11, 17]],\n                    2: [[0, 5], 22, 81],\n                    3: [[0, 3], [21, 25], 81],\n                    5: [[0, 6], [25, 29], [81, 83]],\n                    6: [[0, 2], 6, 7, [24, 26], [82, 84]],\n                    7: [[0, 4]],\n                    8: [[0, 2], 4, 21, 22, 81],\n                    9: [[0, 2], [21, 23], 81, 82, 84],\n                    10: [[0, 3], [22, 24], 81, 83, 87],\n                    11: [[0, 2], [21, 27], 81, 82],\n                    12: [[0, 2], [21, 24], 81],\n                    13: [[0, 3], 21, 81],\n                    28: [[0, 2], 22, 23, [25, 28]],\n                    90: [0, [4, 6], 21]\n                },\n                43: {\n                    0: [0],\n                    1: [[0, 5], 11, 12, 21, 22, 24, 81],\n                    2: [[0, 4], 11, 21, [23, 25], 81],\n                    3: [[0, 2], 4, 21, 81, 82],\n                    4: [0, 1, [5, 8], 12, [21, 24], 26, 81, 82],\n                    5: [[0, 3], 11, [21, 25], [27, 29], 81],\n                    6: [[0, 3], 11, 21, 23, 24, 26, 81, 82],\n                    7: [[0, 3], [21, 26], 81],\n                    8: [[0, 2], 11, 21, 22],\n                    9: [[0, 3], [21, 23], 81],\n                    10: [[0, 3], [21, 28], 81],\n                    11: [[0, 3], [21, 29]],\n                    12: [[0, 2], [21, 30], 81],\n                    13: [[0, 2], 21, 22, 81, 82],\n                    31: [0, 1, [22, 27], 30]\n                },\n                44: {\n                    0: [0],\n                    1: [[0, 7], [11, 16], 83, 84],\n                    2: [[0, 5], 21, 22, 24, 29, 32, 33, 81, 82],\n                    3: [0, 1, [3, 8]],\n                    4: [[0, 4]],\n                    5: [0, 1, [6, 15], 23, 82, 83],\n                    6: [0, 1, [4, 8]],\n                    7: [0, 1, [3, 5], 81, [83, 85]],\n                    8: [[0, 4], 11, 23, 25, [81, 83]],\n                    9: [[0, 3], 23, [81, 83]],\n                    12: [[0, 3], [23, 26], 83, 84],\n                    13: [[0, 3], [22, 24], 81],\n                    14: [[0, 2], [21, 24], 26, 27, 81],\n                    15: [[0, 2], 21, 23, 81],\n                    16: [[0, 2], [21, 25]],\n                    17: [[0, 2], 21, 23, 81],\n                    18: [[0, 3], 21, 23, [25, 27], 81, 82],\n                    19: [0],\n                    20: [0],\n                    51: [[0, 3], 21, 22],\n                    52: [[0, 3], 21, 22, 24, 81],\n                    53: [[0, 2], [21, 23], 81]\n                },\n                45: {\n                    0: [0],\n                    1: [[0, 9], [21, 27]],\n                    2: [[0, 5], [21, 26]],\n                    3: [[0, 5], 11, 12, [21, 32]],\n                    4: [0, 1, [3, 6], 11, [21, 23], 81],\n                    5: [[0, 3], 12, 21],\n                    6: [[0, 3], 21, 81],\n                    7: [[0, 3], 21, 22],\n                    8: [[0, 4], 21, 81],\n                    9: [[0, 3], [21, 24], 81],\n                    10: [[0, 2], [21, 31]],\n                    11: [[0, 2], [21, 23]],\n                    12: [[0, 2], [21, 29], 81],\n                    13: [[0, 2], [21, 24], 81],\n                    14: [[0, 2], [21, 25], 81]\n                },\n                46: {\n                    0: [0],\n                    1: [0, 1, [5, 8]],\n                    2: [0, 1],\n                    3: [0, [21, 23]],\n                    90: [[0, 3], [5, 7], [21, 39]]\n                },\n                50: {\n                    0: [0],\n                    1: [[0, 19]],\n                    2: [0, [22, 38], [40, 43]],\n                    3: [0, [81, 84]]\n                },\n                51: {\n                    0: [0],\n                    1: [0, 1, [4, 8], [12, 15], [21, 24], 29, 31, 32, [81, 84]],\n                    3: [[0, 4], 11, 21, 22],\n                    4: [[0, 3], 11, 21, 22],\n                    5: [[0, 4], 21, 22, 24, 25],\n                    6: [0, 1, 3, 23, 26, [81, 83]],\n                    7: [0, 1, 3, 4, [22, 27], 81],\n                    8: [[0, 2], 11, 12, [21, 24]],\n                    9: [[0, 4], [21, 23]],\n                    10: [[0, 2], 11, 24, 25, 28],\n                    11: [[0, 2], [11, 13], 23, 24, 26, 29, 32, 33, 81],\n                    13: [[0, 4], [21, 25], 81],\n                    14: [[0, 2], [21, 25]],\n                    15: [[0, 3], [21, 29]],\n                    16: [[0, 3], [21, 23], 81],\n                    17: [[0, 3], [21, 25], 81],\n                    18: [[0, 3], [21, 27]],\n                    19: [[0, 3], [21, 23]],\n                    20: [[0, 2], 21, 22, 81],\n                    32: [0, [21, 33]],\n                    33: [0, [21, 38]],\n                    34: [0, 1, [22, 37]]\n                },\n                52: {\n                    0: [0],\n                    1: [[0, 3], [11, 15], [21, 23], 81],\n                    2: [0, 1, 3, 21, 22],\n                    3: [[0, 3], [21, 30], 81, 82],\n                    4: [[0, 2], [21, 25]],\n                    5: [[0, 2], [21, 27]],\n                    6: [[0, 3], [21, 28]],\n                    22: [0, 1, [22, 30]],\n                    23: [0, 1, [22, 28]],\n                    24: [0, 1, [22, 28]],\n                    26: [0, 1, [22, 36]],\n                    27: [[0, 2], 22, 23, [25, 32]]\n                },\n                53: {\n                    0: [0],\n                    1: [[0, 3], [11, 14], 21, 22, [24, 29], 81],\n                    3: [[0, 2], [21, 26], 28, 81],\n                    4: [[0, 2], [21, 28]],\n                    5: [[0, 2], [21, 24]],\n                    6: [[0, 2], [21, 30]],\n                    7: [[0, 2], [21, 24]],\n                    8: [[0, 2], [21, 29]],\n                    9: [[0, 2], [21, 27]],\n                    23: [0, 1, [22, 29], 31],\n                    25: [[0, 4], [22, 32]],\n                    26: [0, 1, [21, 28]],\n                    27: [0, 1, [22, 30]], 28: [0, 1, 22, 23],\n                    29: [0, 1, [22, 32]],\n                    31: [0, 2, 3, [22, 24]],\n                    34: [0, [21, 23]],\n                    33: [0, 21, [23, 25]],\n                    35: [0, [21, 28]]\n                },\n                54: {\n                    0: [0],\n                    1: [[0, 2], [21, 27]],\n                    21: [0, [21, 29], 32, 33],\n                    22: [0, [21, 29], [31, 33]],\n                    23: [0, 1, [22, 38]],\n                    24: [0, [21, 31]],\n                    25: [0, [21, 27]],\n                    26: [0, [21, 27]]\n                },\n                61: {\n                    0: [0],\n                    1: [[0, 4], [11, 16], 22, [24, 26]],\n                    2: [[0, 4], 22],\n                    3: [[0, 4], [21, 24], [26, 31]],\n                    4: [[0, 4], [22, 31], 81],\n                    5: [[0, 2], [21, 28], 81, 82],\n                    6: [[0, 2], [21, 32]],\n                    7: [[0, 2], [21, 30]],\n                    8: [[0, 2], [21, 31]],\n                    9: [[0, 2], [21, 29]],\n                    10: [[0, 2], [21, 26]]\n                },\n                62: {\n                    0: [0],\n                    1: [[0, 5], 11, [21, 23]],\n                    2: [0, 1],\n                    3: [[0, 2], 21],\n                    4: [[0, 3], [21, 23]],\n                    5: [[0, 3], [21, 25]],\n                    6: [[0, 2], [21, 23]],\n                    7: [[0, 2], [21, 25]],\n                    8: [[0, 2], [21, 26]],\n                    9: [[0, 2], [21, 24], 81, 82],\n                    10: [[0, 2], [21, 27]],\n                    11: [[0, 2], [21, 26]],\n                    12: [[0, 2], [21, 28]],\n                    24: [0, 21, [24, 29]],\n                    26: [0, 21, [23, 30]],\n                    29: [0, 1, [21, 27]],\n                    30: [0, 1, [21, 27]]\n                },\n                63: {\n                    0: [0],\n                    1: [[0, 5], [21, 23]],\n                    2: [0, 2, [21, 25]],\n                    21: [0, [21, 23], [26, 28]],\n                    22: [0, [21, 24]],\n                    23: [0, [21, 24]],\n                    25: [0, [21, 25]],\n                    26: [0, [21, 26]],\n                    27: [0, 1, [21, 26]],\n                    28: [[0, 2], [21, 23]]\n                },\n                64: {\n                    0: [0],\n                    1: [0, 1, [4, 6], 21, 22, 81],\n                    2: [[0, 3], 5, [21, 23]],\n                    3: [[0, 3], [21, 24], 81],\n                    4: [[0, 2], [21, 25]],\n                    5: [[0, 2], 21, 22]\n                },\n                65: {\n                    0: [0],\n                    1: [[0, 9], 21],\n                    2: [[0, 5]],\n                    21: [0, 1, 22, 23],\n                    22: [0, 1, 22, 23],\n                    23: [[0, 3], [23, 25], 27, 28],\n                    28: [0, 1, [22, 29]],\n                    29: [0, 1, [22, 29]],\n                    30: [0, 1, [22, 24]], 31: [0, 1, [21, 31]],\n                    32: [0, 1, [21, 27]],\n                    40: [0, 2, 3, [21, 28]],\n                    42: [[0, 2], 21, [23, 26]],\n                    43: [0, 1, [21, 26]],\n                    90: [[0, 4]], 27: [[0, 2], 22, 23]\n                },\n                71: { 0: [0] },\n                81: { 0: [0] },\n                82: { 0: [0] }\n            };\n            \n            var provincial  = parseInt(value.substr(0, 2), 10),\n                prefectural = parseInt(value.substr(2, 2), 10),\n                county      = parseInt(value.substr(4, 2), 10);\n            \n            if (!adminDivisionCodes[provincial] || !adminDivisionCodes[provincial][prefectural]) {\n                return false;\n            }\n            var inRange  = false,\n                rangeDef = adminDivisionCodes[provincial][prefectural];\n            for (var i = 0; i < rangeDef.length; i++) {\n                if (($.isArray(rangeDef[i]) && rangeDef[i][0] <= county && county <= rangeDef[i][1])\n                    || (!$.isArray(rangeDef[i]) && county === rangeDef[i]))\n                {\n                    inRange = true;\n                    break;\n                }\n            }\n\n            if (!inRange) {\n                return false;\n            }\n            \n            // Check date of birth\n            var dob;\n            if (value.length === 18) {\n                dob = value.substr(6, 8);\n            } else /* length == 15 */ { \n                dob = '19' + value.substr(6, 6);\n            }\n            var year  = parseInt(dob.substr(0, 4), 10),\n                month = parseInt(dob.substr(4, 2), 10),\n                day   = parseInt(dob.substr(6, 2), 10);\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n            \n            // Check checksum (18-digit system only)\n            if (value.length === 18) {\n                var sum    = 0,\n                    weight = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n                for (i = 0; i < 17; i++) {\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\n                }\n                sum = (12 - (sum % 11)) % 11;\n                var checksum = (value.charAt(17).toUpperCase() !== 'X') ? parseInt(value.charAt(17), 10) : 10;\n                return checksum === sum;\n            }\n            \n            return true;\n        },\n        \n        /**\n         * Validate Czech national identification number (RC)\n         *\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _cz: function(value) {\n            if (!/^\\d{9,10}$/.test(value)) {\n                return false;\n            }\n            var year  = 1900 + parseInt(value.substr(0, 2), 10),\n                month = parseInt(value.substr(2, 2), 10) % 50 % 20,\n                day   = parseInt(value.substr(4, 2), 10);\n            if (value.length === 9) {\n                if (year >= 1980) {\n                    year -= 100;\n                }\n                if (year > 1953) {\n                    return false;\n                }\n            } else if (year < 1954) {\n                year += 100;\n            }\n\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n\n            // Check that the birth date is not in the future\n            if (value.length === 10) {\n                var check = parseInt(value.substr(0, 9), 10) % 11;\n                if (year < 1985) {\n                    check = check % 10;\n                }\n                return (check + '' === value.substr(9, 1));\n            }\n\n            return true;\n        },\n\n        /**\n         * Validate Danish Personal Identification number (CPR)\n         *\n         * @see https://en.wikipedia.org/wiki/Personal_identification_number_(Denmark)\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _dk: function(value) {\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/-/g, '');\n            var day   = parseInt(value.substr(0, 2), 10),\n                month = parseInt(value.substr(2, 2), 10),\n                year  = parseInt(value.substr(4, 2), 10);\n\n            switch (true) {\n                case ('5678'.indexOf(value.charAt(6)) !== -1 && year >= 58):\n                    year += 1800;\n                    break;\n                case ('0123'.indexOf(value.charAt(6)) !== -1):\n                case ('49'.indexOf(value.charAt(6)) !== -1 && year >= 37):\n                    year += 1900;\n                    break;\n                default:\n                    year += 2000;\n                    break;\n            }\n\n            return FormValidation.Helper.date(year, month, day);\n        },\n\n        /**\n         * Validate Estonian Personal Identification Code (isikukood)\n         *\n         * @see http://et.wikipedia.org/wiki/Isikukood\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _ee: function(value) {\n            // Use the same format as Lithuanian Personal Code\n            return this._lt(value);\n        },\n\n        /**\n         * Validate Spanish personal identity code (DNI)\n         * Support DNI (for Spanish citizens), NIE (for foreign people) and CIF (for legal entities)\n         *\n         * @see https://en.wikipedia.org/wiki/National_identification_number#Spain\n         * @param {String} value The ID\n         * @returns {Boolean|Object}\n         */\n        _es: function(value) {\n            var isDNI = /^[0-9]{8}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(value),\n                isNIE = /^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(value),\n                isCIF = /^[A-HNPQS][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-J]$/.test(value);\n            if (!isDNI && !isNIE && !isCIF) {\n                return false;\n            }\n\n            value = value.replace(/-/g, '');\n            var check, type, isValid = true;\n            if (isDNI || isNIE) {\n                type = 'DNI';\n                var index = 'XYZ'.indexOf(value.charAt(0));\n                if (index !== -1) {\n                    // It is NIE number\n                    value = index + value.substr(1) + '';\n                    type  = 'NIE';\n                }\n\n                check = parseInt(value.substr(0, 8), 10);\n                check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\n                return {\n                    valid: (check === value.substr(8, 1)),\n                    type: type\n                };\n            } else {\n                check = value.substr(1, 7);\n                type  = 'CIF';\n                var letter  = value[0],\n                    control = value.substr(-1),\n                    sum     = 0;\n\n                // The digits in the even positions are added to the sum directly.\n                // The ones in the odd positions are multiplied by 2 and then added to the sum.\n                // If the result of multiplying by 2 is 10 or higher, add the two digits\n                // together and add that to the sum instead\n                for (var i = 0; i < check.length; i++) {\n                    if (i % 2 !== 0) {\n                        sum += parseInt(check[i], 10);\n                    } else {\n                        var tmp = '' + (parseInt(check[i], 10) * 2);\n                        sum += parseInt(tmp[0], 10);\n                        if (tmp.length === 2) {\n                            sum += parseInt(tmp[1], 10);\n                        }\n                    }\n                }\n\n                // The control digit is calculated from the last digit of the sum.\n                // If that last digit is not 0, subtract it from 10\n                var lastDigit = sum - (Math.floor(sum / 10) * 10);\n                if (lastDigit !== 0) {\n                    lastDigit = 10 - lastDigit;\n                }\n                \n                if ('KQS'.indexOf(letter) !== -1) {\n                    // If the CIF starts with a K, Q or S, the control digit must be a letter\n                    isValid = (control === 'JABCDEFGHI'[lastDigit]);\n                } else if ('ABEH'.indexOf(letter) !== -1) {\n                    // If it starts with A, B, E or H, it has to be a number\n                    isValid = (control === ('' + lastDigit));\n                } else {\n                    // In any other case, it doesn't matter\n                    isValid = (control === ('' + lastDigit) || control === 'JABCDEFGHI'[lastDigit]);\n                }\n\n                return {\n                    valid: isValid,\n                    type: type\n                };\n            }\n        },\n\n        /**\n         * Validate Finnish Personal Identity Code (HETU)\n         *\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _fi: function(value) {\n            if (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(value)) {\n                return false;\n            }\n            var day       = parseInt(value.substr(0, 2), 10),\n                month     = parseInt(value.substr(2, 2), 10),\n                year      = parseInt(value.substr(4, 2), 10),\n                centuries = {\n                    '+': 1800,\n                    '-': 1900,\n                    'A': 2000\n                };\n            year = centuries[value.charAt(6)] + year;\n\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n\n            var individual = parseInt(value.substr(7, 3), 10);\n            if (individual < 2) {\n                return false;\n            }\n            var n = value.substr(0, 6) + value.substr(7, 3) + '';\n            n = parseInt(n, 10);\n            return '0123456789ABCDEFHJKLMNPRSTUVWXY'.charAt(n % 31) === value.charAt(10);\n        },\n\n        /**\n         * Validate Croatian personal identification number (OIB)\n         *\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _hr: function(value) {\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n            return FormValidation.Helper.mod11And10(value);\n        },\n\n        /**\n         * Validate Irish Personal Public Service Number (PPS)\n         *\n         * @see https://en.wikipedia.org/wiki/Personal_Public_Service_Number\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _ie: function(value) {\n            if (!/^\\d{7}[A-W][AHWTX]?$/.test(value)) {\n                return false;\n            }\n\n            var getCheckDigit = function(value) {\n                while (value.length < 7) {\n                    value = '0' + value;\n                }\n                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\n                    sum      = 0;\n                for (var i = 0; i < 7; i++) {\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\n                }\n                sum += 9 * alphabet.indexOf(value.substr(7));\n                return alphabet[sum % 23];\n            };\n\n            // 2013 format\n            if (value.length === 9 && ('A' === value.charAt(8) || 'H' === value.charAt(8))) {\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\n            }\n            // The old format\n            else {\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7));\n            }\n        },\n\n        /**\n         * Validate Iceland national identification number (Kennitala)\n         *\n         *  @see http://en.wikipedia.org/wiki/Kennitala\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _is: function(value) {\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/-/g, '');\n            var day     = parseInt(value.substr(0, 2), 10),\n                month   = parseInt(value.substr(2, 2), 10),\n                year    = parseInt(value.substr(4, 2), 10),\n                century = parseInt(value.charAt(9), 10);\n\n            year = (century === 9) ? (1900 + year) : ((20 + century) * 100 + year);\n            if (!FormValidation.Helper.date(year, month, day, true)) {\n                return false;\n            }\n            // Validate the check digit\n            var sum    = 0,\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = 11 - sum % 11;\n            return (sum + '' === value.charAt(8));\n        },\n\n        /**\n         * Validate Lithuanian Personal Code (Asmens kodas)\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Lithuania\n         * @see http://www.adomas.org/midi2007/pcode.html\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _lt: function(value) {\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n            var gender  = parseInt(value.charAt(0), 10),\n                year    = parseInt(value.substr(1, 2), 10),\n                month   = parseInt(value.substr(3, 2), 10),\n                day     = parseInt(value.substr(5, 2), 10),\n                century = (gender % 2 === 0) ? (17 + gender / 2) : (17 + (gender + 1) / 2);\n            year = century * 100 + year;\n            if (!FormValidation.Helper.date(year, month, day, true)) {\n                return false;\n            }\n\n            // Validate the check digit\n            var sum    = 0,\n                weight = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];\n            for (var i = 0; i < 10; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = sum % 11;\n            if (sum !== 10) {\n                return sum + '' === value.charAt(10);\n            }\n\n            // Re-calculate the check digit\n            sum    = 0;\n            weight = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];\n            for (i = 0; i < 10; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = sum % 11;\n            if (sum === 10) {\n                sum = 0;\n            }\n            return (sum + '' === value.charAt(10));\n        },\n\n        /**\n         * Validate Latvian Personal Code (Personas kods)\n         *\n         * @see http://laacz.lv/2006/11/25/pk-parbaudes-algoritms/\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _lv: function(value) {\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\D/g, '');\n            // Check birth date\n            var day   = parseInt(value.substr(0, 2), 10),\n                month = parseInt(value.substr(2, 2), 10),\n                year  = parseInt(value.substr(4, 2), 10);\n            year = year + 1800 + parseInt(value.charAt(6), 10) * 100;\n\n            if (!FormValidation.Helper.date(year, month, day, true)) {\n                return false;\n            }\n\n            // Check personal code\n            var sum    = 0,\n                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\n            for (var i = 0; i < 10; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = (sum + 1) % 11 % 10;\n            return (sum + '' === value.charAt(10));\n        },\n\n        /**\n         * Validate Dutch national identification number (BSN)\n         *\n         * @see https://nl.wikipedia.org/wiki/Burgerservicenummer\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _nl: function(value) {\n            if (value.length < 8) {\n                return false;\n            }\n\n            if (value.length === 8) {\n                value = '0' + value;\n            }\n            if (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/\\./g, '');\n            if (parseInt(value, 10) === 0) {\n                return false;\n            }\n            var sum    = 0,\n                length = value.length;\n            for (var i = 0; i < length - 1; i++) {\n                sum += (9 - i) * parseInt(value.charAt(i), 10);\n            }\n            sum = sum % 11;\n            if (sum === 10) {\n                sum = 0;\n            }\n            return (sum + '' === value.charAt(length - 1));\n        },\n        \n        /**\n         * Validate Poland citizen number (PESEL)\n         * \n         * @see http://en.wikipedia.org/wiki/National_identification_number#Poland\n         * @see http://en.wikipedia.org/wiki/PESEL\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _pl: function(value) {\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                length = value.length,\n                weight = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3, 7];\n\n            for (var i = 0; i < length - 1; i++) {\n                sum += weight[i] * parseInt(value.charAt(i), 10);\n            }\n            sum = sum % 10;\n            if (sum === 0) {\n                sum = 10;\n            }\n            sum = 10 - sum;\n\n            return (sum + '' === value.charAt(length - 1));\n        },\n\n        /**\n         * Validate Romanian numerical personal code (CNP)\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Romania\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _ro: function(value) {\n            if (!/^[0-9]{13}$/.test(value)) {\n                return false;\n            }\n            var gender = parseInt(value.charAt(0), 10);\n            if (gender === 0 || gender === 7 || gender === 8) {\n                return false;\n            }\n\n            // Determine the date of birth\n            var year      = parseInt(value.substr(1, 2), 10),\n                month     = parseInt(value.substr(3, 2), 10),\n                day       = parseInt(value.substr(5, 2), 10),\n                // The year of date is determined base on the gender\n                centuries = {\n                    '1': 1900,  // Male born between 1900 and 1999\n                    '2': 1900,  // Female born between 1900 and 1999\n                    '3': 1800,  // Male born between 1800 and 1899\n                    '4': 1800,  // Female born between 1800 and 1899\n                    '5': 2000,  // Male born after 2000\n                    '6': 2000   // Female born after 2000\n                };\n            if (day > 31 && month > 12) {\n                return false;\n            }\n            if (gender !== 9) {\n                year = centuries[gender + ''] + year;\n                if (!FormValidation.Helper.date(year, month, day)) {\n                    return false;\n                }\n            }\n\n            // Validate the check digit\n            var sum    = 0,\n                weight = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9],\n                length = value.length;\n            for (var i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = sum % 11;\n            if (sum === 10) {\n                sum = 1;\n            }\n            return (sum + '' === value.charAt(length - 1));\n        },\n\n        /**\n         * Validate Swedish personal identity number (personnummer)\n         *\n         * @see http://en.wikipedia.org/wiki/Personal_identity_number_(Sweden)\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _se: function(value) {\n            if (!/^[0-9]{10}$/.test(value) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(value)) {\n                return false;\n            }\n            value = value.replace(/[^0-9]/g, '');\n\n            var year  = parseInt(value.substr(0, 2), 10) + 1900,\n                month = parseInt(value.substr(2, 2), 10),\n                day   = parseInt(value.substr(4, 2), 10);\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n\n            // Validate the last check digit\n            return FormValidation.Helper.luhn(value);\n        },\n\n        /**\n         * Validate Slovak national identifier number (RC)\n         *\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _sk: function(value) {\n            // Slovakia uses the same format as Czech Republic\n            return this._cz(value);\n        },\n\n        /**\n         * Validate San Marino citizen number\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#San_Marino\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _sm: function(value) {\n            return /^\\d{5}$/.test(value);\n        },\n\n        /**\n         * Validate Thailand citizen number\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Thailand\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _th: function(value) {\n            if (value.length !== 13) {\n                return false;\n            }\n\n            var sum = 0;\n            for (var i = 0; i < 12; i++) {\n                sum += parseInt(value.charAt(i), 10) * (13 - i);\n            }\n\n            return (11 - sum % 11) % 10 === parseInt(value.charAt(12), 10);\n        },\n\n        /**\n         * Validate Turkish Identification Number\n         *\n         * @see https://en.wikipedia.org/wiki/Turkish_Identification_Number\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _tr: function(value) {\n            if (value.length !== 11) {\n                return false;\n            }\n\n            var sum = 0;\n            for (var i = 0; i < 10; i++) {\n                sum += parseInt(value.charAt(i), 10);\n            }\n\n            return (sum % 10) === parseInt(value.charAt(10), 10);\n        },\n\n        /**\n         * Validate South African ID\n         *\n         * @see http://en.wikipedia.org/wiki/National_identification_number#South_Africa\n         * @param {String} value The ID\n         * @returns {Boolean}\n         */\n        _za: function(value) {\n            if (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(value)) {\n                return false;\n            }\n            var year        = parseInt(value.substr(0, 2), 10),\n                currentYear = new Date().getFullYear() % 100,\n                month       = parseInt(value.substr(2, 2), 10),\n                day         = parseInt(value.substr(4, 2), 10);\n            year = (year >= currentYear) ? (year + 1900) : (year + 2000);\n\n            if (!FormValidation.Helper.date(year, month, day)) {\n                return false;\n            }\n\n            // Validate the last check digit\n            return FormValidation.Helper.luhn(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            identical: {\n                'default': 'Please enter the same value'\n            }\n        }\n    });\n\n    FormValidation.Validator.identical = {\n        html5Attributes: {\n            message: 'message',\n            field: 'field'\n        },\n\n        /**\n         * Bind the validator on the live change of the field to compare with current one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         */\n        init: function(validator, $field, options, validatorName) {\n            var compareWith = validator.getFieldElements(options.field);\n            validator.onLiveChange(compareWith, 'live_' + validatorName, function() {\n                var status = validator.getStatus($field, validatorName);\n                if (status !== validator.STATUS_NOT_VALIDATED) {\n                    validator.revalidateField($field);\n                }\n            });\n        },\n\n        /**\n         * Unbind the validator on the live change of the field to compare with current one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         */\n        destroy: function(validator, $field, options, validatorName) {\n            var compareWith = validator.getFieldElements(options.field);\n            validator.offLiveChange(compareWith, 'live_' + validatorName);\n        },\n\n        /**\n         * Check if input value equals to value of particular one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - field: The name of field that will be used to compare with current one\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value       = validator.getFieldValue($field, validatorName),\n                compareWith = validator.getFieldElements(options.field);\n            if (compareWith === null || compareWith.length === 0) {\n                return true;\n            }\n\n            var compareValue = validator.getFieldValue(compareWith, validatorName);\n            if (value === compareValue) {\n                validator.updateStatus(compareWith, validator.STATUS_VALID, validatorName);\n                return true;\n            }\n\n            return false;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            imei: {\n                'default': 'Please enter a valid IMEI number'\n            }\n        }\n    });\n\n    FormValidation.Validator.imei = {\n        /**\n         * Validate IMEI (International Mobile Station Equipment Identity)\n         *\n         * @see http://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            switch (true) {\n                case /^\\d{15}$/.test(value):\n                case /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/.test(value):\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}\\s\\d{1}$/.test(value):\n                    value = value.replace(/[^0-9]/g, '');\n                    return FormValidation.Helper.luhn(value);\n\n                case /^\\d{14}$/.test(value):\n                case /^\\d{16}$/.test(value):\n                case /^\\d{2}-\\d{6}-\\d{6}(|-\\d{2})$/.test(value):\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}(|\\s\\d{2})$/.test(value):\n                    return true;\n\n                default:\n                    return false;\n            }\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            imo: {\n                'default': 'Please enter a valid IMO number'\n            }\n        }\n    });\n\n    FormValidation.Validator.imo = {\n        /**\n         * Validate IMO (International Maritime Organization)\n         *\n         * @see http://en.wikipedia.org/wiki/IMO_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            if (!/^IMO \\d{7}$/i.test(value)) {\n                return false;\n            }\n            \n            // Grab just the digits\n            var sum    = 0,\n                digits = value.replace(/^.*(\\d{7})$/, '$1');\n            for (var i = 6; i >= 1; i--) {\n                sum += (digits.slice((6 - i), -i) * (i + 1));\n            }\n\n            return sum % 10 === parseInt(digits.charAt(6), 10);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            integer: {\n                'default': 'Please enter a valid number'\n            }\n        }\n    });\n\n    FormValidation.Validator.integer = {\n        html5Attributes: {\n            message: 'message',\n            thousandsseparator: 'thousandsSeparator',\n            decimalseparator: 'decimalSeparator'\n        },\n\n        enableByHtml5: function($field) {\n            return ('number' === $field.attr('type')) && ($field.attr('step') === undefined || $field.attr('step') % 1 === 0);\n        },\n\n        /**\n         * Return true if the input value is an integer\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following key:\n         * - message: The invalid message\n         * - thousandsSeparator: The thousands separator. It's empty by default\n         * - decimalSeparator: The decimal separator. It's '.' by default\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {\n                return false;\n            }\n\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var decimalSeparator   = options.decimalSeparator   || '.',\n                thousandsSeparator = options.thousandsSeparator || '';\n            decimalSeparator       = (decimalSeparator   === '.') ? '\\\\.' : decimalSeparator;\n            thousandsSeparator     = (thousandsSeparator === '.') ? '\\\\.' : thousandsSeparator;\n\n            var testRegexp         = new RegExp('^-?[0-9]{1,3}(' + thousandsSeparator + '[0-9]{3})*(' + decimalSeparator + '[0-9]+)?$'),\n                thousandsReplacer  = new RegExp(thousandsSeparator, 'g');\n\n            if (!testRegexp.test(value)) {\n                return false;\n            }\n\n            // Replace thousands separator with blank\n            if (thousandsSeparator) {\n                value = value.replace(thousandsReplacer, '');\n            }\n            // Replace decimal separator with a dot\n            if (decimalSeparator) {\n                value = value.replace(decimalSeparator, '.');\n            }\n\n            if (isNaN(value) || !isFinite(value)) {\n                return false;\n            }\n            // TODO: Use Number.isInteger() if available\n            value = parseFloat(value);\n            return Math.floor(value) === value;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            ip: {\n                'default': 'Please enter a valid IP address',\n                ipv4: 'Please enter a valid IPv4 address',\n                ipv6: 'Please enter a valid IPv6 address'\n            }\n        }\n    });\n\n    FormValidation.Validator.ip = {\n        html5Attributes: {\n            message: 'message',\n            ipv4: 'ipv4',\n            ipv6: 'ipv6'\n        },\n\n        /**\n         * Return true if the input value is a IP address.\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - ipv4: Enable IPv4 validator, default to true\n         * - ipv6: Enable IPv6 validator, default to true\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n            options = $.extend({}, { ipv4: true, ipv6: true }, options);\n\n            var locale    = validator.getLocale(),\n                ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n                ipv6Regex = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n                valid     = false,\n                message;\n\n            switch (true) {\n                case (options.ipv4 && !options.ipv6):\n                    valid   = ipv4Regex.test(value);\n                    message = options.message || FormValidation.I18n[locale].ip.ipv4;\n                    break;\n\n                case (!options.ipv4 && options.ipv6):\n                    valid   = ipv6Regex.test(value);\n                    message = options.message || FormValidation.I18n[locale].ip.ipv6;\n                    break;\n\n                case (options.ipv4 && options.ipv6):\n                /* falls through */\n                default:\n                    valid   = ipv4Regex.test(value) || ipv6Regex.test(value);\n                    message = options.message || FormValidation.I18n[locale].ip['default'];\n                    break;\n            }\n\n            return {\n                valid: valid,\n                message: message\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            isbn: {\n                'default': 'Please enter a valid ISBN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.isbn = {\n        /**\n         * Return true if the input value is a valid ISBN 10 or ISBN 13 number\n         *\n         * @see http://en.wikipedia.org/wiki/International_Standard_Book_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} [options] Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // http://en.wikipedia.org/wiki/International_Standard_Book_Number#Overview\n            // Groups are separated by a hyphen or a space\n            var type;\n            switch (true) {\n                case /^\\d{9}[\\dX]$/.test(value):\n                case (value.length === 13 && /^(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\n                case (value.length === 13 && /^(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\n                    type = 'ISBN10';\n                    break;\n                case /^(978|979)\\d{9}[\\dX]$/.test(value):\n                case (value.length === 17 && /^(978|979)-(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\n                case (value.length === 17 && /^(978|979)\\s(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\n                    type = 'ISBN13';\n                    break;\n                default:\n                    return false;\n            }\n\n            // Replace all special characters except digits and X\n            value = value.replace(/[^0-9X]/gi, '');\n            var chars  = value.split(''),\n                length = chars.length,\n                sum    = 0,\n                i,\n                checksum;\n\n            switch (type) {\n                case 'ISBN10':\n                    sum = 0;\n                    for (i = 0; i < length - 1; i++) {\n                        sum += parseInt(chars[i], 10) * (10 - i);\n                    }\n                    checksum = 11 - (sum % 11);\n                    if (checksum === 11) {\n                        checksum = 0;\n                    } else if (checksum === 10) {\n                        checksum = 'X';\n                    }\n                    return {\n                        type: type,\n                        valid: (checksum + '' === chars[length - 1])\n                    };\n\n                case 'ISBN13':\n                    sum = 0;\n                    for (i = 0; i < length - 1; i++) {\n                        sum += ((i % 2 === 0) ? parseInt(chars[i], 10) : (parseInt(chars[i], 10) * 3));\n                    }\n                    checksum = 10 - (sum % 10);\n                    if (checksum === 10) {\n                        checksum = '0';\n                    }\n                    return {\n                        type: type,\n                        valid: (checksum + '' === chars[length - 1])\n                    };\n\n                default:\n                    return false;\n            }\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            isin: {\n                'default': 'Please enter a valid ISIN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.isin = {\n        // Available country codes\n        // See http://isin.net/country-codes/\n        COUNTRY_CODES: 'AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW',\n\n        /**\n         * Validate an ISIN (International Securities Identification Number)\n         *\n         * @see http://en.wikipedia.org/wiki/International_Securities_Identifying_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            value = value.toUpperCase();\n            var regex = new RegExp('^(' + this.COUNTRY_CODES + ')[0-9A-Z]{10}$');\n            if (!regex.test(value)) {\n                return false;\n            }\n\n            var converted = '',\n                length    = value.length;\n            // Convert letters to number\n            for (var i = 0; i < length - 1; i++) {\n                var c = value.charCodeAt(i);\n                converted += ((c > 57) ? (c - 55).toString() : value.charAt(i));\n            }\n\n            var digits = '',\n                n      = converted.length,\n                group  = (n % 2 !== 0) ? 0 : 1;\n            for (i = 0; i < n; i++) {\n                digits += (parseInt(converted[i], 10) * ((i % 2) === group ? 2 : 1) + '');\n            }\n\n            var sum = 0;\n            for (i = 0; i < digits.length; i++) {\n                sum += parseInt(digits.charAt(i), 10);\n            }\n            sum = (10 - (sum % 10)) % 10;\n            return sum + '' === value.charAt(length - 1);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            ismn: {\n                'default': 'Please enter a valid ISMN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.ismn = {\n        /**\n         * Validate ISMN (International Standard Music Number)\n         *\n         * @see http://en.wikipedia.org/wiki/International_Standard_Music_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Groups are separated by a hyphen or a space\n            var type;\n            switch (true) {\n                case /^M\\d{9}$/.test(value):\n                case /^M-\\d{4}-\\d{4}-\\d{1}$/.test(value):\n                case /^M\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\n                    type = 'ISMN10';\n                    break;\n                case /^9790\\d{9}$/.test(value):\n                case /^979-0-\\d{4}-\\d{4}-\\d{1}$/.test(value):\n                case /^979\\s0\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\n                    type = 'ISMN13';\n                    break;\n                default:\n                    return false;\n            }\n\n            if ('ISMN10' === type) {\n                value = '9790' + value.substr(1);\n            }\n\n            // Replace all special characters except digits\n            value = value.replace(/[^0-9]/gi, '');\n            var length = value.length,\n                sum    = 0,\n                weight = [1, 3];\n            for (var i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\n            }\n            sum = 10 - sum % 10;\n            return {\n                type: type,\n                valid: (sum + '' === value.charAt(length - 1))\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            issn: {\n                'default': 'Please enter a valid ISSN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.issn = {\n        /**\n         * Validate ISSN (International Standard Serial Number)\n         *\n         * @see http://en.wikipedia.org/wiki/International_Standard_Serial_Number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Groups are separated by a hyphen or a space\n            if (!/^\\d{4}\\-\\d{3}[\\dX]$/.test(value)) {\n                return false;\n            }\n\n            // Replace all special characters except digits and X\n            value = value.replace(/[^0-9X]/gi, '');\n            var chars  = value.split(''),\n                length = chars.length,\n                sum    = 0;\n\n            if (chars[7] === 'X') {\n                chars[7] = 10;\n            }\n            for (var i = 0; i < length; i++) {\n                sum += parseInt(chars[i], 10) * (8 - i);\n            }\n            return (sum % 11 === 0);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            lessThan: {\n                'default': 'Please enter a value less than or equal to %s',\n                notInclusive: 'Please enter a value less than %s'\n            }\n        }\n    });\n\n    FormValidation.Validator.lessThan = {\n        html5Attributes: {\n            message: 'message',\n            value: 'value',\n            inclusive: 'inclusive'\n        },\n\n        enableByHtml5: function($field) {\n            var type = $field.attr('type'),\n                max  = $field.attr('max');\n            if (max && type !== 'date') {\n                return {\n                    value: max\n                };\n            }\n\n            return false;\n        },\n\n        /**\n         * Return true if the input value is less than or equal to given number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - value: The number used to compare to. It can be\n         *      - A number\n         *      - Name of field which its value defines the number\n         *      - Name of callback function that returns the number\n         *      - A callback function that returns the number\n         *\n         * - inclusive [optional]: Can be true or false. Default is true\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n            \n\t\t\tvalue = this._format(value);\n\n            var locale         = validator.getLocale(),\n                compareTo      = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value),\n                compareToValue = this._format(compareTo);\n\n            return (options.inclusive === true || options.inclusive === undefined)\n                    ? {\n                        valid: $.isNumeric(value) && parseFloat(value) <= compareToValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].lessThan['default'], compareTo)\n                    }\n                    : {\n                        valid: $.isNumeric(value) && parseFloat(value) < compareToValue,\n                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].lessThan.notInclusive, compareTo)\n                    };\n        },\n\n        _format: function(value) {\n            return (value + '').replace(',', '.');\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            mac: {\n                'default': 'Please enter a valid MAC address'\n            }\n        }\n    });\n\n    FormValidation.Validator.mac = {\n        /**\n         * Return true if the input value is a MAC address.\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            return /^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/.test(value) || /^([0-9A-Fa-f]{4}\\.){2}([0-9A-Fa-f]{4})$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            meid: {\n                'default': 'Please enter a valid MEID number'\n            }\n        }\n    });\n\n    FormValidation.Validator.meid = {\n        /**\n         * Validate MEID (Mobile Equipment Identifier)\n         *\n         * @see http://en.wikipedia.org/wiki/Mobile_equipment_identifier\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            switch (true) {\n                // 14 digit hex representation (no check digit)\n                case /^[0-9A-F]{15}$/i.test(value):\n                // 14 digit hex representation + dashes or spaces (no check digit)\n                case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}[- ][0-9A-F]$/i.test(value):\n                // 18 digit decimal representation (no check digit)\n                case /^\\d{19}$/.test(value):\n                // 18 digit decimal representation + dashes or spaces (no check digit)\n                case /^\\d{5}[- ]\\d{5}[- ]\\d{4}[- ]\\d{4}[- ]\\d$/.test(value):\n                    // Grab the check digit\n                    var cd = value.charAt(value.length - 1);\n\n                    // Strip any non-hex chars\n                    value = value.replace(/[- ]/g, '');\n\n                    // If it's all digits, luhn base 10 is used\n                    if (value.match(/^\\d*$/i)) {\n                        return FormValidation.Helper.luhn(value);\n                    }\n\n                    // Strip the check digit\n                    value = value.slice(0, -1);\n\n                    // Get every other char, and double it\n                    var cdCalc = '';\n                    for (var i = 1; i <= 13; i += 2) {\n                        cdCalc += (parseInt(value.charAt(i), 16) * 2).toString(16);\n                    }\n\n                    // Get the sum of each char in the string\n                    var sum = 0;\n                    for (i = 0; i < cdCalc.length; i++) {\n                        sum += parseInt(cdCalc.charAt(i), 16);\n                    }\n\n                    // If the last digit of the calc is 0, the check digit is 0\n                    return (sum % 10 === 0)\n                            ? (cd === '0')\n                            // Subtract it from the next highest 10s number (64 goes to 70) and subtract the sum\n                            // Double it and turn it into a hex char\n                            : (cd === ((Math.floor((sum + 10) / 10) * 10 - sum) * 2).toString(16));\n\n                // 14 digit hex representation (no check digit)\n                case /^[0-9A-F]{14}$/i.test(value):\n                // 14 digit hex representation + dashes or spaces (no check digit)\n                case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}$/i.test(value):\n                // 18 digit decimal representation (no check digit)\n                case /^\\d{18}$/.test(value):\n                // 18 digit decimal representation + dashes or spaces (no check digit)\n                case /^\\d{5}[- ]\\d{5}[- ]\\d{4}[- ]\\d{4}$/.test(value):\n                    return true;\n\n                default:\n                    return false;\n            }\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            notEmpty: {\n                'default': 'Please enter a value'\n            }\n        }\n    });\n\n    FormValidation.Validator.notEmpty = {\n        enableByHtml5: function($field) {\n            var required = $field.attr('required') + '';\n            return ('required' === required || 'true' === required);\n        },\n\n        /**\n         * Check if input value is empty or not\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var type = $field.attr('type');\n            if ('radio' === type || 'checkbox' === type) {\n                var ns = validator.getNamespace();\n                return validator\n                            .getFieldElements($field.attr('data-' + ns + '-field'))\n                            .filter(':checked')\n                            .length > 0;\n            }\n\n            if ('number' === type && $field.get(0).validity && $field.get(0).validity.badInput === true) {\n                return true;\n            }\n\n            var value = validator.getFieldValue($field, validatorName);\n            return $.trim(value) !== '';\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            numeric: {\n                'default': 'Please enter a valid float number'\n            }\n        }\n    });\n\n    FormValidation.Validator.numeric = {\n        html5Attributes: {\n            message: 'message',\n            separator: 'separator',     // deprecated\n            thousandsseparator: 'thousandsSeparator',\n            decimalseparator: 'decimalSeparator'\n        },\n\n        enableByHtml5: function($field) {\n            return ('number' === $field.attr('type')) && ($field.attr('step') !== undefined) && ($field.attr('step') % 1 !== 0);\n        },\n\n        /**\n         * Validate decimal number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - thousandsSeparator: The thousands separator. It's empty by default\n         * - separator, decimalSeparator: The decimal separator. It's '.' by default\n         * The separator option is deprecated and should be replaced with decimalSeparator\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {\n                return false;\n            }\n\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var decimalSeparator   = options.separator || options.decimalSeparator || '.',\n                thousandsSeparator = options.thousandsSeparator || '';\n\n            // Support preceding zero numbers such as .5, -.5\n            if (value.substr(0, 1) === decimalSeparator) {\n                value = '0' + decimalSeparator + value.substr(1);\n            } else if (value.substr(0, 2) === '-' + decimalSeparator) {\n                value = '-0' + decimalSeparator + value.substr(2);\n            }\n\n            decimalSeparator   = (decimalSeparator   === '.') ? '\\\\.' : decimalSeparator;\n            thousandsSeparator = (thousandsSeparator === '.') ? '\\\\.' : thousandsSeparator;\n\n            var testRegexp         = new RegExp('^-?[0-9]{1,3}(' + thousandsSeparator + '[0-9]{3})*(' + decimalSeparator + '[0-9]+)?$'),\n                thousandsReplacer  = new RegExp(thousandsSeparator, 'g');\n\n            if (!testRegexp.test(value)) {\n                return false;\n            }\n\n            // Replace thousands separator with blank\n            if (thousandsSeparator) {\n                value = value.replace(thousandsReplacer, '');\n            }\n            // Replace decimal separator with a dot\n            if (decimalSeparator) {\n                value = value.replace(decimalSeparator, '.');\n            }\n\n            return !isNaN(parseFloat(value)) && isFinite(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            phone: {\n                'default': 'Please enter a valid phone number',\n                country: 'Please enter a valid phone number in %s',\n                countries: {\n                    AE: 'United Arab Emirates',\n                    BG: 'Bulgaria',\n                    BR: 'Brazil',\n                    CN: 'China',\n                    CZ: 'Czech Republic',\n                    DE: 'Germany',\n                    DK: 'Denmark',\n                    ES: 'Spain',\n                    FR: 'France',\n                    GB: 'United Kingdom',\n                    IN: 'India',\n                    MA: 'Morocco',\n                    NL: 'Netherlands',\n                    PK: 'Pakistan',\n                    RO: 'Romania',\n                    RU: 'Russia',\n                    SK: 'Slovakia',\n                    TH: 'Thailand',\n                    US: 'USA',\n                    VE: 'Venezuela'\n                }\n            }\n        }\n    });\n\n    FormValidation.Validator.phone = {\n        html5Attributes: {\n            message: 'message',\n            country: 'country'\n        },\n\n        // The supported countries\n        COUNTRY_CODES: ['AE', 'BG', 'BR', 'CN', 'CZ', 'DE', 'DK', 'ES', 'FR', 'GB', 'IN', 'MA', 'NL', 'PK', 'RO', 'RU', 'SK', 'TH', 'US', 'VE'],\n\n        /**\n         * Return true if the input value contains a valid phone number for the country\n         * selected in the options\n         *\n         * @param {FormValidation.Base} validator Validate plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - country: The ISO-3166 country code. It can be\n         *      - A country code\n         *      - Name of field which its value defines the country code\n         *      - Name of callback function that returns the country code\n         *      - A callback function that returns the country code\n         *\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var locale  = validator.getLocale(),\n                country = options.country;\n            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\n                // Try to determine the country\n                country = validator.getDynamicOption($field, country);\n            }\n\n            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\n                return true;\n            }\n\n            var isValid = true;\n            switch (country.toUpperCase()) {\n                case 'AE':\n                    // http://regexr.com/39tak\n                    value   = $.trim(value);\n                    isValid = (/^(((\\+|00)?971[\\s\\.-]?(\\(0\\)[\\s\\.-]?)?|0)(\\(5(0|2|5|6)\\)|5(0|2|5|6)|2|3|4|6|7|9)|60)([\\s\\.-]?[0-9]){7}$/).test(value);\n                    break;\n                    \n                case 'BG':\n                    // https://regex101.com/r/yE6vN4/1\n                    // See http://en.wikipedia.org/wiki/Telephone_numbers_in_Bulgaria\n                    value   = value.replace(/\\+|\\s|-|\\/|\\(|\\)/gi,'');\n                    isValid = (/^(0|359|00)(((700|900)[0-9]{5}|((800)[0-9]{5}|(800)[0-9]{4}))|(87|88|89)([0-9]{7})|((2[0-9]{7})|(([3-9][0-9])(([0-9]{6})|([0-9]{5})))))$/).test(value);\n                    break;\n\n                case 'BR':\n                    // http://regexr.com/399m1\n                    value   = $.trim(value);\n                    isValid = (/^(([\\d]{4}[-.\\s]{1}[\\d]{2,3}[-.\\s]{1}[\\d]{2}[-.\\s]{1}[\\d]{2})|([\\d]{4}[-.\\s]{1}[\\d]{3}[-.\\s]{1}[\\d]{4})|((\\(?\\+?[0-9]{2}\\)?\\s?)?(\\(?\\d{2}\\)?\\s?)?\\d{4,5}[-.\\s]?\\d{4}))$/).test(value);\n                    break;\n\n                case 'CN':\n                    // http://regexr.com/39dq4\n                    value   = $.trim(value);\n                    isValid = (/^((00|\\+)?(86(?:-| )))?((\\d{11})|(\\d{3}[- ]{1}\\d{4}[- ]{1}\\d{4})|((\\d{2,4}[- ]){1}(\\d{7,8}|(\\d{3,4}[- ]{1}\\d{4}))([- ]{1}\\d{1,4})?))$/).test(value);\n                    break;\n\n                case 'CZ':\n                    // http://regexr.com/39hhl\n                    isValid = /^(((00)([- ]?)|\\+)(420)([- ]?))?((\\d{3})([- ]?)){2}(\\d{3})$/.test(value);\n                    break;\n\n                case 'DE':\n                    // http://regexr.com/39pkg\n                    value   = $.trim(value);\n                    isValid = (/^(((((((00|\\+)49[ \\-/]?)|0)[1-9][0-9]{1,4})[ \\-/]?)|((((00|\\+)49\\()|\\(0)[1-9][0-9]{1,4}\\)[ \\-/]?))[0-9]{1,7}([ \\-/]?[0-9]{1,5})?)$/).test(value);\n                    break;\n\n                case 'DK':\n                    // Mathing DK phone numbers with country code in 1 of 3 formats and an\n                    // 8 digit phone number not starting with a 0 or 1. Can have 1 space\n                    // between each character except inside the country code.\n                    // http://regex101.com/r/sS8fO4/1\n                    value   = $.trim(value);\n                    isValid = (/^(\\+45|0045|\\(45\\))?\\s?[2-9](\\s?\\d){7}$/).test(value);\n                    break;\n\n                case 'ES':\n                    // http://regex101.com/r/rB9mA9/1\n                    // Telephone numbers in Spain go like this:\n                    //     9: Landline phones and special prefixes.\n                    //     6, 7: Mobile phones.\n                    //     5: VoIP lines.\n                    //     8: Premium-rate services.\n                    // There are also special 5-digit and 3-digit numbers, but\n                    // maybe it would be overkill to include them all.\n                    value   = $.trim(value);\n                    isValid = (/^(?:(?:(?:\\+|00)34\\D?))?(?:5|6|7|8|9)(?:\\d\\D?){8}$/).test(value);\n                    break;\n\n                case 'FR':\n                    // http://regexr.com/39a2p\n                    value   = $.trim(value);\n                    isValid = (/^(?:(?:(?:\\+|00)33[ ]?(?:\\(0\\)[ ]?)?)|0){1}[1-9]{1}([ .-]?)(?:\\d{2}\\1?){3}\\d{2}$/).test(value);\n                    break;\n\n            \tcase 'GB':\n                    // http://aa-asterisk.org.uk/index.php/Regular_Expressions_for_Validating_and_Formatting_GB_Telephone_Numbers#Match_GB_telephone_number_in_any_format\n                    // http://regexr.com/38uhv\n                    value   = $.trim(value);\n                    isValid = (/^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$/).test(value);\n                    break;\n            \n                case 'IN':\n                    // http://stackoverflow.com/questions/18351553/regular-expression-validation-for-indian-phone-number-and-mobile-number\n                    // http://regex101.com/r/qL6eZ5/1\n                    // May begin with +91. Supports mobile and land line numbers\n                    value   = $.trim(value);\n                    isValid = (/((\\+?)((0[ -]+)*|(91 )*)(\\d{12}|\\d{10}))|\\d{5}([- ]*)\\d{6}/).test(value);\n                    break;\n                    \n                case 'MA':\n                    // http://en.wikipedia.org/wiki/Telephone_numbers_in_Morocco\n                    // http://regexr.com/399n8\n                    value   = $.trim(value);\n                    isValid = (/^(?:(?:(?:\\+|00)212[\\s]?(?:[\\s]?\\(0\\)[\\s]?)?)|0){1}(?:5[\\s.-]?[2-3]|6[\\s.-]?[13-9]){1}[0-9]{1}(?:[\\s.-]?\\d{2}){3}$/).test(value);\n                    break;\n                \n                case 'NL':\n                    // http://en.wikipedia.org/wiki/Telephone_numbers_in_the_Netherlands\n                    // http://regexr.com/3aevr\n                    value   = $.trim(value);\n                    isValid = (/^((\\+|00(\\s|\\s?\\-\\s?)?)31(\\s|\\s?\\-\\s?)?(\\(0\\)[\\-\\s]?)?|0)[1-9]((\\s|\\s?\\-\\s?)?[0-9])((\\s|\\s?-\\s?)?[0-9])((\\s|\\s?-\\s?)?[0-9])\\s?[0-9]\\s?[0-9]\\s?[0-9]\\s?[0-9]\\s?[0-9]$/gm).test(value);\n                    break;\n                \n                case 'PK':\n                    // http://regex101.com/r/yH8aV9/2\n                    value   = $.trim(value);\n                    isValid = (/^0?3[0-9]{2}[0-9]{7}$/).test(value);\n                    break;\n\n                case 'RO':\n                    // All mobile network and land line\n                    // http://regexr.com/39fv1\n                    isValid = (/^(\\+4|)?(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\\s|\\.|\\-)?([0-9]{3}(\\s|\\.|\\-|)){2}$/g).test(value);\n                    break;\n\n                case 'RU':\n                    // http://regex101.com/r/gW7yT5/5\n                    isValid = (/^((8|\\+7|007)[\\-\\.\\/ ]?)?([\\(\\/\\.]?\\d{3}[\\)\\/\\.]?[\\-\\.\\/ ]?)?[\\d\\-\\.\\/ ]{7,10}$/g).test(value);\n                    break;\n\n                case 'SK':\n                    // http://regexr.com/3a95f\n                    isValid = /^(((00)([- ]?)|\\+)(421)([- ]?))?((\\d{3})([- ]?)){2}(\\d{3})$/.test(value);\n                    break;\n\n                case 'TH':\n                    // http://regex101.com/r/vM5mZ4/2\n                    isValid = (/^0\\(?([6|8-9]{2})*-([0-9]{3})*-([0-9]{4})$/).test(value);\n                    break;\n\n                case 'VE':\n                    // http://regex101.com/r/eM2yY0/6\n                    value   = $.trim(value);\n                    isValid = (/^0(?:2(?:12|4[0-9]|5[1-9]|6[0-9]|7[0-8]|8[1-35-8]|9[1-5]|3[45789])|4(?:1[246]|2[46]))\\d{7}$/).test(value);\n                    break;\n  \n                case 'US':\n                /* falls through */\n                default:\n                    // Make sure US phone numbers have 10 digits\n                    // May start with 1, +1, or 1-; should discard\n                    // Area code may be delimited with (), & sections may be delimited with . or -\n                    // http://regexr.com/38mqi\n                    isValid = (/^(?:(1\\-?)|(\\+1 ?))?\\(?\\d{3}\\)?\\s?[\\-\\.]?\\d{3}[\\-\\.]?\\d{4}$/).test(value);\n                    break;\n            }\n\n            return {\n                valid: isValid,\n                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].phone.country, FormValidation.I18n[locale].phone.countries[country])\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            promise: {\n                'default': 'Please enter a valid value'\n            }\n        }\n    });\n\n    FormValidation.Validator.promise = {\n        priority: 999,\n\n        html5Attributes: {\n            message: 'message',\n            promise: 'promise'\n        },\n\n        /**\n         * Return result from a jQuery's Deferred object\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - promise: The method that passes parameters:\n         *      promise: function(fieldValue, validator, $field) {\n         *          // fieldValue is the value of field\n         *          // validator is instance of FormValidation.Base\n         *          // $field is the field element\n         *\n         *          var dfd = new $.Deferred();\n         *\n         *          // Do something ...\n         *\n         *          // Resolve when particular task is done\n         *          dfd.resolve({\n         *              valid: true or false,       // Required\n         *              message: 'Other message',   // Optional\n         *              key: value                  // You can attach more data to reuse later\n         *          });\n         *\n         *          // You can reject if there's error\n         *          dfd.reject({\n         *              message: 'Other message',   // Optional\n         *              key: value                  // You can attach more data to reuse later\n         *          });\n         *\n         *          return dfd.promise();\n         *      }\n         * - message: The invalid message\n         * @returns {Deferred}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value   = validator.getFieldValue($field, validatorName),\n                dfd     = new $.Deferred(),\n                promise = FormValidation.Helper.call(options.promise, [value, validator, $field]);\n\n            promise\n                .done(function(result) {\n                    dfd.resolve($field, validatorName, result);\n                })\n                .fail(function(result) {\n                    result = result || {};\n                    result.valid = false;\n                    dfd.resolve($field, validatorName, result);\n                });\n\n            return dfd;\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            regexp: {\n                'default': 'Please enter a value matching the pattern'\n            }\n        }\n    });\n\n    FormValidation.Validator.regexp = {\n        html5Attributes: {\n            message: 'message',\n            flags: 'flags',\n            regexp: 'regexp'\n        },\n\n        enableByHtml5: function($field) {\n            var pattern = $field.attr('pattern');\n            if (pattern) {\n                return {\n                    regexp: pattern\n                };\n            }\n\n            return false;\n        },\n\n        /**\n         * Check if the element value matches given regular expression\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of the following key:\n         * - regexp: The regular expression you need to check\n         * - flags: If specified, flags can have any combination of Javascript regular expression flags such as:\n         *      g: global match\n         *      i: ignore case\n         *      m: multiple line\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var regexp = ('string' === typeof options.regexp)\n                        ? (options.flags ? new RegExp(options.regexp, options.flags) : new RegExp(options.regexp))\n                        : options.regexp;\n            return regexp.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            remote: {\n                'default': 'Please enter a valid value'\n            }\n        }\n    });\n\n    FormValidation.Validator.remote = {\n        priority: 1000,\n\n        html5Attributes: {\n            async: 'async',\n            crossdomain: 'crossDomain',\n            data: 'data',\n            datatype: 'dataType',\n            delay: 'delay',\n            message: 'message',\n            name: 'name',\n            type: 'type',\n            url: 'url',\n            validkey: 'validKey'\n        },\n\n        /**\n         * Destroy the timer when destroying the FormValidation (using validator.destroy() method)\n         */\n        destroy: function(validator, $field, options, validatorName) {\n            var ns    = validator.getNamespace(),\n                timer = $field.data(ns + '.' + validatorName + '.timer');\n            if (timer) {\n                clearTimeout(timer);\n                $field.removeData(ns + '.' + validatorName + '.timer');\n            }\n        },\n\n        /**\n         * Request a remote server to check the input value\n         *\n         * @param {FormValidation.Base} validator Plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - async {Boolean} [optional] Indicate the Ajax request will be asynchronous or not. It's true by default\n         * - crossDomain {Boolean} [optional]\n         * - data {Object|Function} [optional]: By default, it will take the value\n         *  {\n         *      <fieldName>: <fieldValue>\n         *  }\n         * - dataType {String} [optional]: The type of data which is returned by remote server.\n         * It can be json (default), text, script\n         * - delay {Number} [optional]\n         * - headers {String[]} [optional]: Additional headers\n         * - message {String} [optional]: The invalid message\n         * - name {String} [optional]: Override the field name for the request.\n         * - type {String} [optional] Can be GET or POST (default)\n         * - url {String|Function}\n         * - validKey {String} [optional]: The valid key. It's \"valid\" by default\n         * This is useful when connecting to external remote server or APIs provided by 3rd parties\n         * @returns {Deferred}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var ns    = validator.getNamespace(),\n                value = validator.getFieldValue($field, validatorName),\n                dfd   = new $.Deferred();\n            if (value === '') {\n                dfd.resolve($field, validatorName, { valid: true });\n                return dfd;\n            }\n            var name     = $field.attr('data-' + ns + '-field'),\n                data     = options.data || {},\n                url      = options.url,\n                validKey = options.validKey || 'valid';\n\n            // Support dynamic data\n            if ('function' === typeof data) {\n                data = data.call(this, validator, $field, value);\n            }\n\n            // Parse string data from HTML5 attribute\n            if ('string' === typeof data) {\n                data = JSON.parse(data);\n            }\n\n            // Support dynamic url\n            if ('function' === typeof url) {\n                url = url.call(this, validator, $field, value);\n            }\n\n            data[options.name || name] = value;\n\n            var ajaxOptions = {\n                async: options.async === null || options.async === true || options.async === 'true',\n                data: data,\n                dataType: options.dataType || 'json',\n                headers: options.headers || {},\n                type: options.type || 'GET',\n                url: url\n            };\n            if (options.crossDomain !== null) {\n                ajaxOptions.crossDomain = (options.crossDomain === true || options.crossDomain === 'true');\n            }\n\n            function runCallback() {\n                var xhr = $.ajax(ajaxOptions);\n\n                xhr\n                    .success(function(response) {\n                        response.valid = (response[validKey] === true || response[validKey] === 'true')\n                                        ? true\n                                        : (response[validKey] === false || response[validKey] === 'false' ? false : null);\n                        dfd.resolve($field, validatorName, response);\n                    })\n                    .error(function(response) {\n                        dfd.resolve($field, validatorName, {\n                            valid: false\n                        });\n                    });\n\n                dfd.fail(function() {\n                    xhr.abort();\n                });\n\n                return dfd;\n            }\n            \n            if (options.delay) {\n                // Since the form might have multiple fields with the same name\n                // I have to attach the timer to the field element\n                if ($field.data(ns + '.' + validatorName + '.timer')) {\n                    clearTimeout($field.data(ns + '.' + validatorName + '.timer'));\n                }\n\n                $field.data(ns + '.' + validatorName + '.timer', setTimeout(runCallback, options.delay));\n                return dfd;\n            } else {\n                return runCallback();\n            }\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            rtn: {\n                'default': 'Please enter a valid RTN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.rtn = {\n        /**\n         * Validate a RTN (Routing transit number)\n         *\n         * @see http://en.wikipedia.org/wiki/Routing_transit_number\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            if (!/^\\d{9}$/.test(value)) {\n                return false;\n            }\n\n            var sum = 0;\n            for (var i = 0; i < value.length; i += 3) {\n                sum += parseInt(value.charAt(i),     10) * 3\n                    +  parseInt(value.charAt(i + 1), 10) * 7\n                    +  parseInt(value.charAt(i + 2), 10);\n            }\n            return (sum !== 0 && sum % 10 === 0);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            sedol: {\n                'default': 'Please enter a valid SEDOL number'\n            }\n        }\n    });\n\n    FormValidation.Validator.sedol = {\n        /**\n         * Validate a SEDOL (Stock Exchange Daily Official List)\n         *\n         * @see http://en.wikipedia.org/wiki/SEDOL\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            value = value.toUpperCase();\n            if (!/^[0-9A-Z]{7}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [1, 3, 1, 7, 3, 9, 1],\n                length = value.length;\n            for (var i = 0; i < length - 1; i++) {\n\t            sum += weight[i] * parseInt(value.charAt(i), 36);\n\t        }\n\t        sum = (10 - sum % 10) % 10;\n            return sum + '' === value.charAt(length - 1);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n\t\t'en_US': {\n\t\t\tsiren: {\n\t\t\t\t'default': 'Please enter a valid SIREN number'\n\t\t\t}\n\t\t}\n    });\n\n\tFormValidation.Validator.siren = {\n\t\t/**\n\t\t * Check if a string is a siren number\n\t\t *\n\t\t * @param {FormValidation.Base} validator The validator plugin instance\n\t\t * @param {jQuery} $field Field element\n\t\t * @param {Object} options Consist of key:\n         * - message: The invalid message\n\t\t * @returns {Boolean}\n\t\t */\n\t\tvalidate: function(validator, $field, options, validatorName) {\n\t\t\tvar value = validator.getFieldValue($field, validatorName);\n\t\t\tif (value === '') {\n\t\t\t\treturn true;\n\t\t\t}\n\n            if (!/^\\d{9}$/.test(value)) {\n                return false;\n            }\n            return FormValidation.Helper.luhn(value);\n\t\t}\n\t};\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n\t\t'en_US': {\n\t\t\tsiret: {\n\t\t\t\t'default': 'Please enter a valid SIRET number'\n\t\t\t}\n\t\t}\n    });\n\n\tFormValidation.Validator.siret = {\n        /**\n         * Check if a string is a siret number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n\t\tvalidate: function(validator, $field, options, validatorName) {\n\t\t\tvar value = validator.getFieldValue($field, validatorName);\n\t\t\tif (value === '') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar sum    = 0,\n                length = value.length,\n                tmp;\n\t\t\tfor (var i = 0; i < length; i++) {\n                tmp = parseInt(value.charAt(i), 10);\n\t\t\t\tif ((i % 2) === 0) {\n\t\t\t\t\ttmp = tmp * 2;\n\t\t\t\t\tif (tmp > 9) {\n\t\t\t\t\t\ttmp -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsum += tmp;\n\t\t\t}\n\t\t\treturn (sum % 10 === 0);\n\t\t}\n\t};\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            step: {\n                'default': 'Please enter a valid step of %s'\n            }\n        }\n    });\n\n    FormValidation.Validator.step = {\n        html5Attributes: {\n            message: 'message',\n            base: 'baseValue',\n            step: 'step'\n        },\n\n        /**\n         * Return true if the input value is valid step one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Can consist of the following keys:\n         * - baseValue: The base value\n         * - step: The step\n         * - message: The invalid message\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            options = $.extend({}, { baseValue: 0, step: 1 }, options);\n            value   = parseFloat(value);\n            if (!$.isNumeric(value)) {\n                return false;\n            }\n\n            var round = function(x, precision) {\n                    var m = Math.pow(10, precision);\n                    x = x * m;\n                    var sign   = (x > 0) | -(x < 0),\n                        isHalf = (x % 1 === 0.5 * sign);\n                    if (isHalf) {\n                        return (Math.floor(x) + (sign > 0)) / m;\n                    } else {\n                        return Math.round(x) / m;\n                    }\n                },\n                floatMod = function(x, y) {\n                    if (y === 0.0) {\n                        return 1.0;\n                    }\n                    var dotX      = (x + '').split('.'),\n                        dotY      = (y + '').split('.'),\n                        precision = ((dotX.length === 1) ? 0 : dotX[1].length) + ((dotY.length === 1) ? 0 : dotY[1].length);\n                    return round(x - y * Math.floor(x / y), precision);\n                };\n\n            var locale = validator.getLocale(),\n                mod    = floatMod(value - options.baseValue, options.step);\n            return {\n                valid: mod === 0.0 || mod === options.step,\n                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].step['default'], [options.step])\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            stringCase: {\n                'default': 'Please enter only lowercase characters',\n                upper: 'Please enter only uppercase characters'\n            }\n        }\n    });\n\n    FormValidation.Validator.stringCase = {\n        html5Attributes: {\n            message: 'message',\n            'case': 'case'\n        },\n\n        /**\n         * Check if a string is a lower or upper case one\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - case: Can be 'lower' (default) or 'upper'\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var locale     = validator.getLocale(),\n                stringCase = (options['case'] || 'lower').toLowerCase();\n            return {\n                valid: ('upper' === stringCase) ? value === value.toUpperCase() : value === value.toLowerCase(),\n                message: options.message || (('upper' === stringCase) ? FormValidation.I18n[locale].stringCase.upper : FormValidation.I18n[locale].stringCase['default'])\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            stringLength: {\n                'default': 'Please enter a value with valid length',\n                less: 'Please enter less than %s characters',\n                more: 'Please enter more than %s characters',\n                between: 'Please enter value between %s and %s characters long'\n            }\n        }\n    });\n\n    FormValidation.Validator.stringLength = {\n        html5Attributes: {\n            message: 'message',\n            min: 'min',\n            max: 'max',\n            trim: 'trim',\n            utf8bytes: 'utf8Bytes'\n        },\n\n        enableByHtml5: function($field) {\n            var options   = {},\n                maxLength = $field.attr('maxlength'),\n                minLength = $field.attr('minlength');\n            if (maxLength) {\n                options.max = parseInt(maxLength, 10);\n            }\n            if (minLength) {\n                options.min = parseInt(minLength, 10);\n            }\n\n            return $.isEmptyObject(options) ? false : options;\n        },\n\n        /**\n         * Check if the length of element value is less or more than given number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consists of following keys:\n         * - min\n         * - max\n         * At least one of two keys is required\n         * The min, max keys define the number which the field value compares to. min, max can be\n         *      - A number\n         *      - Name of field which its value defines the number\n         *      - Name of callback function that returns the number\n         *      - A callback function that returns the number\n         *\n         * - message: The invalid message\n         * - trim: Indicate the length will be calculated after trimming the value or not. It is false, by default\n         * - utf8bytes: Evaluate string length in UTF-8 bytes, default to false\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (options.trim === true || options.trim === 'true') {\n                value = $.trim(value);\n            }\n\n            if (value === '') {\n                return true;\n            }\n\n            var locale     = validator.getLocale(),\n                min        = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\n                max        = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\n                // Credit to http://stackoverflow.com/a/23329386 (@lovasoa) for UTF-8 byte length code\n                utf8Length = function(str) {\n                                 var s = str.length;\n                                 for (var i = str.length - 1; i >= 0; i--) {\n                                     var code = str.charCodeAt(i);\n                                     if (code > 0x7f && code <= 0x7ff) {\n                                         s++;\n                                     } else if (code > 0x7ff && code <= 0xffff) {\n                                         s += 2;\n                                     }\n                                     if (code >= 0xDC00 && code <= 0xDFFF) {\n                                         i--;\n                                     }\n                                 }\n                                 return s;\n                             },\n                length     = options.utf8Bytes ? utf8Length(value) : value.length,\n                isValid    = true,\n                message    = options.message || FormValidation.I18n[locale].stringLength['default'];\n\n            if ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {\n                isValid = false;\n            }\n\n            switch (true) {\n                case (!!min && !!max):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);\n                    break;\n\n                case (!!min):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.more, parseInt(min, 10) - 1);\n                    break;\n\n                case (!!max):\n                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.less, parseInt(max, 10) + 1);\n                    break;\n\n                default:\n                    break;\n            }\n\n            return {\n                valid: isValid,\n                message: message\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            uri: {\n                'default': 'Please enter a valid URI'\n            }\n        }\n    });\n\n    FormValidation.Validator.uri = {\n        html5Attributes: {\n            message: 'message',\n            allowlocal: 'allowLocal',\n            allowemptyprotocol: 'allowEmptyProtocol',\n            protocol: 'protocol'\n        },\n\n        enableByHtml5: function($field) {\n            return ('url' === $field.attr('type'));\n        },\n\n        /**\n         * Return true if the input value is a valid URL\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options\n         * - message: The error message\n         * - allowLocal: Allow the private and local network IP. Default to false\n         * - allowEmptyProtocol: Allow the URI without protocol. Default to false\n         * - protocol: The protocols, separated by a comma. Default to \"http, https, ftp\"\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Credit to https://gist.github.com/dperini/729294\n            //\n            // Regular Expression for URL validation\n            //\n            // Author: Diego Perini\n            // Updated: 2010/12/05\n            //\n            // the regular expression composed & commented\n            // could be easily tweaked for RFC compliance,\n            // it was expressly modified to fit & satisfy\n            // these test for an URL shortener:\n            //\n            //   http://mathiasbynens.be/demo/url-regex\n            //\n            // Notes on possible differences from a standard/generic validation:\n            //\n            // - utf-8 char class take in consideration the full Unicode range\n            // - TLDs are mandatory unless `allowLocal` is true\n            // - protocols have been restricted to ftp, http and https only as requested\n            //\n            // Changes:\n            //\n            // - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n            //   first and last IP address of each class is considered invalid\n            //   (since they are broadcast/network addresses)\n            //\n            // - Added exclusion of private, reserved and/or local networks ranges\n            //   unless `allowLocal` is true\n            //\n            // - Added possibility of choosing a custom protocol\n            //\n            // - Add option to validate without protocol\n            //\n            var allowLocal         = options.allowLocal === true || options.allowLocal === 'true',\n                allowEmptyProtocol = options.allowEmptyProtocol === true || options.allowEmptyProtocol === 'true',\n                protocol           = (options.protocol || 'http, https, ftp').split(',').join('|').replace(/\\s/g, ''),\n                urlExp             = new RegExp(\n                    \"^\" +\n                    // protocol identifier\n                    \"(?:(?:\" + protocol + \")://)\" +\n                    // allow empty protocol\n                    (allowEmptyProtocol ? '?' : '') +\n                    // user:pass authentication\n                    \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n                    \"(?:\" +\n                    // IP address exclusion\n                    // private & local networks\n                    (allowLocal\n                        ? ''\n                        : (\"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\n                           \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\n                           \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\")) +\n                    // IP address dotted notation octets\n                    // excludes loopback network 0.0.0.0\n                    // excludes reserved space >= 224.0.0.0\n                    // excludes network & broadcast addresses\n                    // (first & last IP address of each class)\n                    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n                    \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n                    \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n                    \"|\" +\n                    // host name\n                    \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n                    // domain name\n                    \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-?)*[a-z\\\\u00a1-\\\\uffff0-9])*\" +\n                    // TLD identifier\n                    \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\n                    // Allow intranet sites (no TLD) if `allowLocal` is true\n                    (allowLocal ? '?' : '') +\n                    \")\" +\n                    // port number\n                    \"(?::\\\\d{2,5})?\" +\n                    // resource path\n                    \"(?:/[^\\\\s]*)?\" +\n                    \"$\", \"i\"\n                );\n\n            return urlExp.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            uuid: {\n                'default': 'Please enter a valid UUID number',\n                version: 'Please enter a valid UUID version %s number'\n            }\n        }\n    });\n\n    FormValidation.Validator.uuid = {\n        html5Attributes: {\n            message: 'message',\n            version: 'version'\n        },\n\n        /**\n         * Return true if and only if the input value is a valid UUID string\n         *\n         * @see http://en.wikipedia.org/wiki/Universally_unique_identifier\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - version: Can be 3, 4, 5, null\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // See the format at http://en.wikipedia.org/wiki/Universally_unique_identifier#Variants_and_versions\n            var locale   = validator.getLocale(),\n                patterns = {\n                    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n                    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n                    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n                    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n                },\n                version = options.version ? (options.version + '') : 'all';\n            return {\n                valid: (null === patterns[version]) ? true : patterns[version].test(value),\n                message: options.version\n                            ? FormValidation.Helper.format(options.message || FormValidation.I18n[locale].uuid.version, options.version)\n                            : (options.message || FormValidation.I18n[locale].uuid['default'])\n            };\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            vat: {\n                'default': 'Please enter a valid VAT number',\n                country: 'Please enter a valid VAT number in %s',\n                countries: {\n                    AT: 'Austria',\n                    BE: 'Belgium',\n                    BG: 'Bulgaria',\n                    BR: 'Brazil',\n                    CH: 'Switzerland',\n                    CY: 'Cyprus',\n                    CZ: 'Czech Republic',\n                    DE: 'Germany',\n                    DK: 'Denmark',\n                    EE: 'Estonia',\n                    ES: 'Spain',\n                    FI: 'Finland',\n                    FR: 'France',\n                    GB: 'United Kingdom',\n                    GR: 'Greek',\n                    EL: 'Greek',\n                    HU: 'Hungary',\n                    HR: 'Croatia',\n                    IE: 'Ireland',\n                    IS: 'Iceland',\n                    IT: 'Italy',\n                    LT: 'Lithuania',\n                    LU: 'Luxembourg',\n                    LV: 'Latvia',\n                    MT: 'Malta',\n                    NL: 'Netherlands',\n                    NO: 'Norway',\n                    PL: 'Poland',\n                    PT: 'Portugal',\n                    RO: 'Romania',\n                    RU: 'Russia',\n                    RS: 'Serbia',\n                    SE: 'Sweden',\n                    SI: 'Slovenia',\n                    SK: 'Slovakia',\n                    VE: 'Venezuela',\n                    ZA: 'South Africa'\n                }\n            }\n        }\n    });\n\n    FormValidation.Validator.vat = {\n        html5Attributes: {\n            message: 'message',\n            country: 'country'\n        },\n\n        // Supported country codes\n        COUNTRY_CODES: [\n            'AT', 'BE', 'BG', 'BR', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'EL', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU',\n            'IE', 'IS', 'IT', 'LT', 'LU', 'LV', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'RU', 'RS', 'SE', 'SK', 'SI', 'VE',\n            'ZA'\n        ],\n\n        /**\n         * Validate an European VAT number\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - country: The ISO 3166-1 country code. It can be\n         *      - One of country code defined in COUNTRY_CODES\n         *      - Name of field which its value defines the country code\n         *      - Name of callback function that returns the country code\n         *      - A callback function that returns the country code\n         * @returns {Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            var locale  = validator.getLocale(),\n                country = options.country;\n            if (!country) {\n                country = value.substr(0, 2);\n            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\n                // Determine the country code\n                country = validator.getDynamicOption($field, country);\n            }\n\n            if ($.inArray(country, this.COUNTRY_CODES) === -1) {\n                return true;\n            }\n\n            var method  = ['_', country.toLowerCase()].join(''),\n                result = this[method](value);\n            result         = (result === true || result === false) ? { valid: result } : result;\n            result.message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].vat.country, FormValidation.I18n[locale].vat.countries[country.toUpperCase()]);\n\n            return result;\n        },\n\n        // VAT validators\n\n        /**\n         * Validate Austrian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _at: function(value) {\n            if (/^ATU[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^U[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            value = value.substr(1);\n            var sum    = 0,\n                weight = [1, 2, 1, 2, 1, 2, 1],\n                temp   = 0;\n            for (var i = 0; i < 7; i++) {\n                temp = parseInt(value.charAt(i), 10) * weight[i];\n                if (temp > 9) {\n                    temp = Math.floor(temp / 10) + temp % 10;\n                }\n                sum += temp;\n            }\n\n            sum = 10 - (sum + 4) % 10;\n            if (sum === 10) {\n                sum = 0;\n            }\n\n            return (sum + '' === value.substr(7, 1));\n        },\n\n        /**\n         * Validate Belgian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _be: function(value) {\n            if (/^BE[0]{0,1}[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0]{0,1}[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            if (value.length === 9) {\n                value = '0' + value;\n            }\n            if (value.substr(1, 1) === '0') {\n                return false;\n            }\n\n            var sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);\n            return (sum % 97 === 0);\n        },\n\n        /**\n         * Validate Bulgarian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _bg: function(value) {\n            if (/^BG[0-9]{9,10}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9,10}$/.test(value)) {\n                return false;\n            }\n\n            var sum = 0, i = 0;\n\n            // Legal entities\n            if (value.length === 9) {\n                for (i = 0; i < 8; i++) {\n                    sum += parseInt(value.charAt(i), 10) * (i + 1);\n                }\n                sum = sum % 11;\n                if (sum === 10) {\n                    sum = 0;\n                    for (i = 0; i < 8; i++) {\n                        sum += parseInt(value.charAt(i), 10) * (i + 3);\n                    }\n                }\n                sum = sum % 10;\n                return (sum + '' === value.substr(8));\n            }\n            // Physical persons, foreigners and others\n            else if (value.length === 10) {\n                // Validate Bulgarian national identification numbers\n                var egn = function(value) {\n                        // Check the birth date\n                        var year  = parseInt(value.substr(0, 2), 10) + 1900,\n                            month = parseInt(value.substr(2, 2), 10),\n                            day   = parseInt(value.substr(4, 2), 10);\n                        if (month > 40) {\n                            year += 100;\n                            month -= 40;\n                        } else if (month > 20) {\n                            year -= 100;\n                            month -= 20;\n                        }\n\n                        if (!FormValidation.Helper.date(year, month, day)) {\n                            return false;\n                        }\n\n                        var sum    = 0,\n                            weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n                        for (var i = 0; i < 9; i++) {\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\n                        }\n                        sum = (sum % 11) % 10;\n                        return (sum + '' === value.substr(9, 1));\n                    },\n                    // Validate Bulgarian personal number of a foreigner\n                    pnf = function(value) {\n                        var sum    = 0,\n                            weight = [21, 19, 17, 13, 11, 9, 7, 3, 1];\n                        for (var i = 0; i < 9; i++) {\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\n                        }\n                        sum = sum % 10;\n                        return (sum + '' === value.substr(9, 1));\n                    },\n                    // Finally, consider it as a VAT number\n                    vat = function(value) {\n                        var sum    = 0,\n                            weight = [4, 3, 2, 7, 6, 5, 4, 3, 2];\n                        for (var i = 0; i < 9; i++) {\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\n                        }\n                        sum = 11 - sum % 11;\n                        if (sum === 10) {\n                            return false;\n                        }\n                        if (sum === 11) {\n                            sum = 0;\n                        }\n                        return (sum + '' === value.substr(9, 1));\n                    };\n                return (egn(value) || pnf(value) || vat(value));\n            }\n\n            return false;\n        },\n        \n        /**\n         * Validate Brazilian VAT number (CNPJ)\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _br: function(value) {\n            if (value === '') {\n                return true;\n            }\n            var cnpj = value.replace(/[^\\d]+/g, '');\n            if (cnpj === '' || cnpj.length !== 14) {\n                return false;\n            }\n\n            // Remove invalids CNPJs\n            if (cnpj === '00000000000000' || cnpj === '11111111111111' || cnpj === '22222222222222' ||\n                cnpj === '33333333333333' || cnpj === '44444444444444' || cnpj === '55555555555555' ||\n                cnpj === '66666666666666' || cnpj === '77777777777777' || cnpj === '88888888888888' ||\n                cnpj === '99999999999999')\n            {\n                return false;\n            }\n\n            // Validate verification digits\n            var length  = cnpj.length - 2,\n                numbers = cnpj.substring(0, length),\n                digits  = cnpj.substring(length),\n                sum     = 0,\n                pos     = length - 7;\n\n            for (var i = length; i >= 1; i--) {\n                sum += parseInt(numbers.charAt(length - i), 10) * pos--;\n                if (pos < 2) {\n                    pos = 9;\n                }\n            }\n\n            var result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n            if (result !== parseInt(digits.charAt(0), 10)) {\n                return false;\n            }\n\n            length  = length + 1;\n            numbers = cnpj.substring(0, length);\n            sum     = 0;\n            pos     = length - 7;\n            for (i = length; i >= 1; i--) {\n                sum += parseInt(numbers.charAt(length - i), 10) * pos--;\n                if (pos < 2) {\n                    pos = 9;\n                }\n            }\n\n            result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n            return (result === parseInt(digits.charAt(1), 10));\n        },\n\n        /**\n         * Validate Swiss VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ch: function(value) {\n            if (/^CHE[0-9]{9}(MWST)?$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^E[0-9]{9}(MWST)?$/.test(value)) {\n                return false;\n            }\n\n            value = value.substr(1);\n            var sum    = 0,\n                weight = [5, 4, 3, 2, 7, 6, 5, 4];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            sum = 11 - sum % 11;\n            if (sum === 10) {\n                return false;\n            }\n            if (sum === 11) {\n                sum = 0;\n            }\n\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        /**\n         * Validate Cypriot VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _cy: function(value) {\n            if (/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {\n                return false;\n            }\n\n            // Do not allow to start with \"12\"\n            if (value.substr(0, 2) === '12') {\n                return false;\n            }\n\n            // Extract the next digit and multiply by the counter.\n            var sum         = 0,\n                translation = {\n                    '0': 1,  '1': 0,  '2': 5,  '3': 7,  '4': 9,\n                    '5': 13, '6': 15, '7': 17, '8': 19, '9': 21\n                };\n            for (var i = 0; i < 8; i++) {\n                var temp = parseInt(value.charAt(i), 10);\n                if (i % 2 === 0) {\n                    temp = translation[temp + ''];\n                }\n                sum += temp;\n            }\n\n            sum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[sum % 26];\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        /**\n         * Validate Czech Republic VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _cz: function(value) {\n            if (/^CZ[0-9]{8,10}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8,10}$/.test(value)) {\n                return false;\n            }\n\n            var sum = 0,\n                i   = 0;\n            if (value.length === 8) {\n                // Do not allow to start with '9'\n                if (value.charAt(0) + '' === '9') {\n                    return false;\n                }\n\n                sum = 0;\n                for (i = 0; i < 7; i++) {\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\n                }\n                sum = 11 - sum % 11;\n                if (sum === 10) {\n                    sum = 0;\n                }\n                if (sum === 11) {\n                    sum = 1;\n                }\n\n                return (sum + '' === value.substr(7, 1));\n            } else if (value.length === 9 && (value.charAt(0) + '' === '6')) {\n                sum = 0;\n                // Skip the first (which is 6)\n                for (i = 0; i < 7; i++) {\n                    sum += parseInt(value.charAt(i + 1), 10) * (8 - i);\n                }\n                sum = 11 - sum % 11;\n                if (sum === 10) {\n                    sum = 0;\n                }\n                if (sum === 11) {\n                    sum = 1;\n                }\n                sum = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][sum - 1];\n                return (sum + '' === value.substr(8, 1));\n            } else if (value.length === 9 || value.length === 10) {\n                // Validate Czech birth number (Rodné číslo), which is also national identifier\n                var year  = 1900 + parseInt(value.substr(0, 2), 10),\n                    month = parseInt(value.substr(2, 2), 10) % 50 % 20,\n                    day   = parseInt(value.substr(4, 2), 10);\n                if (value.length === 9) {\n                    if (year >= 1980) {\n                        year -= 100;\n                    }\n                    if (year > 1953) {\n                        return false;\n                    }\n                } else if (year < 1954) {\n                    year += 100;\n                }\n\n                if (!FormValidation.Helper.date(year, month, day)) {\n                    return false;\n                }\n\n                // Check that the birth date is not in the future\n                if (value.length === 10) {\n                    var check = parseInt(value.substr(0, 9), 10) % 11;\n                    if (year < 1985) {\n                        check = check % 10;\n                    }\n                    return (check + '' === value.substr(9, 1));\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Validate German VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _de: function(value) {\n            if (/^DE[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            return FormValidation.Helper.mod11And10(value);\n        },\n\n        /**\n         * Validate Danish VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _dk: function(value) {\n            if (/^DK[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [2, 7, 6, 5, 4, 3, 2, 1];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 11 === 0);\n        },\n\n        /**\n         * Validate Estonian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ee: function(value) {\n            if (/^EE[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [3, 7, 1, 3, 7, 1, 3, 7, 1];\n            for (var i = 0; i < 9; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 10 === 0);\n        },\n\n        /**\n         * Validate Spanish VAT number (NIF - Número de Identificación Fiscal)\n         * Can be:\n         * i) DNI (Documento nacional de identidad), for Spaniards\n         * ii) NIE (Número de Identificación de Extranjeros), for foreigners\n         * iii) CIF (Certificado de Identificación Fiscal), for legal entities and others\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean|Object}\n         */\n        _es: function(value) {\n            if (/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {\n                return false;\n            }\n\n            var dni = function(value) {\n                    var check = parseInt(value.substr(0, 8), 10);\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\n                    return (check + '' === value.substr(8, 1));\n                },\n                nie = function(value) {\n                    var check = ['XYZ'.indexOf(value.charAt(0)), value.substr(1)].join('');\n                    check = parseInt(check, 10);\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\n                    return (check + '' === value.substr(8, 1));\n                },\n                cif = function(value) {\n                    var first = value.charAt(0), check;\n                    if ('KLM'.indexOf(first) !== -1) {\n                        // K: Spanish younger than 14 year old\n                        // L: Spanish living outside Spain without DNI\n                        // M: Granted the tax to foreigners who have no NIE\n                        check = parseInt(value.substr(1, 8), 10);\n                        check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\n                        return (check + '' === value.substr(8, 1));\n                    } else if ('ABCDEFGHJNPQRSUVW'.indexOf(first) !== -1) {\n                        var sum    = 0,\n                            weight = [2, 1, 2, 1, 2, 1, 2],\n                            temp   = 0;\n\n                        for (var i = 0; i < 7; i++) {\n                            temp = parseInt(value.charAt(i + 1), 10) * weight[i];\n                            if (temp > 9) {\n                                temp = Math.floor(temp / 10) + temp % 10;\n                            }\n                            sum += temp;\n                        }\n                        sum = 10 - sum % 10;\n                        if (sum === 10) {\n                            sum = 0;\n                        }\n                        return (sum + '' === value.substr(8, 1) || 'JABCDEFGHI'[sum] === value.substr(8, 1));\n                    }\n\n                    return false;\n                };\n\n            var first = value.charAt(0);\n            if (/^[0-9]$/.test(first)) {\n                return {\n                    valid: dni(value),\n                    type: 'DNI'\n                };\n            } else if (/^[XYZ]$/.test(first)) {\n                return {\n                    valid: nie(value),\n                    type: 'NIE'\n                };\n            } else {\n                return {\n                    valid: cif(value),\n                    type: 'CIF'\n                };\n            }\n        },\n\n        /**\n         * Validate Finnish VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _fi: function(value) {\n            if (/^FI[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [7, 9, 10, 5, 8, 4, 2, 1];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 11 === 0);\n        },\n\n        /**\n         * Validate French VAT number (TVA - taxe sur la valeur ajoutée)\n         * It's constructed by a SIREN number, prefixed by two characters.\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _fr: function(value) {\n            if (/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9A-Z]{2}[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            if (!FormValidation.Helper.luhn(value.substr(2))) {\n                return false;\n            }\n\n            if (/^[0-9]{2}$/.test(value.substr(0, 2))) {\n                // First two characters are digits\n                return value.substr(0, 2) === (parseInt(value.substr(2) + '12', 10) % 97 + '');\n            } else {\n                // The first characters cann't be O and I\n                var alphabet = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ',\n                    check;\n                // First one is digit\n                if (/^[0-9]{1}$/.test(value.charAt(0))) {\n                    check = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;\n                } else {\n                    check = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;\n                }\n                return ((parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11) === (check % 11);\n            }\n        },\n\n        /**\n         * Validate United Kingdom VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _gb: function(value) {\n            if (/^GB[0-9]{9}$/.test(value)             /* Standard */\n                || /^GB[0-9]{12}$/.test(value)         /* Branches */\n                || /^GBGD[0-9]{3}$/.test(value)        /* Government department */\n                || /^GBHA[0-9]{3}$/.test(value)        /* Health authority */\n                || /^GB(GD|HA)8888[0-9]{5}$/.test(value))\n            {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)\n                && !/^[0-9]{12}$/.test(value)\n                && !/^GD[0-9]{3}$/.test(value)\n                && !/^HA[0-9]{3}$/.test(value)\n                && !/^(GD|HA)8888[0-9]{5}$/.test(value))\n            {\n                return false;\n            }\n\n            var length = value.length;\n            if (length === 5) {\n                var firstTwo  = value.substr(0, 2),\n                    lastThree = parseInt(value.substr(2), 10);\n                return ('GD' === firstTwo && lastThree < 500) || ('HA' === firstTwo && lastThree >= 500);\n            } else if (length === 11 && ('GD8888' === value.substr(0, 6) || 'HA8888' === value.substr(0, 6))) {\n                if (('GD' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) >= 500)\n                    || ('HA' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) < 500))\n                {\n                    return false;\n                }\n                return (parseInt(value.substr(6, 3), 10) % 97 === parseInt(value.substr(9, 2), 10));\n            } else if (length === 9 || length === 12) {\n                var sum    = 0,\n                    weight = [8, 7, 6, 5, 4, 3, 2, 10, 1];\n                for (var i = 0; i < 9; i++) {\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\n                }\n                sum = sum % 97;\n\n                if (parseInt(value.substr(0, 3), 10) >= 100) {\n                    return (sum === 0 || sum === 42 || sum === 55);\n                } else {\n                    return (sum === 0);\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * Validate Greek VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _gr: function(value) {\n            if (/^(GR|EL)[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            if (value.length === 8) {\n                value = '0' + value;\n            }\n\n            var sum    = 0,\n                weight = [256, 128, 64, 32, 16, 8, 4, 2];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = (sum % 11) % 10;\n\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        // EL is traditionally prefix of Greek VAT numbers\n        _el: function(value) {\n            return this._gr(value);\n        },\n\n        /**\n         * Validate Hungarian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _hu: function(value) {\n            if (/^HU[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [9, 7, 3, 1, 9, 7, 3, 1];\n\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 10 === 0);\n        },\n\n        /**\n         * Validate Croatian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _hr: function(value) {\n            if (/^HR[0-9]{11}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n\n            return FormValidation.Helper.mod11And10(value);\n        },\n\n        /**\n         * Validate Irish VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ie: function(value) {\n            if (/^IE[0-9]{1}[0-9A-Z\\*\\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{1}[0-9A-Z\\*\\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {\n                return false;\n            }\n\n            var getCheckDigit = function(value) {\n                while (value.length < 7) {\n                    value = '0' + value;\n                }\n                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\n                    sum      = 0;\n                for (var i = 0; i < 7; i++) {\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\n                }\n                sum += 9 * alphabet.indexOf(value.substr(7));\n                return alphabet[sum % 23];\n            };\n\n            // The first 7 characters are digits\n            if (/^[0-9]+$/.test(value.substr(0, 7))) {\n                // New system\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\n            } else if ('ABCDEFGHIJKLMNOPQRSTUVWXYZ+*'.indexOf(value.charAt(1)) !== -1) {\n                // Old system\n                return value.charAt(7) === getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + '');\n            }\n\n            return true;\n        },\n\n        /**\n         * Validate Icelandic VAT (VSK) number\n         *\n         * @params {String} value VAT number\n         * @returns {Boolean}\n         */\n        _is: function(value) {\n            if (/^IS[0-9]{5,6}$/.test(value)) {\n                value = value.substr(2);\n            }\n            return /^[0-9]{5,6}$/.test(value);\n        },\n\n        /**\n         * Validate Italian VAT number, which consists of 11 digits.\n         * - First 7 digits are a company identifier\n         * - Next 3 are the province of residence\n         * - The last one is a check digit\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _it: function(value) {\n            if (/^IT[0-9]{11}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n\n            if (parseInt(value.substr(0, 7), 10) === 0) {\n                return false;\n            }\n\n            var lastThree = parseInt(value.substr(7, 3), 10);\n            if ((lastThree < 1) || (lastThree > 201) && lastThree !== 999 && lastThree !== 888) {\n                return false;\n            }\n\n            return FormValidation.Helper.luhn(value);\n        },\n\n        /**\n         * Validate Lithuanian VAT number\n         * It can be:\n         * - 9 digits, for legal entities\n         * - 12 digits, for temporarily registered taxpayers\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _lt: function(value) {\n            if (/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {\n                return false;\n            }\n\n            var length = value.length,\n                sum    = 0,\n                i;\n            for (i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * (1 + i % 9);\n            }\n            var check = sum % 11;\n            if (check === 10) {\n                sum = 0;\n                for (i = 0; i < length - 1; i++) {\n                    sum += parseInt(value.charAt(i), 10) * (1 + (i + 2) % 9);\n                }\n            }\n            check = check % 11 % 10;\n            return (check + '' === value.charAt(length - 1));\n        },\n\n        /**\n         * Validate Luxembourg VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _lu: function(value) {\n            if (/^LU[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            return ((parseInt(value.substr(0, 6), 10) % 89) + '' === value.substr(6, 2));\n        },\n\n        /**\n         * Validate Latvian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _lv: function(value) {\n            if (/^LV[0-9]{11}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{11}$/.test(value)) {\n                return false;\n            }\n\n            var first  = parseInt(value.charAt(0), 10),\n                sum    = 0,\n                weight = [],\n                i,\n                length = value.length;\n            if (first > 3) {\n                // Legal entity\n                sum    = 0;\n                weight = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1];\n                for (i = 0; i < length; i++) {\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\n                }\n                sum = sum % 11;\n                return (sum === 3);\n            } else {\n                // Check birth date\n                var day   = parseInt(value.substr(0, 2), 10),\n                    month = parseInt(value.substr(2, 2), 10),\n                    year  = parseInt(value.substr(4, 2), 10);\n                year = year + 1800 + parseInt(value.charAt(6), 10) * 100;\n\n                if (!FormValidation.Helper.date(year, month, day)) {\n                    return false;\n                }\n\n                // Check personal code\n                sum    = 0;\n                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\n                for (i = 0; i < length - 1; i++) {\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\n                }\n                sum = (sum + 1) % 11 % 10;\n                return (sum + '' === value.charAt(length - 1));\n            }\n        },\n\n        /**\n         * Validate Maltese VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _mt: function(value) {\n            if (/^MT[0-9]{8}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{8}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [3, 4, 6, 7, 8, 9, 10, 1];\n\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 37 === 0);\n        },\n\n        /**\n         * Validate Dutch VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _nl: function(value) {\n            if (/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {\n               value = value.substr(2);\n            }\n            if (!/^[0-9]{9}B[0-9]{2}$/.test(value)) {\n               return false;\n            }\n\n            var sum    = 0,\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            sum = sum % 11;\n            if (sum > 9) {\n                sum = 0;\n            }\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        /**\n         * Validate Norwegian VAT number\n         *\n         * @see http://www.brreg.no/english/coordination/number.html\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _no: function(value) {\n            if (/^NO[0-9]{9}$/.test(value)) {\n               value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n               return false;\n            }\n\n            var sum    = 0,\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            sum = 11 - sum % 11;\n            if (sum === 11) {\n                sum = 0;\n            }\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        /**\n         * Validate Polish VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _pl: function(value) {\n            if (/^PL[0-9]{10}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{10}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1];\n\n            for (var i = 0; i < 10; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            return (sum % 11 === 0);\n        },\n\n        /**\n         * Validate Portuguese VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _pt: function(value) {\n            if (/^PT[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            var sum    = 0,\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\n\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = 11 - sum % 11;\n            if (sum > 9) {\n                sum = 0;\n            }\n            return (sum + '' === value.substr(8, 1));\n        },\n\n        /**\n         * Validate Romanian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ro: function(value) {\n            if (/^RO[1-9][0-9]{1,9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[1-9][0-9]{1,9}$/.test(value)) {\n                return false;\n            }\n\n            var length = value.length,\n                weight = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - length),\n                sum    = 0;\n            for (var i = 0; i < length - 1; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n\n            sum = (10 * sum) % 11 % 10;\n            return (sum + '' === value.substr(length - 1, 1));\n        },\n\n        /**\n         * Validate Russian VAT number (Taxpayer Identification Number - INN)\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ru: function(value) {\n            if (/^RU([0-9]{10}|[0-9]{12})$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^([0-9]{10}|[0-9]{12})$/.test(value)) {\n                return false;\n            }\n\n            var i = 0;\n            if (value.length === 10) {\n                var sum    = 0,\n                    weight = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\n                for (i = 0; i < 10; i++) {\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\n                }\n                sum = sum % 11;\n                if (sum > 9) {\n                    sum = sum % 10;\n                }\n\n                return (sum + '' === value.substr(9, 1));\n            } else if (value.length === 12) {\n                var sum1    = 0,\n                    weight1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],\n                    sum2    = 0,\n                    weight2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\n\n                for (i = 0; i < 11; i++) {\n                    sum1 += parseInt(value.charAt(i), 10) * weight1[i];\n                    sum2 += parseInt(value.charAt(i), 10) * weight2[i];\n                }\n                sum1 = sum1 % 11;\n                if (sum1 > 9) {\n                    sum1 = sum1 % 10;\n                }\n                sum2 = sum2 % 11;\n                if (sum2 > 9) {\n                    sum2 = sum2 % 10;\n                }\n\n                return (sum1 + '' === value.substr(10, 1) && sum2 + '' === value.substr(11, 1));\n            }\n\n            return false;\n        },\n\n        /**\n         * Validate Serbian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _rs: function(value) {\n            if (/^RS[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            var sum  = 10,\n                temp = 0;\n            for (var i = 0; i < 8; i++) {\n                temp = (parseInt(value.charAt(i), 10) + sum) % 10;\n                if (temp === 0) {\n                    temp = 10;\n                }\n                sum = (2 * temp) % 11;\n            }\n\n            return ((sum + parseInt(value.substr(8, 1), 10)) % 10 === 1);\n        },\n\n        /**\n         * Validate Swedish VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _se: function(value) {\n            if (/^SE[0-9]{10}01$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[0-9]{10}01$/.test(value)) {\n                return false;\n            }\n\n            value = value.substr(0, 10);\n            return FormValidation.Helper.luhn(value);\n        },\n\n        /**\n         * Validate Slovenian VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _si: function(value) {\n            // The Slovenian VAT numbers don't start with zero\n            var res = value.match(/^(SI)?([1-9][0-9]{7})$/);\n            if (!res) {\n                return false;\n            }\n            if (res[1]) {\n                value = value.substr(2);\n            }\n\n            var sum    = 0,\n                weight = [8, 7, 6, 5, 4, 3, 2];\n\n            for (var i = 0; i < 7; i++) {\n                sum += parseInt(value.charAt(i), 10) * weight[i];\n            }\n            sum = 11 - sum % 11;\n            if (sum === 10) {\n                sum = 0;\n            }\n            return (sum + '' === value.substr(7, 1));\n        },\n\n        /**\n         * Validate Slovak VAT number\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _sk: function(value) {\n            if (/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {\n                return false;\n            }\n\n            return (parseInt(value, 10) % 11 === 0);\n        },\n\n        /**\n         * Validate Venezuelan VAT number (RIF)\n         *\n         * @param {String} value VAT number\n         * @returns {Boolean}\n         */\n        _ve: function(value) {\n            if (/^VE[VEJPG][0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n            if (!/^[VEJPG][0-9]{9}$/.test(value)) {\n                return false;\n            }\n\n            var types  = {\n                    'V': 4,\n                    'E': 8,\n                    'J': 12,\n                    'P': 16,\n                    'G': 20\n                },\n                sum    = types[value.charAt(0)],\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\n\n            for (var i = 0; i < 8; i++) {\n                sum += parseInt(value.charAt(i + 1), 10) * weight[i];\n            }\n\n            sum = 11 - sum % 11;\n            if (sum === 11 || sum === 10) {\n                sum = 0;\n            }\n            return (sum + '' === value.substr(9, 1));\n        },\n\n        /**\n         * Validate South African VAT number\n         *\n         * @params {String} value VAT number\n         * @returns {Boolean}\n         */\n         _za: function(value) {\n            if (/^ZA4[0-9]{9}$/.test(value)) {\n                value = value.substr(2);\n            }\n\n            return /^4[0-9]{9}$/.test(value);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            vin: {\n                'default': 'Please enter a valid VIN number'\n            }\n        }\n    });\n\n    FormValidation.Validator.vin = {\n        /**\n         * Validate an US VIN (Vehicle Identification Number)\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * @returns {Boolean}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '') {\n                return true;\n            }\n\n            // Don't accept I, O, Q characters\n            if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {\n                return false;\n            }\n\n            value = value.toUpperCase();\n            var chars   = {\n                    A: 1,   B: 2,   C: 3,   D: 4,   E: 5,   F: 6,   G: 7,   H: 8,\n                    J: 1,   K: 2,   L: 3,   M: 4,   N: 5,           P: 7,           R: 9,\n                            S: 2,   T: 3,   U: 4,   V: 5,   W: 6,   X: 7,   Y: 8,   Z: 9,\n                    '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '0': 0\n                },\n                weights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\n                sum     = 0,\n                length  = value.length;\n            for (var i = 0; i < length; i++) {\n                sum += chars[value.charAt(i) + ''] * weights[i];\n            }\n\n            var reminder = sum % 11;\n            if (reminder === 10) {\n                reminder = 'X';\n            }\n\n            return (reminder + '') === value.charAt(8);\n        }\n    };\n}(jQuery));\n;(function($) {\n    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {\n        'en_US': {\n            zipCode: {\n                'default': 'Please enter a valid postal code',\n                country: 'Please enter a valid postal code in %s',\n                countries: {\n                    AT: 'Austria',\n                    BG: 'Bulgaria',\n                    BR: 'Brazil',\n                    CA: 'Canada',\n                    CH: 'Switzerland',\n                    CZ: 'Czech Republic',\n                    DE: 'Germany',\n                    DK: 'Denmark',\n                    ES: 'Spain',\n                    FR: 'France',\n                    GB: 'United Kingdom',\n                    IE: 'Ireland',\n                    IN: 'India',\n                    IT: 'Italy',\n                    MA: 'Morocco',\n                    NL: 'Netherlands',\n                    PL: 'Poland',\n                    PT: 'Portugal',\n                    RO: 'Romania',\n                    RU: 'Russia',\n                    SE: 'Sweden',\n                    SG: 'Singapore',\n                    SK: 'Slovakia',\n                    US: 'USA'\n                }\n            }\n        }\n    });\n\n    FormValidation.Validator.zipCode = {\n        html5Attributes: {\n            message: 'message',\n            country: 'country'\n        },\n\n        COUNTRY_CODES: ['AT', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'ES', 'FR', 'GB', 'IE', 'IN', 'IT', 'MA', 'NL', 'PL', 'PT', 'RO', 'RU', 'SE', 'SG', 'SK', 'US'],\n\n        /**\n         * Return true if and only if the input value is a valid country zip code\n         *\n         * @param {FormValidation.Base} validator The validator plugin instance\n         * @param {jQuery} $field Field element\n         * @param {Object} options Consist of key:\n         * - message: The invalid message\n         * - country: The country\n         *\n         * The country can be defined by:\n         * - An ISO 3166 country code\n         * - Name of field which its value defines the country code\n         * - Name of callback function that returns the country code\n         * - A callback function that returns the country code\n         *\n         *  callback: function(value, validator, $field) {\n         *      // value is the value of field\n         *      // validator is the FormValidation.Base instance\n         *      // $field is jQuery element representing the field\n         *  }\n         *\n         * @returns {Boolean|Object}\n         */\n        validate: function(validator, $field, options, validatorName) {\n            var value = validator.getFieldValue($field, validatorName);\n            if (value === '' || !options.country) {\n                return true;\n            }\n\n            var locale  = validator.getLocale(),\n                country = options.country;\n            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\n                // Try to determine the country\n                country = validator.getDynamicOption($field, country);\n            }\n\n            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\n                return true;\n            }\n\n            var isValid = false;\n            country = country.toUpperCase();\n            switch (country) {\n                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Austria\n                case 'AT':\n                    isValid = /^([1-9]{1})(\\d{3})$/.test(value);\n                    break;\n\n                case 'BG':\n                    isValid = /^([1-9]{1}[0-9]{3})$/.test($.trim(value));\n                    break;\n\n                case 'BR':\n                    isValid = /^(\\d{2})([\\.]?)(\\d{3})([\\-]?)(\\d{3})$/.test(value);\n                    break;\n\n                case 'CA':\n                    isValid = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(value);\n                    break;\n\n                case 'CH':\n                    isValid = /^([1-9]{1})(\\d{3})$/.test(value);\n                    break;\n\n                case 'CZ':\n                    // Test: http://regexr.com/39hhr\n                    isValid = /^(\\d{3})([ ]?)(\\d{2})$/.test(value);\n                    break;\n\n                // http://stackoverflow.com/questions/7926687/regular-expression-german-zip-codes\n                case 'DE':\n                    isValid = /^(?!01000|99999)(0[1-9]\\d{3}|[1-9]\\d{4})$/.test(value);\n                    break;\n\n                case 'DK':\n                    isValid = /^(DK(-|\\s)?)?\\d{4}$/i.test(value);\n                    break;\n\n                // Zip codes in Spain go from 01XXX to 52XXX.\n                // Test: http://refiddle.com/1ufo\n                case 'ES':\n                    isValid = /^(?:0[1-9]|[1-4][0-9]|5[0-2])\\d{3}$/.test(value);\n                    break;\n\n                // http://en.wikipedia.org/wiki/Postal_codes_in_France\n                case 'FR':\n                    isValid = /^[0-9]{5}$/i.test(value);\n                    break;\n\n                case 'GB':\n                    isValid = this._gb(value);\n                    break;\n\n                // Indian PIN (Postal Index Number) validation\n                // http://en.wikipedia.org/wiki/Postal_Index_Number\n                // Test: http://regex101.com/r/kV0vH3/1\n                case 'IN':\n                    isValid = /^\\d{3}\\s?\\d{3}$/.test(value);\n                    break;\n\n                // http://www.eircode.ie/docs/default-source/Common/prepare-your-business-for-eircode---published-v2.pdf?sfvrsn=2\n                // Test: http://refiddle.com/1kpl\n                case 'IE':\n                    isValid = /^(D6W|[ACDEFHKNPRTVWXY]\\d{2})\\s[0-9ACDEFHKNPRTVWXY]{4}$/.test(value);\n                    break;\n\n                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Italy\n                case 'IT':\n                    isValid = /^(I-|IT-)?\\d{5}$/i.test(value);\n                    break;\n\n                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Morocco\n                case 'MA':\n                    isValid = /^[1-9][0-9]{4}$/i.test(value);\n                    break;\n\n                // http://en.wikipedia.org/wiki/Postal_codes_in_the_Netherlands\n                case 'NL':\n                    isValid = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(value);\n                    break;\n\n                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Poland\n                case 'PL':\n                    isValid = /^[0-9]{2}\\-[0-9]{3}$/.test(value);\n                    break;\n\n                // Test: http://refiddle.com/1l2t\n                case 'PT':\n                    isValid = /^[1-9]\\d{3}-\\d{3}$/.test(value);\n                    break;\n\n                case 'RO':\n                    isValid = /^(0[1-8]{1}|[1-9]{1}[0-5]{1})?[0-9]{4}$/i.test(value);\n                    break;\n\n                case 'RU':\n                    isValid = /^[0-9]{6}$/i.test(value);\n                    break;\n\n                case 'SE':\n                    isValid = /^(S-)?\\d{3}\\s?\\d{2}$/i.test(value);\n                    break;\n\n                case 'SG':\n                    isValid = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\\d{4})$/i.test(value);\n                    break;\n\n                case 'SK':\n                    // Test: http://regexr.com/39hhr\n                    isValid = /^(\\d{3})([ ]?)(\\d{2})$/.test(value);\n                    break;\n\n                case 'US':\n                /* falls through */\n                default:\n                    isValid = /^\\d{4,5}([\\-]?\\d{4})?$/.test(value);\n                    break;\n            }\n\n            return {\n                valid: isValid,\n                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].zipCode.country, FormValidation.I18n[locale].zipCode.countries[country])\n            };\n        },\n\n        /**\n         * Validate United Kingdom postcode\n         *\n         * @see http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom\n         * @param {String} value The postcode\n         * @returns {Boolean}\n         */\n        _gb: function(value) {\n            var firstChar  = '[ABCDEFGHIJKLMNOPRSTUWYZ]',     // Does not accept QVX\n                secondChar = '[ABCDEFGHKLMNOPQRSTUVWXY]',     // Does not accept IJZ\n                thirdChar  = '[ABCDEFGHJKPMNRSTUVWXY]',\n                fourthChar = '[ABEHMNPRVWXY]',\n                fifthChar  = '[ABDEFGHJLNPQRSTUWXYZ]',\n                regexps    = [\n                    // AN NAA, ANN NAA, AAN NAA, AANN NAA format\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '?[0-9]{1,2})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\n                    // ANA NAA\n                    new RegExp('^(' + firstChar + '{1}[0-9]{1}' + thirdChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\n                    // AANA NAA\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '{1}?[0-9]{1}' + fourthChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\n\n                    new RegExp('^(BF1)(\\\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$', 'i'),        // BFPO postcodes\n                    /^(GIR)(\\s*)(0AA)$/i,                       // Special postcode GIR 0AA\n                    /^(BFPO)(\\s*)([0-9]{1,4})$/i,               // Standard BFPO numbers\n                    /^(BFPO)(\\s*)(c\\/o\\s*[0-9]{1,3})$/i,        // c/o BFPO numbers\n                    /^([A-Z]{4})(\\s*)(1ZZ)$/i,                  // Overseas Territories\n                    /^(AI-2640)$/i                              // Anguilla\n                ];\n            for (var i = 0; i < regexps.length; i++) {\n                if (regexps[i].test(value)) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n}(jQuery));\n","/*!\n * FormValidation (http://formvalidation.io)\n * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks\n *\n * @version     v0.7.1, built on 2016-02-01 12:00:57 AM\n * @author      https://twitter.com/formvalidation\n * @copyright   (c) 2013 - 2016 Nguyen Huu Phuoc\n * @license     http://formvalidation.io/license/\n */\n/**\n * This class supports validating Bootstrap form (http://getbootstrap.com/)\n */\n(function($) {\n    FormValidation.Framework.Bootstrap = function(element, options, namespace) {\n        options = $.extend(true, {\n            button: {\n                selector: '[type=\"submit\"]:not([formnovalidate])',\n                // The class of disabled button\n                // http://getbootstrap.com/css/#buttons-disabled\n                disabled: 'disabled'\n            },\n            err: {\n                // http://getbootstrap.com/css/#forms-help-text\n                clazz: 'help-block',\n                parent: '^(.*)col-(xs|sm|md|lg)-(offset-){0,1}[0-9]+(.*)$'\n            },\n            // This feature requires Bootstrap v3.1.0 or later (http://getbootstrap.com/css/#forms-control-validation).\n            // Since Bootstrap doesn't provide any methods to know its version, this option cannot be on/off automatically.\n            // In other word, to use this feature you have to upgrade your Bootstrap to v3.1.0 or later.\n            //\n            // Examples:\n            // - Use Glyphicons icons:\n            //  icon: {\n            //      valid: 'glyphicon glyphicon-ok',\n            //      invalid: 'glyphicon glyphicon-remove',\n            //      validating: 'glyphicon glyphicon-refresh',\n            //      feedback: 'form-control-feedback'\n            //  }\n            // - Use FontAwesome icons:\n            //  icon: {\n            //      valid: 'fa fa-check',\n            //      invalid: 'fa fa-times',\n            //      validating: 'fa fa-refresh',\n            //      feedback: 'form-control-feedback'\n            //  }\n            icon: {\n                valid: null,\n                invalid: null,\n                validating: null,\n                feedback: 'form-control-feedback'\n            },\n            row: {\n                // By default, each field is placed inside the <div class=\"form-group\"></div>\n                // http://getbootstrap.com/css/#forms\n                selector: '.form-group',\n                valid: 'has-success',\n                invalid: 'has-error',\n                feedback: 'has-feedback'\n            }\n        }, options);\n\n        FormValidation.Base.apply(this, [element, options, namespace]);\n    };\n\n    FormValidation.Framework.Bootstrap.prototype = $.extend({}, FormValidation.Base.prototype, {\n        /**\n         * Specific framework might need to adjust the icon position\n         *\n         * @param {jQuery} $field The field element\n         * @param {jQuery} $icon The icon element\n         */\n        _fixIcon: function($field, $icon) {\n            var ns      = this._namespace,\n                type    = $field.attr('type'),\n                field   = $field.attr('data-' + ns + '-field'),\n                row     = this.options.fields[field].row || this.options.row.selector,\n                $parent = $field.closest(row);\n\n            // Place it after the container of checkbox/radio\n            // so when clicking the icon, it doesn't effect to the checkbox/radio element\n            if ('checkbox' === type || 'radio' === type) {\n                var $fieldParent = $field.parent();\n                if ($fieldParent.hasClass(type)) {\n                    $icon.insertAfter($fieldParent);\n                } else if ($fieldParent.parent().hasClass(type)) {\n                    $icon.insertAfter($fieldParent.parent());\n                }\n            }\n\n            // The feedback icon does not render correctly if there is no label\n            // https://github.com/twbs/bootstrap/issues/12873\n            if ($parent.find('label').length === 0) {\n                $icon.addClass('fv-icon-no-label');\n            }\n            // Fix feedback icons in input-group\n            if ($parent.find('.input-group').length !== 0) {\n                $icon.addClass('fv-bootstrap-icon-input-group')\n                     .insertAfter($parent.find('.input-group').eq(0));\n            }\n        },\n\n        /**\n         * Create a tooltip or popover\n         * It will be shown when focusing on the field\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} message The message\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _createTooltip: function($field, message, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon\n                            .css({\n                                'cursor': 'pointer',\n                                'pointer-events': 'auto'\n                            })\n                            .popover('destroy')\n                            .popover({\n                                container: 'body',\n                                content: message,\n                                html: true,\n                                placement: 'auto top',\n                                trigger: 'hover click'\n                            });\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon\n                            .css({\n                                'cursor': 'pointer',\n                                'pointer-events': 'auto'\n                            })\n                            .tooltip('destroy')\n                            .tooltip({\n                                container: 'body',\n                                html: true,\n                                placement: 'auto top',\n                                title: message\n                            });\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Destroy the tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _destroyTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon\n                            .css({\n                                'cursor': '',\n                                'pointer-events': 'none'\n                            })\n                            .popover('destroy');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon\n                            .css({\n                                'cursor': '',\n                                'pointer-events': 'none'\n                            })\n                            .tooltip('destroy');\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Hide a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _hideTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon.popover('hide');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon.tooltip('hide');\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Show a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _showTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon.popover('show');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon.tooltip('show');\n                        break;\n                }\n            }\n        }\n    });\n\n    /**\n     * Plugin definition\n     * Support backward\n     * @deprecated It will be removed soon. Instead of using $(form).bootstrapValidator(), use\n     *  $(form).formValidation({\n     *      framework: 'bootstrap'  // It's equivalent to use data-fv-framework=\"bootstrap\" for <form>\n     *  });\n     */\n    $.fn.bootstrapValidator = function(option) {\n        var params = arguments;\n        return this.each(function() {\n            var $this   = $(this),\n                data    = $this.data('formValidation') || $this.data('bootstrapValidator'),\n                options = 'object' === typeof option && option;\n            if (!data) {\n                data = new FormValidation.Framework.Bootstrap(this, $.extend({}, {\n                    events: {\n                        // Support backward\n                        formInit: 'init.form.bv',\n                        formPreValidate: 'prevalidate.form.bv',\n                        formError: 'error.form.bv',\n                        formSuccess: 'success.form.bv',\n                        fieldAdded: 'added.field.bv',\n                        fieldRemoved: 'removed.field.bv',\n                        fieldInit: 'init.field.bv',\n                        fieldError: 'error.field.bv',\n                        fieldSuccess: 'success.field.bv',\n                        fieldStatus: 'status.field.bv',\n                        localeChanged: 'changed.locale.bv',\n                        validatorError: 'error.validator.bv',\n                        validatorSuccess: 'success.validator.bv'\n                    }\n                }, options), 'bv');\n\n                $this.addClass('fv-form-bootstrap')\n                     .data('formValidation', data)\n                     .data('bootstrapValidator', data);\n            }\n\n            // Allow to call plugin method\n            if ('string' === typeof option) {\n                data[option].apply(data, Array.prototype.slice.call(params, 1));\n            }\n        });\n    };\n\n    $.fn.bootstrapValidator.Constructor = FormValidation.Framework.Bootstrap;\n}(jQuery));\n"],"sourceRoot":"/source/"}